[
    {
        "id": "b65661d8.d7be2",
        "type": "tab",
        "label": "backend",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4040fea9.8edac",
        "type": "tab",
        "label": "thr",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9d5126d6.f23448",
        "type": "tab",
        "label": "Parking",
        "disabled": false,
        "info": ""
    },
    {
        "id": "167ec5b.9b9513a",
        "type": "tab",
        "label": "Energie",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e51008a5.27ff68",
        "type": "tab",
        "label": "Impulsion",
        "disabled": false,
        "info": ""
    },
    {
        "id": "876e2113.a1b7f",
        "type": "tab",
        "label": "qualité air",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4cd1e924.33edf8",
        "type": "subflow",
        "name": "ui-table handler",
        "info": "# ui-table handler\nUniversal handler for ui-table.\n## features\n- buffer table data\n- add or update individual rows or cells of the table\n- delete rows\n- clear tableData\n- handle column width\n- handle column order\n- hide und unhide columns\n- hide and unhide rows\n- records row order\n- support for nested columns [(column groups)](http://tabulator.info/examples/4.7#column-groups)\n- support for child rows (_children) [(nested data trees)](http://tabulator.info/examples/4.7#tree)\n\nFor real life example see:\n\n**syslog server** for logfile like table with filters\n\n**remote device table** for dynamically updated table with context menues\n\n**irrigation system** for sortable rows\n\n## sending data to ui-tabel\n\n- sending an `array` as discribed in ui-table will replace the complete table and delete all table edits\n  \n  if `msg.keepEdits=true` is added the existing edits will be kept.\n- send an `object` containing the updated properties of a table row by sending msg.<tableDataProp>.\n\n  The table is updated using the `updateOrAddData` command. You can alter the command used by adding the `msg.tabulatorCommand` and `msg.tabulatorParameter`\n\n```\nmsg.tabulatorCommand=\"addData\";\nmsg.tabulatorParameter=[true];\n```\n## configuration\n- `tabulator` json formatted object containing configuration of the table. See ui-table for more details.\n- `property` property of the msg object that contains the data to be passed to ui-table. I.e. *state* `msg.state`\n- `index` index column to identify individual rows. Each message containing data must have a unique `msg.topic` to identify the row. Messages without this `msg.topic` will be droped. It is not nessesary but possible to display the index column in the table. Do not enable editing on this column otherwise you will loose the connection and another row will be added to the table as soon as a new message arrives!\n\n   Defaults to *$topic* `msg.state.$topic`\n- `maxRows`maximum number of rows held by table widget. If grater than **0** the amount of rows in ui-table is limited. For this to work the index row must be a Number. ´rows < currentID-maxRows´ will be deleted.\n- `maxStore`maximum number of rows stored by this node for replay if a client connects. If grater than **0** the amount of rows in flow context is limited. for this to work the index row must be a Number. ´rows < currentID-maxStore´ will be deleted.\n- `dashboard` name of the dashboard tab to only update the table if the dashboard is visible. If empty the table will be updated on every tab change and connect.\n- `context` configuration of context data. The subflow will save or cache data in the flows context using `$parent.`. \n   **tableData** caches the incoming data to restore it on `ui-control´ *change* messages.\n   **tableConfig** saves column width and order to save the interactive table layot\n   **tableEdit** saves edits on the table data otherwise it would be overwritten when new data arrives\n```json\n{\n    \"tableData\": {\n        \"name\": \"tableData\"\n    },\n    \"tableConfig\": {\n        \"name\": \"tableConfig\",\n        \"storage\": \"file\"\n    },\n    \"tableEdit\": {\n        \"name\": \"tableEdit\",\n        \"storage\": \"file\"\n    }\n}\n```\n\n## commands\ncommands can be passed by sending a object as `msg.payload`\n\n```json\n{\n    \"command\": \"delete\",\n    \"object\": \"columnOrder\"\n}\n```\n\n- `deleteTable` tableCache\n- `deleteRow` delete single row. `object` matching index property\n- `ignoreRow` delete single row and put it on an ignore list. `object` matching index property\n- `unIgnoreRow`remove row from the ignore list.  `object` matching index property\n- `unIgnoreRows`delte the ignore list. \n- `deleteRowOrder` delete custom row order\n- `deleteColumnOrder` delete custom column order\n  This is important if you add or delete columns in the tabulator config otherwise the columns most likely don`t show up\n- `deleteColumnWidth` delete custom column width\n- `columnHide` hide a column. `object` matching column field\n- `columnUnHide` unhide a column. `object` matching column field\n- `columnsUnHide` unhide all hidden columns.\n- `setMaxStore` set maximum amount of rows in cache\n- `setMaxDisplay` set maximum amout of rows in ui-table\n- `getTable` get table data (as displayed) as an array (on 2nd output)\n \n## background\nui-table warps the powerfull tabluator library.  This subflow makes it easier to unleash the powerfull features of ui-table",
        "category": "dashboard",
        "in": [
            {
                "x": 54,
                "y": 85,
                "wires": [
                    {
                        "id": "1617178b.26abe8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 85,
                "wires": [
                    {
                        "id": "1617178b.26abe8",
                        "port": 1
                    }
                ]
            },
            {
                "x": 360,
                "y": 136,
                "wires": [
                    {
                        "id": "1617178b.26abe8",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "tabulator",
                "type": "json",
                "value": "{\"tabulator\":{\"responsiveLayout\":\"collapse\",\"responsiveLayoutCollapseStartOpen\":false,\"index\":\"$name\",\"layout\":\"fitColumns\",\"movableColumns\":true,\"groupBy\":\"\",\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.definition.field, 'title': column._column.definition.title});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"rowFormatter\":\"function(row){     var data = row.getData();     switch (data.$state) {         case \\\"lost\\\":             row.getElement().style.backgroundColor = \\\"#9e2e66\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"sleeping\\\":             row.getElement().style.backgroundColor = \\\"#336699\\\";             break;         case \\\"disconnected\\\":             row.getElement().style.backgroundColor = \\\"#cc3300\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"alert\\\":             row.getElement().style.backgroundColor = \\\"#A6A6DF\\\";             break;         case \\\"init\\\":             row.getElement().style.backgroundColor = \\\"#f2f20d\\\";             break;         case \\\"ready\\\":             row.getElement().style.backgroundColor = \\\"\\\";             row.getElement().style.color = \\\"\\\";             break;         } }\",\"columns\":[{\"formatter\":\"responsiveCollapse\",\"width\":30,\"minWidth\":30,\"align\":\"center\",\"resizable\":false,\"headerSort\":false,\"frozen\":true,\"title\":\"expand\",\"field\":\"expand\",\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {      var html = cell.getValue(); return html;  }\",\"title\":\"State\",\"field\":\"$stateIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {     var html = cell.getValue(); return html;  }\",\"title\":\"Signal\",\"field\":\"signalIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"Name\",\"field\":\"$name\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"State\",\"field\":\"$state\",\"width\":100,\"align\":\"center\",\"headerVertical\":\"flip\"},{\"title\":\"last-ready\",\"field\":\"lastSeenreadyFormatted\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Homie\",\"field\":\"$homie\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Platform\",\"field\":\"$implementation\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Statistics\",\"columns\":[{\"title\":\"Interval\",\"field\":\"interval\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"outputFormat\":\"d hh:mm:ss\",\"inputFormat\":\"seconds\",\"invalidPlaceholder\":\"(unknown)\"},\"title\":\"Uptime\",\"field\":\"uptime\",\"formatter\":\"function(cell, formatterParams, onRendered){     var pad = function (num) {         return (\\\"0\\\"+num).slice(-2);     };     var secs = Number(cell.getValue());     if (Number.isNaN(secs)) return;     var minutes = Math.floor(secs / 60);     secs = secs%60;     var hours = Math.floor(minutes/60);     minutes = minutes%60;     var days = Math.floor(hours/24);     hours = hours%24;     if (days>0)         return days+\\\"d \\\"+pad(hours)+\\\":\\\"+pad(minutes);     else         return pad(hours)+\\\":\\\"+pad(minutes)+\\\":\\\"+pad(secs); }\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\"; else return; }\",\"legendColor\":\"#FFFFFF\",\"legendAlign\":\"center\"},\"title\":\"Signal\",\"field\":\"signal\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":2.5,\"max\":3.5,\"color\":[\"red\",\"green\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" V</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Supply\",\"field\":\"supply\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Battery\",\"field\":\"battery\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100000,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+(value/1024).toFixed(2)+\\\" kB</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Memory\",\"field\":\"freeheap\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU load\",\"field\":\"cpuload\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":20,\"max\":60,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" °C</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU temp\",\"field\":\"cputemp\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"}]},{\"title\":\"Firmware\",\"columns\":[{\"formatter\":\"link\",\"formatterParams\":{\"labelField\":\"$localip\",\"urlPrefix\":\"http://\",\"target\":\"_blank\"},\"title\":\"IP\",\"field\":\"$localip\",\"width\":100},{\"title\":\"mac\",\"field\":\"$mac\",\"width\":100},{\"title\":\"Accsess Point\",\"field\":\"SSID\",\"width\":100},{\"title\":\"Firmware\",\"field\":\"name\",\"width\":100},{\"title\":\"Version\",\"field\":\"version\",\"width\":100},{\"title\":\"Last Boot Cause\",\"field\":\"lastBootCause\",\"width\":100},{\"title\":\"Reset Reason\",\"field\":\"resetReason\",\"width\":100}]}]},\"customHeight\":12}",
                "ui": {
                    "icon": "font-awesome/fa-table",
                    "label": {
                        "en-US": "Tabulator"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableDataProp",
                "type": "str",
                "value": "row",
                "ui": {
                    "icon": "font-awesome/fa-tag",
                    "label": {
                        "en-US": "rowProperty"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableIndex",
                "type": "str",
                "value": "$topic",
                "ui": {
                    "icon": "font-awesome/fa-indent",
                    "label": {
                        "en-US": "Index"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "maxRows",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-list-ol",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num",
                            "bool",
                            "env"
                        ]
                    },
                    "label": {}
                }
            },
            {
                "name": "maxStore",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num",
                            "env"
                        ]
                    },
                    "label": {}
                }
            },
            {
                "name": "dashboard",
                "type": "str",
                "value": "Remote Device Table",
                "ui": {
                    "icon": "font-awesome/fa-dashboard",
                    "label": {
                        "en-US": "Dashboard"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableContext",
                "type": "json",
                "value": "{\"tableData\":{\"name\":\"tableData\"},\"tableConfig\":{\"name\":\"tableConfig\",\"storage\":\"file\"},\"tableEdit\":{\"name\":\"tableEdit\",\"storage\":\"file\"}}",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "label": {
                        "en-US": "Context"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            }
        ],
        "color": "#3FADB5",
        "icon": "node-red-dashboard/ui_slider.png",
        "status": {
            "x": 360,
            "y": 34,
            "wires": [
                {
                    "id": "1617178b.26abe8",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "74a2e824.f51068",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "application perpignan",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 38,
                "sy": 38,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "69955c64.506a94",
        "type": "sqlitedb",
        "z": "",
        "db": "/data/datavolume1/db1",
        "mode": "RW"
    },
    {
        "id": "c8dc61c.f1eb9a",
        "type": "ui_group",
        "z": "",
        "name": "Graph",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 20,
        "collapse": false
    },
    {
        "id": "ca2c9371.cccba",
        "type": "ui_group",
        "z": "",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 22,
        "collapse": false
    },
    {
        "id": "d4eab11f.ed1c5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ca2c9371.cccba",
        "order": 3,
        "width": 21,
        "height": 1
    },
    {
        "id": "340f16e5.0db0da",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "chirpstack-docker_mosquitto_1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "b6b4e8f8.9df1b8",
        "type": "ui_group",
        "z": "",
        "name": "map",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "bc51ebe9.2d8c38",
        "type": "ui_tab",
        "z": "",
        "name": "Accueil",
        "icon": "fa-list-alt",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1605543a.aa9f8c",
        "type": "ui_group",
        "z": "",
        "name": "Liste des capteurs et dernière transmission",
        "tab": "bc51ebe9.2d8c38",
        "order": 1,
        "disp": true,
        "width": "19",
        "collapse": false
    },
    {
        "id": "4c1aeb4a.6b7814",
        "type": "ui_group",
        "z": "",
        "name": "Map",
        "tab": "a7280d0.e0ab2f",
        "order": 1,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "a7280d0.e0ab2f",
        "type": "ui_tab",
        "z": "",
        "name": "Parking",
        "icon": "fa-car",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "98918f5.413087",
        "type": "ui_group",
        "z": "",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "2bac2caf.e54904",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "98918f5.413087",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "3b516420.11d69c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "78ba9500.47e45c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "5e585a3c.08be04",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "39457a40.1609b6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 13,
        "width": 7,
        "height": 1
    },
    {
        "id": "ce177152.46ae3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 14,
        "width": 30,
        "height": 1
    },
    {
        "id": "c0bfa670.1aed88",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 15,
        "width": 8,
        "height": 1
    },
    {
        "id": "52e846b9.2e4578",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 19,
        "width": 19,
        "height": 1
    },
    {
        "id": "37d31b4b.d19224",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 20,
        "width": 30,
        "height": 1
    },
    {
        "id": "3813f0bb.192bc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 21,
        "width": 30,
        "height": 1
    },
    {
        "id": "53f638b9.19b308",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 22,
        "width": 30,
        "height": 1
    },
    {
        "id": "2aef0882.eafbb8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 23,
        "width": 30,
        "height": 1
    },
    {
        "id": "c717e37c.56c7a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 24,
        "width": 30,
        "height": 1
    },
    {
        "id": "60ab771b.4728d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 25,
        "width": 30,
        "height": 1
    },
    {
        "id": "ecb18496.2dd4d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 26,
        "width": 30,
        "height": 1
    },
    {
        "id": "ce858285.6fe8f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 27,
        "width": 30,
        "height": 1
    },
    {
        "id": "c26c5dc0.ee299",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 28,
        "width": 30,
        "height": 1
    },
    {
        "id": "8dd66f02.f1959",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 29,
        "width": 30,
        "height": 1
    },
    {
        "id": "cb066b09.adf5f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 30,
        "width": 30,
        "height": 1
    },
    {
        "id": "7f3e3674.5ce408",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 31,
        "width": 30,
        "height": 1
    },
    {
        "id": "c94cb0fb.20225",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 32,
        "width": 30,
        "height": 1
    },
    {
        "id": "69080dbf.8c9864",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 33,
        "width": 30,
        "height": 1
    },
    {
        "id": "9f0f947e.f7e268",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 38,
        "width": 8,
        "height": 1
    },
    {
        "id": "d6df0041.dae64",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 40,
        "width": 8,
        "height": 1
    },
    {
        "id": "b61073ff.cb75c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 41,
        "width": 19,
        "height": 1
    },
    {
        "id": "fbdd9136.29c7f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 42,
        "width": 3,
        "height": 1
    },
    {
        "id": "8fe26384.cf6cc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 43,
        "width": 22,
        "height": 1
    },
    {
        "id": "6c609231.5254dc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 44,
        "width": 3,
        "height": 1
    },
    {
        "id": "b573f4ae.2d7588",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 45,
        "width": 22,
        "height": 1
    },
    {
        "id": "817994b1.53c378",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c8dc61c.f1eb9a",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "4cbd2cf2.21f064",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c8dc61c.f1eb9a",
        "order": 11,
        "width": 8,
        "height": 1
    },
    {
        "id": "65eadf50.f618e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "b6332f3f.135d2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "eb84de70.cf0ad",
        "type": "sqlitedb",
        "z": "",
        "db": "/data/datavolume1/db1",
        "mode": "RWC"
    },
    {
        "id": "7bb3e04c.8ccbe",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "chirpstack-docker_mosquitto_1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "86e70ea9.b71f7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b6b4e8f8.9df1b8",
        "order": 11,
        "width": 6,
        "height": 1
    },
    {
        "id": "5b5f6a48.d0aba4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b6b4e8f8.9df1b8",
        "order": 12,
        "width": 6,
        "height": 1
    },
    {
        "id": "70d8ab5b.506a34",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b6b4e8f8.9df1b8",
        "order": 14,
        "width": 30,
        "height": 1
    },
    {
        "id": "224f5614.6eb65a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b6b4e8f8.9df1b8",
        "order": 17,
        "width": 11,
        "height": 1
    },
    {
        "id": "a4581fed.fb3fa",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b6b4e8f8.9df1b8",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "19b47740.2d4749",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b6b4e8f8.9df1b8",
        "order": 22,
        "width": 6,
        "height": 1
    },
    {
        "id": "8895466b.6a4b48",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b6b4e8f8.9df1b8",
        "order": 23,
        "width": 15,
        "height": 1
    },
    {
        "id": "346ce54b.66cc6a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b6b4e8f8.9df1b8",
        "order": 25,
        "width": 4,
        "height": 1
    },
    {
        "id": "bd9f5b02.854108",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "chirpstack-docker_mosquitto_1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "666416d8.e6f858",
        "type": "sqlitedb",
        "z": "",
        "db": "/db/database/dbdemonstrateur",
        "mode": "RWC"
    },
    {
        "id": "535a4eec.918f",
        "type": "ui_group",
        "z": "",
        "name": "map",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "18",
        "collapse": false
    },
    {
        "id": "ffcc3881.8cec68",
        "type": "ui_group",
        "z": "",
        "name": "value",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "9",
        "collapse": false
    },
    {
        "id": "efa68ace.fd2d18",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 3,
        "width": 15,
        "height": 1
    },
    {
        "id": "38fdd25d.14907e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 4,
        "width": 15,
        "height": 1
    },
    {
        "id": "35192bc5.4f18b4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 5,
        "width": 15,
        "height": 1
    },
    {
        "id": "13991c3d.e82d94",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 6,
        "width": 15,
        "height": 1
    },
    {
        "id": "d67a5c97.c6b33",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 7,
        "width": 15,
        "height": 1
    },
    {
        "id": "14a698f4.f39557",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 8,
        "width": 15,
        "height": 1
    },
    {
        "id": "4ee23f19.2e51e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 9,
        "width": 15,
        "height": 1
    },
    {
        "id": "8158bdb6.b7161",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 10,
        "width": 15,
        "height": 1
    },
    {
        "id": "6cc3cb47.859854",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 11,
        "width": 15,
        "height": 1
    },
    {
        "id": "3a82a9ae.f8d066",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 12,
        "width": 15,
        "height": 1
    },
    {
        "id": "39852ae0.4f4106",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 13,
        "width": 15,
        "height": 1
    },
    {
        "id": "1b04d230.eb9cbe",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 14,
        "width": 15,
        "height": 1
    },
    {
        "id": "884ea55.0183058",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 15,
        "width": 15,
        "height": 1
    },
    {
        "id": "3ba59651.0faa4a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 16,
        "width": 15,
        "height": 1
    },
    {
        "id": "119c25f0.438e6a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "3523bbf3.2437c4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "aed105d.9a4b0f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 5,
        "width": 4,
        "height": 1
    },
    {
        "id": "947bf557.d60638",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 7,
        "width": 4,
        "height": 1
    },
    {
        "id": "ce0490a1.5670f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "8c46dfac.e6e7c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 9,
        "width": 4,
        "height": 1
    },
    {
        "id": "985c9bb4.a58ed8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 11,
        "width": 9,
        "height": 1
    },
    {
        "id": "af93f377.63e69",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 12,
        "width": 9,
        "height": 1
    },
    {
        "id": "16ea0643.34008a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 13,
        "width": 9,
        "height": 1
    },
    {
        "id": "99164241.46c15",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 14,
        "width": 9,
        "height": 1
    },
    {
        "id": "5c59e3a7.ef670c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 15,
        "width": 9,
        "height": 1
    },
    {
        "id": "604b614a.a8f8d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 16,
        "width": 9,
        "height": 1
    },
    {
        "id": "e5014db2.42a14",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 17,
        "width": 9,
        "height": 1
    },
    {
        "id": "4eddad97.e0aa34",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 18,
        "width": 9,
        "height": 1
    },
    {
        "id": "dccf24ee.4a5338",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 19,
        "width": 9,
        "height": 1
    },
    {
        "id": "76eea7ca.81e068",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 20,
        "width": 9,
        "height": 1
    },
    {
        "id": "ce237ec8.372e4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 21,
        "width": 9,
        "height": 1
    },
    {
        "id": "deffb0cc.856b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 22,
        "width": 9,
        "height": 1
    },
    {
        "id": "3857ba51.dea056",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 23,
        "width": 9,
        "height": 1
    },
    {
        "id": "815b76d0.64c298",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 24,
        "width": 9,
        "height": 1
    },
    {
        "id": "564a43df.375d7c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 25,
        "width": 9,
        "height": 1
    },
    {
        "id": "5170690d.70fe98",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 26,
        "width": 9,
        "height": 1
    },
    {
        "id": "69e196de.4d9d68",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 27,
        "width": 9,
        "height": 1
    },
    {
        "id": "e83079a1.5b03c8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 28,
        "width": 9,
        "height": 1
    },
    {
        "id": "db25eeb6.0d5c4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 29,
        "width": 9,
        "height": 1
    },
    {
        "id": "416826f.0202fd8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 30,
        "width": 9,
        "height": 1
    },
    {
        "id": "db870e09.8c938",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 31,
        "width": 9,
        "height": 1
    },
    {
        "id": "1a29658c.56e2ba",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 32,
        "width": 9,
        "height": 1
    },
    {
        "id": "ee08785f.5edd98",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 33,
        "width": 9,
        "height": 1
    },
    {
        "id": "e0b86229.51534",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 34,
        "width": 9,
        "height": 1
    },
    {
        "id": "1b1e21f.024c2de",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 35,
        "width": 9,
        "height": 1
    },
    {
        "id": "82b05ac7.f0a488",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 36,
        "width": 9,
        "height": 1
    },
    {
        "id": "9a37916.3b5d57",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 37,
        "width": 9,
        "height": 1
    },
    {
        "id": "75cf519.97c98b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 38,
        "width": 9,
        "height": 1
    },
    {
        "id": "90d9a10.db1556",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 39,
        "width": 9,
        "height": 1
    },
    {
        "id": "1f499623.12b29a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 40,
        "width": 9,
        "height": 1
    },
    {
        "id": "412a58af.9b94e8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 41,
        "width": 9,
        "height": 1
    },
    {
        "id": "74776054.b48c9",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 42,
        "width": 9,
        "height": 1
    },
    {
        "id": "14584242.f667ce",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 43,
        "width": 9,
        "height": 1
    },
    {
        "id": "28cd3a92.9b83e6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 44,
        "width": 9,
        "height": 1
    },
    {
        "id": "faf92d8c.dd9d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 45,
        "width": 9,
        "height": 1
    },
    {
        "id": "e0f27665.ab1e38",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 46,
        "width": 9,
        "height": 1
    },
    {
        "id": "2f9fee6b.f9d182",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 47,
        "width": 9,
        "height": 1
    },
    {
        "id": "f6545e72.7cef2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 48,
        "width": 9,
        "height": 1
    },
    {
        "id": "c546fe39.54fef",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 49,
        "width": 9,
        "height": 1
    },
    {
        "id": "d94399d4.c8fca8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 50,
        "width": 9,
        "height": 1
    },
    {
        "id": "299e2e6c.0cf132",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 51,
        "width": 9,
        "height": 1
    },
    {
        "id": "53a79b47.a10194",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 52,
        "width": 9,
        "height": 1
    },
    {
        "id": "f69e2119.58b45",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 53,
        "width": 9,
        "height": 1
    },
    {
        "id": "c678eec6.bb938",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 54,
        "width": 9,
        "height": 1
    },
    {
        "id": "3762820f.d1489e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 55,
        "width": 9,
        "height": 1
    },
    {
        "id": "b6fc5f5.e033aa",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 56,
        "width": 9,
        "height": 1
    },
    {
        "id": "79c8da8c.113e04",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 57,
        "width": 9,
        "height": 1
    },
    {
        "id": "5020c640.2a5a78",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 58,
        "width": 9,
        "height": 1
    },
    {
        "id": "c4dd1c1d.aa828",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 59,
        "width": 9,
        "height": 1
    },
    {
        "id": "e6713ae5.32e3d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 60,
        "width": 9,
        "height": 1
    },
    {
        "id": "17e9706b.72a68",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 61,
        "width": 9,
        "height": 1
    },
    {
        "id": "a0d860a2.dfcd6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 62,
        "width": 9,
        "height": 1
    },
    {
        "id": "9ea1cc53.826c8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 63,
        "width": 9,
        "height": 1
    },
    {
        "id": "b382651c.442b78",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 64,
        "width": 9,
        "height": 1
    },
    {
        "id": "d61f9ff6.a2206",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 65,
        "width": 9,
        "height": 1
    },
    {
        "id": "355748a2.5faa18",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 66,
        "width": 9,
        "height": 1
    },
    {
        "id": "912dd0e5.39be6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 67,
        "width": 9,
        "height": 1
    },
    {
        "id": "3e2677e8.00f9f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 69,
        "width": 9,
        "height": 1
    },
    {
        "id": "7addc231.64cd1c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 70,
        "width": 9,
        "height": 1
    },
    {
        "id": "8a9c879d.4383c8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 71,
        "width": 9,
        "height": 1
    },
    {
        "id": "37e08390.0b9bbc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 72,
        "width": 9,
        "height": 1
    },
    {
        "id": "da3d4cce.a7ef8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 73,
        "width": 9,
        "height": 1
    },
    {
        "id": "f87d9e2b.47d1c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 74,
        "width": 9,
        "height": 1
    },
    {
        "id": "8fbf31a7.573e6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 3,
        "width": 15,
        "height": 1
    },
    {
        "id": "5af2fce4.9d5cd4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 4,
        "width": 15,
        "height": 1
    },
    {
        "id": "de6cdc16.648ae",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 5,
        "width": 15,
        "height": 1
    },
    {
        "id": "a6cdc645.007bc8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 6,
        "width": 15,
        "height": 1
    },
    {
        "id": "e4f08b38.be6998",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 7,
        "width": 15,
        "height": 1
    },
    {
        "id": "40db6206.8b414c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 8,
        "width": 15,
        "height": 1
    },
    {
        "id": "ae277a14.6b5ad8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 9,
        "width": 15,
        "height": 1
    },
    {
        "id": "d99b9e6e.f646b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 10,
        "width": 15,
        "height": 1
    },
    {
        "id": "cab8ef.ec04371",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 11,
        "width": 15,
        "height": 1
    },
    {
        "id": "7e3cc14f.5cda",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 12,
        "width": 15,
        "height": 1
    },
    {
        "id": "960943d2.6800e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 13,
        "width": 15,
        "height": 1
    },
    {
        "id": "b702b8be.b79978",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 14,
        "width": 15,
        "height": 1
    },
    {
        "id": "382f0633.11acda",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 15,
        "width": 15,
        "height": 1
    },
    {
        "id": "98fbf0e.3afc71",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 16,
        "width": 15,
        "height": 1
    },
    {
        "id": "661e46b0.17b038",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "535a4eec.918f",
        "order": 17,
        "width": 15,
        "height": 1
    },
    {
        "id": "fa1c3b2b.21ce78",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "8151c83b.26a538",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "3e0a1c8b.519a14",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 5,
        "width": 4,
        "height": 1
    },
    {
        "id": "7d40a584.b91c7c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 7,
        "width": 4,
        "height": 1
    },
    {
        "id": "90069da7.08038",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "16cd9ff8.00d5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 9,
        "width": 4,
        "height": 1
    },
    {
        "id": "f2afaae8.d72808",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 11,
        "width": 9,
        "height": 1
    },
    {
        "id": "cce24c51.33343",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 12,
        "width": 9,
        "height": 1
    },
    {
        "id": "e1ea7bbf.6d19a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 13,
        "width": 9,
        "height": 1
    },
    {
        "id": "d340b3fc.bde4a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 14,
        "width": 9,
        "height": 1
    },
    {
        "id": "8e785f7a.16a45",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 15,
        "width": 9,
        "height": 1
    },
    {
        "id": "941a9b92.b098b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 16,
        "width": 9,
        "height": 1
    },
    {
        "id": "555fb29f.25970c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 17,
        "width": 9,
        "height": 1
    },
    {
        "id": "2851b3d3.01a31c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 18,
        "width": 9,
        "height": 1
    },
    {
        "id": "f9ff8e6.13ee47",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 19,
        "width": 9,
        "height": 1
    },
    {
        "id": "1e8eee73.62de52",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 20,
        "width": 9,
        "height": 1
    },
    {
        "id": "29297471.47ab5c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 21,
        "width": 9,
        "height": 1
    },
    {
        "id": "96a30542.726628",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 22,
        "width": 9,
        "height": 1
    },
    {
        "id": "a2c1543a.f43478",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 23,
        "width": 9,
        "height": 1
    },
    {
        "id": "de9c47d6.1d7d18",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 24,
        "width": 9,
        "height": 1
    },
    {
        "id": "1f1ceec7.646971",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 25,
        "width": 9,
        "height": 1
    },
    {
        "id": "9e186ebf.93366",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 26,
        "width": 9,
        "height": 1
    },
    {
        "id": "a3d0de46.046c5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 27,
        "width": 9,
        "height": 1
    },
    {
        "id": "fccc0182.0c936",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 28,
        "width": 9,
        "height": 1
    },
    {
        "id": "37e59cd2.baf3a4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 29,
        "width": 9,
        "height": 1
    },
    {
        "id": "b50cfafc.94f768",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 30,
        "width": 9,
        "height": 1
    },
    {
        "id": "52c48ba1.089514",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 31,
        "width": 9,
        "height": 1
    },
    {
        "id": "eefbd612.78ad98",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 32,
        "width": 9,
        "height": 1
    },
    {
        "id": "e31ba4be.6632a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 33,
        "width": 9,
        "height": 1
    },
    {
        "id": "256c6a51.f2cff6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 34,
        "width": 9,
        "height": 1
    },
    {
        "id": "b8d8eefd.a5ad5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 35,
        "width": 9,
        "height": 1
    },
    {
        "id": "75173b38.992b84",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 36,
        "width": 9,
        "height": 1
    },
    {
        "id": "35ab0be3.e01fa4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 37,
        "width": 9,
        "height": 1
    },
    {
        "id": "aa0a17d5.c20498",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 38,
        "width": 9,
        "height": 1
    },
    {
        "id": "8cb58026.9cf25",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 39,
        "width": 9,
        "height": 1
    },
    {
        "id": "cdee83d6.d4203",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 40,
        "width": 9,
        "height": 1
    },
    {
        "id": "5e8ffc40.4b2ea4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 41,
        "width": 9,
        "height": 1
    },
    {
        "id": "b58f424e.2758c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 42,
        "width": 9,
        "height": 1
    },
    {
        "id": "671a7f18.ce4f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 43,
        "width": 9,
        "height": 1
    },
    {
        "id": "92a3da80.da7928",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 44,
        "width": 9,
        "height": 1
    },
    {
        "id": "ce81c676.a1b058",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 45,
        "width": 9,
        "height": 1
    },
    {
        "id": "dd228a4.d262b78",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 46,
        "width": 9,
        "height": 1
    },
    {
        "id": "a20fd6c3.16a398",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 47,
        "width": 9,
        "height": 1
    },
    {
        "id": "14ea3977.5a3767",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 48,
        "width": 9,
        "height": 1
    },
    {
        "id": "908aca4d.4e7248",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 49,
        "width": 9,
        "height": 1
    },
    {
        "id": "41f30d8b.e58634",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 50,
        "width": 9,
        "height": 1
    },
    {
        "id": "c33e5624.ccb438",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 51,
        "width": 9,
        "height": 1
    },
    {
        "id": "54246bae.7ebe34",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 52,
        "width": 9,
        "height": 1
    },
    {
        "id": "5627725.ea9fe8c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 53,
        "width": 9,
        "height": 1
    },
    {
        "id": "6a67c076.d980f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 54,
        "width": 9,
        "height": 1
    },
    {
        "id": "e4053f16.1d7a7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 55,
        "width": 9,
        "height": 1
    },
    {
        "id": "88148e0d.64583",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 56,
        "width": 9,
        "height": 1
    },
    {
        "id": "cdb3d343.76f51",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 57,
        "width": 9,
        "height": 1
    },
    {
        "id": "429c4c0f.33caf4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 58,
        "width": 9,
        "height": 1
    },
    {
        "id": "8cf20408.2ec788",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 59,
        "width": 9,
        "height": 1
    },
    {
        "id": "a5b0789.5ff6188",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 60,
        "width": 9,
        "height": 1
    },
    {
        "id": "8213a209.f3b2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 61,
        "width": 9,
        "height": 1
    },
    {
        "id": "f5d2befb.3eec3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 62,
        "width": 9,
        "height": 1
    },
    {
        "id": "2c4fc6b7.f1736a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 63,
        "width": 9,
        "height": 1
    },
    {
        "id": "b31ff0d5.52a8c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 64,
        "width": 9,
        "height": 1
    },
    {
        "id": "5f167b81.2cee44",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 65,
        "width": 9,
        "height": 1
    },
    {
        "id": "3c6b45a1.89067a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 66,
        "width": 9,
        "height": 1
    },
    {
        "id": "8b1ab9d1.4451c8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 67,
        "width": 9,
        "height": 1
    },
    {
        "id": "cf2c44f0.ec99e8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 68,
        "width": 9,
        "height": 1
    },
    {
        "id": "388d40fa.3eb2a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 69,
        "width": 9,
        "height": 1
    },
    {
        "id": "8c179ef7.e1aaa",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 70,
        "width": 9,
        "height": 1
    },
    {
        "id": "8aad179.57ff5e8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 71,
        "width": 9,
        "height": 1
    },
    {
        "id": "12cd172d.cd68d9",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 72,
        "width": 9,
        "height": 1
    },
    {
        "id": "5031fe95.5c39e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 73,
        "width": 9,
        "height": 1
    },
    {
        "id": "230ac82.9697f38",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ffcc3881.8cec68",
        "order": 74,
        "width": 9,
        "height": 1
    },
    {
        "id": "3389b869.4dc988",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 6
    },
    {
        "id": "a9b561ea.9c803",
        "type": "ui_tab",
        "z": "",
        "name": "Temperature-Humidite",
        "icon": "fa-thermometer-full",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8c5eef58.57af5",
        "type": "ui_group",
        "z": "",
        "name": "map",
        "tab": "345919df.438e76",
        "order": 1,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "e029a68f.043b88",
        "type": "ui_group",
        "z": "",
        "name": "valeur",
        "tab": "a9b561ea.9c803",
        "order": 2,
        "disp": false,
        "width": "10",
        "collapse": false
    },
    {
        "id": "66f531af.78538",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "e78eb94a.c4bdb8",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 6
    },
    {
        "id": "90097a80.ab23b8",
        "type": "ui_group",
        "z": "",
        "name": "valeur",
        "tab": "a7280d0.e0ab2f",
        "order": 2,
        "disp": false,
        "width": "10",
        "collapse": false
    },
    {
        "id": "643874.9177378c",
        "type": "ui_tab",
        "z": "",
        "name": "Energie",
        "icon": "fa-bolt",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "78415ed8.82198",
        "type": "ui_group",
        "z": "",
        "name": "map",
        "tab": "643874.9177378c",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": false
    },
    {
        "id": "f795a4b4.9f3228",
        "type": "ui_group",
        "z": "",
        "name": "valeur",
        "tab": "643874.9177378c",
        "order": 2,
        "disp": false,
        "width": 18,
        "collapse": false
    },
    {
        "id": "1daaf10b.21577f",
        "type": "ui_tab",
        "z": "",
        "name": "Impulsion",
        "icon": "fa-line-chart",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "54805cf3.e18314",
        "type": "ui_group",
        "z": "",
        "name": "Map",
        "tab": "1daaf10b.21577f",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": false
    },
    {
        "id": "d09125c3.688348",
        "type": "ui_group",
        "z": "",
        "name": "valeur",
        "tab": "1daaf10b.21577f",
        "order": 2,
        "disp": true,
        "width": 16,
        "collapse": false
    },
    {
        "id": "5548a24c.49fccc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d09125c3.688348",
        "order": 6,
        "width": 16,
        "height": 1
    },
    {
        "id": "c129a3a5.c5686",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d09125c3.688348",
        "order": 10,
        "width": 16,
        "height": 1
    },
    {
        "id": "345919df.438e76",
        "type": "ui_tab",
        "z": "",
        "name": "qualité air",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f2ee891a.5bb3e8",
        "type": "ui_group",
        "z": "",
        "name": "valeur",
        "tab": "345919df.438e76",
        "order": 2,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "dde4b9bc.0daa18",
        "type": "ui_group",
        "z": "",
        "name": "map",
        "tab": "a9b561ea.9c803",
        "order": 2,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "803c3c44.7cd17",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "f795a4b4.9f3228",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "9fab53c7.d31e8",
        "type": "ui_group",
        "z": "",
        "name": "chart",
        "tab": "345919df.438e76",
        "order": 3,
        "disp": true,
        "width": 10,
        "collapse": false
    },
    {
        "id": "c75cf20b.46bb3",
        "type": "sqlitedb",
        "z": "",
        "db": "/db/database/dbdemonstrateur",
        "mode": "RWC"
    },
    {
        "id": "1617178b.26abe8",
        "type": "function",
        "z": "4cd1e924.33edf8",
        "name": "handle tableData",
        "func": "var status = {fill:\"red\",shape:\"dot\",text: \"payload \"};\nvar tableIndex = env.get(\"tableIndex\") || \"$topic\";\nvar tableDataProp = env.get(\"tableDataProp\") || \"row\";\nvar tableContext = env.get(\"tableContext\");\nvar dashboard = env.get(\"dashboard\");\nvar maxRows = env.get(\"maxRows\") || 0;\nvar maxStore = env.get(\"maxStore\") || 0;\n\nif (!tableContext.hasOwnProperty(\"tableData\") || !tableContext.hasOwnProperty(\"tableConfig\")) {\n    status.text=\"tableContext not defined\";\n    node.error(status.text);\n    return [{payload:status},null];\n}\n\n// context store to cache table data (memoryOnly prefered)\nvar tableData = flow.get(\"$parent.\"+tableContext.tableData.name,tableContext.tableData.storage);\nif (tableData===undefined) {\n    node.warn(\"[ui-table handler] tableData initialized!\");\n    tableData={};\n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n}\n\n// context Store to save table configuration (file)\nvar tableConfig = flow.get(\"$parent.\"+tableContext.tableConfig.name,tableContext.tableConfig.storage);\nif (tableConfig===undefined) {\n    node.warn(\"[ui-table handler] tableConfig initialized!\");\n    tableConfig={ResponsiveLayout:true};\n    flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n}\n\nif (tableConfig.hasOwnProperty(\"maxStore\")) maxStore=tableConfig.maxStore;\nif (tableConfig.hasOwnProperty(\"maxRows\")) maxRows=tableConfig.maxRows;\n\n// context Store to save table configuration (file)\nvar tableEdit;\nif (tableContext.hasOwnProperty(\"tableEdit\")) {\n    tableEdit = flow.get(\"$parent.\"+tableContext.tableEdit.name,tableContext.tableEdit.storage);\n    if (tableEdit===undefined) {\n        node.warn(\"[ui-table handler] tableEdit initialized!\");\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n}\n\n// function to merge partial data into existing table row\nvar mergeObject = function (destination, source, filter) {\n    for (let currentSource in source) {\n        if (source.hasOwnProperty(currentSource)) {\n            if (filter!==undefined && tableEdit && tableEdit.hasOwnProperty(filter) && tableEdit[filter].hasOwnProperty(currentSource)) {\n                destination[currentSource]= tableEdit[filter][currentSource];\n                source[currentSource]=tableEdit[filter][currentSource];\n            } else {\n                destination[currentSource]= source[currentSource];\n            }\n        }    \n    }\n    return source;\n};\n\n// merge edits into a destination object respecting _children\nvar mergeEdits = function(destination) {\n    \n    var mergeChildEdits = function(children) {\n        children.forEach(child => {\n            if (child.hasOwnProperty(tableIndex) && tableEdit.hasOwnProperty(child[tableIndex])) {\n//                node.warn([\"mergeChild\",child])\n                Object.keys(tableEdit[child[tableIndex]]).forEach(edit => {\n                    if (child.hasOwnProperty(edit)) {\n                        child[edit]=tableEdit[child[tableIndex]][edit];\n//                        node.warn([\"mergeChild edit \",edit,child[edit]])\n                    }\n                });\n            }\n            if (child.hasOwnProperty(\"_children\")) {\n                mergeChildEdits(child._children);\n            }\n        })\n    }\n    \n\n    Object.keys(destination).forEach(row => {\n        if (destination[row].hasOwnProperty(tableIndex)) {\n            if (tableEdit.hasOwnProperty(row)) {\n                Object.keys(tableEdit[row]).forEach(edit => {\n                    destination[row][edit]=tableEdit[row][edit];\n                });\n            }\n            if (destination[row].hasOwnProperty(\"_children\")) {\n                mergeChildEdits(destination[row]._children);\n            }\n       }\n    });\n}\n\n// deep search for a column including nested columns\nvar searchTabulatorColumn = function (columns,key,match) {\n    var result;\n    for (let column of columns) {\n        if (column.hasOwnProperty(\"columns\")) {\n            result = searchTabulatorColumn(column.columns,key,match);\n            if (result!==undefined) return result;\n        } else if (column.hasOwnProperty(key) && column[key]===match) {\n            return column;\n        }\n    }\n};\n\n// command message to update add or update data on ui-table\nvar msgToTable={};\nmsgToTable.payload={\n    \"command\":msg.tabulatorCommand || \"updateOrAddData\",\n    \"arguments\": [],\n    \"returnPromise\": false\n};\n\n// store data in tableData\nif (msg.hasOwnProperty(tableDataProp)) {\n    // store data for later recover\n    if (!msg.hasOwnProperty(\"topic\")) { // check if index existst\n        status.text=\"msg.topic not defined!\";\n        return [{payload:status},null];\n    }\n    if (!tableData.hasOwnProperty(msg.topic)){ // first seen\n        if (maxRows>0 && Object.keys(tableData).lenght===0) {\n            tableConfig.currentFirstRow=msg.topic;\n        }\n        tableData[msg.topic]={};\n        if (tableEdit && tableEdit.hasOwnProperty(msg.topic)) { // table edits available!\n            Object.keys(tableEdit[msg.topic]).forEach((key) => {\n                msg[tableDataProp][key]=tableEdit[msg.topic][key];\n                tableData[msg.topic][key]=tableEdit[msg.topic][key];\n            })\n        }\n        if (maxStore>0 && typeof msg.topic === \"number\") { // limit rows in tableData\n            let rowKeys = Object.keys(tableData);\n            if (rowKeys.length>maxStore) {\n                for (let i=0; i<(rowKeys.length-maxStore); i++) {\n                    delete tableData[rowKeys[i]];\n                }\n            }\n        }\n    }\n    if (!tableData[msg.topic].hasOwnProperty(tableIndex)) tableData[msg.topic][tableIndex]=msg.topic;\n    msg[tableDataProp]=mergeObject(tableData[msg.topic],msg[tableDataProp],msg.topic);\n    msg[tableDataProp][tableIndex]=msg.topic;\n    msgToTable.payload.arguments=[[msg[tableDataProp]]];\n    // add aditional parameters\n    if (msg.hasOwnProperty(\"tabulatorParameter\") && Array.isArray(msg.tabulatorParameter)) {\n        for (let arg in msg.tabulatorParameter) msgToTable.payload.arguments.push(arg);\n    }\n    // delete rows if rows exceed maxRows\n    /*\n    if (maxRows>0 && tableConfig.hasOwnProperty(\"currentFirstRow\") && typeof tableData[msg.topic][tableIndex]===\"number\") {\n        //node.warn([maxRows,tableConfig.hasOwnProperty(\"currentFirstRow\"),typeof tableData[msg.topic][tableIndex],tableConfig.currentFirstRow,tableData[msg.topic][tableIndex]-maxRows])\n        if (tableConfig.currentFirstRow<tableData[msg.topic][tableIndex]-maxRows) {\n            node.warn([\"maxRowExeeded\",tableConfig.currentFirstRow]);\n            node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [tableConfig.currentFirstRow],\"returnPromise\": false}},null]);\n            tableConfig.currentFirstRow++;\n        }\n    }*/\n    if (maxRows>0 && typeof tableData[msg.topic][tableIndex]===\"number\" && msg.topic-maxRows>0) {\n        node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [msg.topic-maxRows],\"returnPromise\": false}},null]);\n    }\n    status.fill=\"green\";\n    status.text=msg.topic+\" updated\";\n    return [{payload:status},msgToTable,null];\n} if (msg.payload===\"connect\" || (msg.payload===\"change\" && msg.name===dashboard) || (msg.hasOwnProperty(\"payload\") && msg.payload.hasOwnProperty(\"command\"))) { \n    if (!msg.hasOwnProperty(\"ui_control\")) {\n        msg.ui_control = env.get('tabulator');\n        status.text+=\" ui_control added\";\n    }\n    //process commands\n    //node.warn({\"command\":msg.payload.command,\"msg\":msg,\"object\":msg.payload.object})\n    if (msg.payload.hasOwnProperty(\"command\") && msg.payload.command!=='getTable') {\n        status.fill=\"blue\";\n        switch(msg.payload.command) {\n            case 'deleteTable':\n                flow.set(\"$parent.\"+tableContext.tableData.name,undefined,tableContext.tableData.storage);\n                tableData={};\n                status.text=\"tabledata deleted\";\n                node.warn(\"[ui-table handler] \"+\"tabledata deleted\");\n                break;\n            case 'deleteRow':\n            case 'deleteDevice':\n                var deleteRow = function(id) {\n                    // check if row is in root\n                    if (tableData.hasOwnProperty(id)) {\n                        delete tableData[id]\n                        return true;\n                    }\n                    // check if row is a child\n                    let deleteChildRow = function(children, id) {\n                        for(let i = 0; i < children.length; i++){\n                            if (children[i].hasOwnProperty(tableIndex) && children[i][tableIndex]===id) {\n                                children.splice(i, 1); \n                                return true; \n                            }\n                            if (children[i].hasOwnProperty(\"_children\")) {\n                                if (deleteChildRow(children[i]._children,id)) {\n                                    if (children[i]._children.length === 0) {\n                                        delete children[i]._children;\n                                    }\n                                    return true;\n                                }\n                            }\n                        }\n                        return false;\n                    };\n                    \n                    for (let row in tableData) {\n                        if (tableData[row].hasOwnProperty(\"_children\")) {\n                            if (deleteChildRow(tableData[row]._children,id)) return true;\n                        }\n                    }\n                    return false;\n                }\n                \n                if (deleteRow(msg.payload.object)) {\n                    status.text=msg.payload.object+\" deleted\";\n                } else {\n                    status.fill=\"yellow\";\n                    status.text=msg.payload.object+\" undefined\";\n                }\n                break;\n            case 'ignoreRow':\n            case 'ignoreDevice':\n                if (tableData.hasOwnProperty(msg.payload.object)) {\n                    delete tableData[msg.payload.object];\n                    status.text=msg.payload.object+\" will be ignored\";\n                    if (!tableConfig.hasOwnProperty('ignoreDevice')) tableConfig.ignoreDevice={};\n                    tableConfig.ignoreDevice[msg.payload.object]=true;\n                }\n                break;\n            case 'unIgnoreRow':\n            case 'unIgnoreDevice':\n                if (tableConfig.hasOwnProperty('ignoreDevice')) {\n                    delete tableConfig.ignoreDevice[msg.payload.object];\n                }\n                break;\n            case 'unIgnoreRows':\n            case 'unIgnoreDevices':\n                delete tableConfig.ignoreDevice;\n                break;\n            case 'updateData':\n                status.text=\"column \"+msg.payload.column+\" updated\";\n                delete msg.ui_control;\n                return [{payload:status},msg];\n            case 'updateTable':\n                status.text=msg.payload.command+\": \";\n                break;\n            case 'columnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=false;\n                break;\n            case 'columnUnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=true;\n                break;\n            case 'columnsUnHide':\n                for (let column in tableConfig.columnVisible) {\n                    if (tableConfig.columnVisible.hasOwnProperty(column)) tableConfig.columnVisible[column]=true;\n                }\n                break;\n            case 'refreshTable':\n                break;\n            case 'deleteColumnOrder':\n            case 'restoreColumnOrder':\n                delete tableConfig.columns;\n                break;\n            case 'deleteColumnWidth':\n            case 'resetColumnWidth':\n                delete tableConfig.columnWidths;\n                break;\n            case 'setResponsiveLayout':\n                tableConfig.ResponsiveLayout=!tableConfig.ResponsiveLayout;\n                break;\n            case 'deleteRowOrder':\n                delete tableConfig.rowOrder;\n                break;\n            case 'setMaxStore':\n                tableConfig.maxStore=msg.payload.object;\n                maxStore=msg.payload.object;\n                break;\n            case 'setMaxRows':\n                tableConfig.maxRows=msg.payload.object;\n                maxRows=msg.payload.object;\n                break;\n            default:\n                status.fill=\"red\";\n                status.text=\"unknown command \"+msg.payload.command;\n                node.warn(\"[ui-table handler] \"+status.text);\n                break;\n        }\n        flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n        node.send([{payload:status},null,null]);\n    }\n\n    // crawl through tabulator arrays and updated user defined values\n    var crawlTabulator = function (columns,match,config,property) {\n        for (let column of columns) {\n            if (column.hasOwnProperty(\"columns\")) {\n                crawlTabulator(column.columns,match,config,property);\n            } else if (config.hasOwnProperty(column[match])) column[property]=config[column.field];\n        }\n    };\n    \n    // restore custom column width\n    if (tableConfig.hasOwnProperty(\"columnWidths\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnWidths,\"width\");\n    }\n    \n    // restore custom column hide/show\n    if (tableConfig.hasOwnProperty(\"columnVisible\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnVisible,\"visible\");\n    }\n    \n    // restore custom responsive / standard view\n    if (tableConfig.hasOwnProperty(\"ResponsiveLayout\")) {\n        if (!tableConfig.ResponsiveLayout) {\n            msg.ui_control.tabulator.responsiveLayout=false;\n        }\n        msg.ui_control.tabulator.columns.forEach((column,index) => {\n            if (column.formatter===\"responsiveCollapse\") { // hide expand column on any position\n                column.visible=tableConfig.ResponsiveLayout;\n                return;\n            }\n        });\n    }\n\n    // sort columns\n    if (tableConfig.hasOwnProperty(\"columns\") && msg.hasOwnProperty(\"ui_control\") && msg.ui_control.hasOwnProperty(\"tabulator\")) {\n        var addedColumns = 0;\n        var sortColumnsByLayout = function (sortColumns, columnsLayout, targetColumns) {\n            for (var layoutColumn=0;  layoutColumn<columnsLayout.length; layoutColumn++) {\n                for (var sortColumn in sortColumns) {\n                    if (sortColumns[sortColumn].hasOwnProperty(\"columns\")) {\n                        targetColumns.push({\"title\":sortColumns[sortColumn].title, \"columns\":[]});\n                        sortColumnsByLayout(sortColumns[sortColumn].columns,columnsLayout,targetColumns[targetColumns.length-1].columns);\n                        layoutColumn=addedColumns; // jump forward after childes added\n                    } else {\n                        if (columnsLayout[layoutColumn].field===sortColumns[sortColumn].field){\n                            targetColumns.push(sortColumns[sortColumn]);\n                            addedColumns++;\n                            break;\n                        }\n                    }\n                }\n            }\n        };                 \n        var newColumns=[];\n        sortColumnsByLayout(msg.ui_control.tabulator.columns,tableConfig.columns,newColumns);\n        msg.ui_control.tabulator.columns=newColumns;\n    }\n\n    // restore stored lines after connect\n\n    let command = msg.payload.command;\n    var tableArray;\n    if (command===\"getTable\") {\n        msg.payload.tableArray=[];\n        tableArray=msg.payload.tableArray\n    } else {\n        msg.payload=[];\n        tableArray=msg.payload;\n    }\n    \n    var pushRowData = function(rowData) {\n        // ignore rows in ignoreRows array\n        if (tableConfig && tableConfig.hasOwnProperty(\"ignoreDevice\") && tableConfig.ignoreDevice[rowData]) {\n            // do nothing\n        } else {\n            // merge edits into table\n            if (tableEdit && tableEdit.hasOwnProperty(rowData)) {\n                let tableRow = RED.util.cloneMessage(tableData[rowData]);\n                Object.keys(tableEdit[rowData]).forEach((field) => {\n                    tableRow[field]=tableEdit[rowData][field];\n                });\n                tableArray.push(tableRow);\n            } else {\n                tableArray.push(tableData[rowData]);\n            }\n        }\n    }\n    \n    if (tableConfig.hasOwnProperty(\"rowOrder\")) {\n        // first check if new rows exits which are not in rowOrder\n        Object.keys(tableData).forEach((key) => {\n            if (tableConfig.rowOrder.indexOf(tableData[key][tableIndex])<0) {\n                tableConfig.rowOrder.push(tableData[key][tableIndex]); // add row to the end of rowOrder\n            }\n        });\n        tableConfig.rowOrder.forEach((value,index) => {\n            node.warn([\"pushRowOrder\",value,tableData.hasOwnProperty(value),tableData[value]]);\n            if (tableData.hasOwnProperty(value)) { // push rows in rowOrder sequence\n                pushRowData(value);\n            } else { // delete not existing rows from rowOrder\n                tableConfig.rowOrder.splice(index,1)\n            }\n       });\n    } else {\n        for (let rowData in tableData) {\n            pushRowData(rowData);\n        }\n    }\n    // store the first index if maxRows limits amount of displayed lines\n    if (maxRows>0 && tableData) {\n        let tableKeys=Object.keys(tableData);\n        if (tableKeys.length>0 && typeof tableData[tableKeys[0]][tableIndex] === \"number\") {\n            tableConfig.currentFirstRow=tableData[tableKeys[0]][tableIndex];\n        }\n    }\n    \n    if (command=='getTable'){\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows emitted\";\n        return [{payload:status},null,msg];\n    } else {\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows restored\";\n        return [{payload:status},msg,[{topic:\"maxRows\",payload:maxRows},{topic:\"maxStore\",payload:maxStore}]];\n    }\n} if (msg.hasOwnProperty(\"ui_control\")) {\n    // callback from tabulator\n    status.fill=\"blue\";\n    status.text=\"callback \"+msg.ui_control.callback;\n    switch(msg.ui_control.callback) {\n        case \"columnResized\": // save new column width\n            if (tableConfig.columnWidths===undefined) tableConfig.columnWidths={};\n            tableConfig.columnWidths[msg.ui_control.columnWidths.field]=msg.ui_control.columnWidths.width;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=msg.ui_control.columnWidths.field+\"=\"+msg.ui_control.columnWidths.width+\"px\";\n            break;\n        case \"columnMoved\": // save new column order\n            if (tableConfig.columns===undefined) tableConfig.columns=[];\n            tableConfig.columns=msg.ui_control.columns;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new column order\";\n            break;\n        case \"cellEdited\":\n            if (tableEdit) {\n                if (!tableEdit.hasOwnProperty(msg[tableIndex])) tableEdit[msg[tableIndex]]={};\n                tableEdit[msg[tableIndex]][msg.field] = msg.payload; // save data and mark as edited field\n                flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n                mergeEdits(tableData);\n                flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n                status.text=msg[tableIndex]+\" \"+msg.field+\" edited to \"+msg.payload;\n                msg[tableDataProp]={};\n                msg[tableDataProp][tableIndex]=msg[tableIndex];\n                msg[tableDataProp][msg.field]=msg.payload;\n                msgToTable.payload.arguments=[[msg[tableDataProp]]];\n                node.send([{payload:status},null,msg]); // was node.send([{payload:status},msgToTable,msg]);\n            } else {\n                node.error(\"[ui-table handler] no tableEdit store defined!\")\n            }\n            break;\n        case \"rowContext\":\n            msg.ignoredDevices=[];\n            for (let rowData in tableConfig.ignoreDevice) {\n                if (tableConfig.ignoreDevice.hasOwnProperty(rowData)) {\n                    msg.ignoredDevices.push({\"text\":rowData,\"icon\":\"fa fa-plug\",\"topic\":\"unIgnoreDevice\",\"payload\":rowData})  \n                }\n            }\n            break;\n        case \"headerContext\":\n            msg.hiddenColumns=[];\n            let tabulatorConfig = env.get('tabulator');\n            for (let column in tableConfig.columnVisible) {\n                if (tableConfig.columnVisible.hasOwnProperty(column) &&\n                    !tableConfig.columnVisible[column]) {\n                    let configColumn=searchTabulatorColumn(tabulatorConfig.tabulator.columns,\"field\",column);\n                    let icon;\n                    if (configColumn.hasOwnProperty('title') && configColumn.title.toLowerCase().includes('</i>')) {\n                        // <i class='fa fa-star-half-o'></i> State\n                        let start=configColumn.title.indexOf(\"'fa \");\n                        let end=configColumn.title.indexOf(\"'\",start+1);\n                        icon=configColumn.title.substring(start+4,end);\n                    }\n                    msg.hiddenColumns.push({\"text\":column,\"icon\":icon,\"topic\":\"columnUnHide\",\"payload\":configColumn.field})  \n                }\n            }\n            break;\n        case \"rowMoved\":\n            if (tableConfig.rowOrder===undefined) tableConfig.rowOrder={};\n            tableConfig.rowOrder=msg.ui_control.rowOrder;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new row order\";\n            break;\n        default:\n            // if rowIndex exists pass complete object\n            if (msg.hasOwnProperty(tableIndex)) {\n                msg.rowData=tableData[msg[tableIndex]];\n            }\n            status.text=\"pass message\";\n    }\n    return [{payload:status},null,msg];\n} \nif (Array.isArray(msg.payload)) {\n    tableData={};\n    \n    msg.payload.forEach((row) => {\n        if (row.hasOwnProperty(tableIndex)) {\n            tableData[row[tableIndex]]=row;\n        }\n    });\n    if (msg.keepEdits) {\n        mergeEdits(tableData);\n    }\n\n    \n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n    if (tableContext.hasOwnProperty(\"tableEdit\") && !msg.keepEdits) {\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n    status.fill=\"blue\"\n    status.text=\"table replaced \"+msg.payload.length+\" rows\";\n    return [{payload:status},msg,null];\n}    \n    \n// nothing to do bejond this point\nstatus.text+=\" [\"+msg.payload+\"]\";\nreturn [{payload:status},null];\n",
        "outputs": 3,
        "noerr": 0,
        "x": 192,
        "y": 85,
        "wires": [
            [],
            [],
            []
        ],
        "icon": "font-awesome/fa-table"
    },
    {
        "id": "be2f85ea.6ebe98",
        "type": "comment",
        "z": "b65661d8.d7be2",
        "name": "bdd",
        "info": "",
        "x": 430,
        "y": 40,
        "wires": []
    },
    {
        "id": "90a7997e.f624e8",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "N_6986_PMM_1 x51",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"N_6986_PMM_1\",\"devEUI\":\"70b3d5e75e006986\",\"rxInfo\":[{\"gatewayID\":\"00800000a0007527\",\"uplinkID\":\"f917167d-f4ee-40bf-a686-b2b3bf48bc8d\",\"name\":\"Gateway_P09_Test_Mios\",\"rssi\":-36,\"loRaSNR\":8.2,\"location\":{\"latitude\":42.82911,\"longitude\":2.7672,\"altitude\":508}}],\"txInfo\":{\"frequency\":867500000,\"dr\":5},\"adr\":true,\"fCnt\":14,\"fPort\":125,\"tags\":{\"capteur\":\"nke-tic\"},\"data\":\"UQoAUgAAQQwAAAAAAAAC2gAAAAA=\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 940,
        "y": 480,
        "wires": [
            [
                "f9e98ab8.ff1ea8"
            ]
        ]
    },
    {
        "id": "b3b77fc5.85dd4",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "N_6986_PMM_1 x31",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"N_6986_PMM_1\",\"devEUI\":\"70b3d5e75e006986\",\"rxInfo\":[{\"gatewayID\":\"00800000a0007527\",\"uplinkID\":\"b463ade6-a298-4116-8c70-faeba39d74fe\",\"name\":\"Gateway_P09_Test_Mios\",\"rssi\":-37,\"loRaSNR\":10,\"location\":{\"latitude\":42.82911,\"longitude\":2.7672,\"altitude\":508}}],\"txInfo\":{\"frequency\":867100000,\"dr\":5},\"adr\":true,\"fCnt\":15,\"fPort\":125,\"tags\":{\"capteur\":\"nke-tic\"},\"data\":\"MQoAUgAAQQwAAuv//IYC2gAm/74=\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 940,
        "y": 440,
        "wires": [
            [
                "f9e98ab8.ff1ea8"
            ]
        ]
    },
    {
        "id": "4289f2ad.7e5e7c",
        "type": "sqlite",
        "z": "b65661d8.d7be2",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Capteurs",
        "x": 1140,
        "y": 140,
        "wires": [
            [
                "7611a408.6e8b4c"
            ]
        ]
    },
    {
        "id": "9dbceaf1.397668",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "DELETE",
        "topic": "DELETE FROM Capteurs where name='aN/aN/NaN aN:aN:aN';",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 960,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "714b7f5d.8ac5f",
        "type": "function",
        "z": "b65661d8.d7be2",
        "name": "INSERT",
        "func": "var newMsg = {\n \"topic\": \"INSERT INTO Valeurs (time,deveui,name,capteur,type,valeur) VALUES ( \" + \"\\'\" +\n msg.payload.time + \"\\'\" + \",\" + \n \"\\'\" + msg.payload.deveui + \"\\'\" + \",\" + \n \"\\'\" + msg.payload.deviceName + \"\\'\" + \",\" + \n \"\\'\" + msg.payload.capteur + \"\\'\" + \",\" +\n \"\\'\" + msg.payload.type + \"\\'\" + \",\" + \n \"\\'\" + msg.payload.valeur + \"\\'\" + \");\"\n}\nreturn newMsg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 80,
        "wires": [
            [
                "2e6e6220.287f8e"
            ]
        ]
    },
    {
        "id": "4a8afd1.b9ef804",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "SELECT",
        "topic": "SELECT * FROM Capteurs ;",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 960,
        "y": 100,
        "wires": [
            [
                "4289f2ad.7e5e7c"
            ]
        ]
    },
    {
        "id": "7611a408.6e8b4c",
        "type": "debug",
        "z": "b65661d8.d7be2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1170,
        "y": 180,
        "wires": []
    },
    {
        "id": "b7e37d0c.fe6f5",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "CREATE",
        "topic": "CREATE TABLE Capteurs(deveui STRING PRIMARY KEY NOT NULL, name STRING, lat REAL NOT NULL, lon REAL NOT NULL, battery REAL, description STRING)",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 960,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "96267929.1aaa68",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "CREATE",
        "topic": "CREATE TABLE Valeurs(time TIMESTAMP PRIMARY KEY NOT NULL, deveui STRING NOT NULL, name STRING, capteur STRING, type STRING, valeur REAL NOT NULL)",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 500,
        "y": 160,
        "wires": [
            [
                "2e6e6220.287f8e"
            ]
        ]
    },
    {
        "id": "2e6e6220.287f8e",
        "type": "sqlite",
        "z": "b65661d8.d7be2",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Valeurs",
        "x": 680,
        "y": 140,
        "wires": [
            [
                "d99f5958.cc0588"
            ]
        ]
    },
    {
        "id": "5ba3d3c8.7b85dc",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "SELECT",
        "topic": "SELECT * FROM Valeurs;",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 500,
        "y": 120,
        "wires": [
            [
                "2e6e6220.287f8e"
            ]
        ]
    },
    {
        "id": "d99f5958.cc0588",
        "type": "debug",
        "z": "b65661d8.d7be2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 710,
        "y": 180,
        "wires": []
    },
    {
        "id": "75decbf0.4e21e4",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "DROP",
        "topic": "DROP table Valeurs;",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 510,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "897ee5c3.dcef68",
        "type": "link in",
        "z": "b65661d8.d7be2",
        "name": "",
        "links": [
            "1d132d63.88c0a3",
            "88fac5b8.5d2a08"
        ],
        "x": 395,
        "y": 80,
        "wires": [
            [
                "714b7f5d.8ac5f"
            ]
        ]
    },
    {
        "id": "5aa36d9e.433ae4",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "INSERT",
        "topic": "INSERT INTO Capteurs VALUES     ('FCD6BD000019767C','B_767C_PMM_2',43.4935064940737,5.34969534460204,100,'Capteur de parking'),     ('70B3D5E75E007651','N_7651_PMM_9',43.493102534607,5.34971143785557,100,'THr'),     ('FCD6BD000019767D','B_767D_PMM_3',43.4934641725854,5.34969333294535,100,'Capteur de parking'),     ('70B3D5E75E00764F','N_764F_PMM_7',43.493202534607,5.34971143785557,100,'THr'),     ('70B3D5E75E006A2E','N_6A2E_PMM_4',43.493302534607,5.34971143785557,100,'Pulse senso'),     ('70B3D5E75E006986','N_6986_PMM_1',43.493502534607,5.34971143785557,100,'TIC + 2S0 + 2tores'),     ('70B3D5E75E00699A','N_699A_PMM_3',43.493602534607,5.34971143785557,100,'TIC + 2S0 + 2tores'),     ('FCD6BD000019767B','B_767B_PMM_1',43.4933989877062,5.34969668570649,100,'Capteur de parking'),     ('70B3D5E75E006A8F','N_6A8F_PMM_6',43.493702534607,5.34971143785557,100,'Pulse Senso'),     ('70B3D5E75E00698F','N_698F_PMM_2',43.493802534607,5.34971143785557,100,'TIC + 2SO + 2tores'),     ('70B3D5E75E006A5B','N_6A5B_PMM_5',43.493902534607,5.34971143785557,100,'Pulse Senso'),     ('70B3D5E75E007653','N_7653_PMM_8',43.493702534607,5.34951143785557,100,'THr');",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 960,
        "y": 140,
        "wires": [
            [
                "4289f2ad.7e5e7c"
            ]
        ]
    },
    {
        "id": "a668fe2d.a7f4e",
        "type": "mqtt in",
        "z": "b65661d8.d7be2",
        "name": "",
        "topic": "application/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "bd9f5b02.854108",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "e4a2b507.259348"
            ]
        ]
    },
    {
        "id": "e4a2b507.259348",
        "type": "json",
        "z": "b65661d8.d7be2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "e37c0ca2.8dd9f",
                "91b7d573.dd5b38"
            ]
        ]
    },
    {
        "id": "88fac5b8.5d2a08",
        "type": "link out",
        "z": "b65661d8.d7be2",
        "name": "",
        "links": [
            "897ee5c3.dcef68",
            "adbae2fa.53cc7"
        ],
        "x": 315,
        "y": 160,
        "wires": []
    },
    {
        "id": "17407d06.efdac3",
        "type": "ui_ui_control",
        "z": "4040fea9.8edac",
        "name": "return map",
        "events": "change",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "5d97d393.0d8b0c"
            ]
        ]
    },
    {
        "id": "8b08346e.3191b8",
        "type": "sqlite",
        "z": "4040fea9.8edac",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "test/Level",
        "x": 320,
        "y": 80,
        "wires": [
            [
                "9a3370ad.bdbe5"
            ]
        ]
    },
    {
        "id": "98f836ba.198058",
        "type": "function",
        "z": "4040fea9.8edac",
        "name": "temp",
        "func": "msg.payload.layer = \"temp\";\nmsg.payload.draggable = true;\nmsg.payload.icon = \"thermometer\";\nmsg.payload.name = msg.payload.name;\nmsg.payload.iconColor = \"gray\";\nmsg.payload.command = { \"button\": { \"name\":\"My Fancy Button\" } };\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 160,
        "wires": [
            [
                "2e73abaa.bab5c4",
                "13e2e3af.c494dc"
            ]
        ]
    },
    {
        "id": "9a3370ad.bdbe5",
        "type": "split",
        "z": "4040fea9.8edac",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "98f836ba.198058"
            ]
        ]
    },
    {
        "id": "e917819.a5ed18",
        "type": "function",
        "z": "4040fea9.8edac",
        "name": "SELECT",
        "func": "var newMsg = {\n \"topic\": \"SELECT * FROM Capteurs WHERE description='THr'\" \n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 160,
        "wires": [
            [
                "8b08346e.3191b8"
            ]
        ]
    },
    {
        "id": "5d97d393.0d8b0c",
        "type": "delay",
        "z": "4040fea9.8edac",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 140,
        "y": 120,
        "wires": [
            [
                "e917819.a5ed18"
            ]
        ]
    },
    {
        "id": "2e73abaa.bab5c4",
        "type": "worldmap",
        "z": "4040fea9.8edac",
        "name": "map",
        "lat": "42.7110",
        "lon": "2.9100",
        "zoom": "17",
        "layer": "OSM",
        "cluster": "0",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "hiderightclick": "false",
        "coords": "deg",
        "path": "worldmap",
        "x": 510,
        "y": 80,
        "wires": []
    },
    {
        "id": "954cb238.ca4cd",
        "type": "worldmap in",
        "z": "4040fea9.8edac",
        "name": "",
        "path": "/worldmap",
        "events": "all",
        "x": 740,
        "y": 80,
        "wires": [
            [
                "48f5faa2.12f204"
            ]
        ]
    },
    {
        "id": "4a825e0e.b711a",
        "type": "ui_text",
        "z": "4040fea9.8edac",
        "group": "e029a68f.043b88",
        "order": 1,
        "width": "5",
        "height": 1,
        "name": "CodeSig",
        "label": "DevEui : ",
        "format": "{{msg.payload[0].deveui}}",
        "layout": "row-center",
        "x": 560,
        "y": 280,
        "wires": []
    },
    {
        "id": "5036ad85.a53e44",
        "type": "sqlite",
        "z": "4040fea9.8edac",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Humidity",
        "x": 360,
        "y": 260,
        "wires": [
            [
                "4a825e0e.b711a",
                "46ccf26.ba7aa0c",
                "7868eb95.e06b64"
            ]
        ]
    },
    {
        "id": "5eb37937.737fe8",
        "type": "function",
        "z": "4040fea9.8edac",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"0x0405\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 260,
        "wires": [
            [
                "5036ad85.a53e44"
            ]
        ]
    },
    {
        "id": "a69d0d2e.40922",
        "type": "ui_chart",
        "z": "4040fea9.8edac",
        "name": "Chart",
        "group": "e029a68f.043b88",
        "order": 4,
        "width": 10,
        "height": 6,
        "label": "Humidite : %",
        "chartType": "line",
        "legend": "true",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 690,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "78aed086.852e",
        "type": "sqlite",
        "z": "4040fea9.8edac",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Humidity",
        "x": 340,
        "y": 440,
        "wires": [
            [
                "e6458604.65cf38"
            ]
        ]
    },
    {
        "id": "e6458604.65cf38",
        "type": "function",
        "z": "4040fea9.8edac",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\nvar series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 440,
        "wires": [
            [
                "a69d0d2e.40922"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "a9457e6f.b389c",
        "type": "function",
        "z": "4040fea9.8edac",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"0x0405\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 440,
        "wires": [
            [
                "78aed086.852e"
            ]
        ]
    },
    {
        "id": "48f5faa2.12f204",
        "type": "link out",
        "z": "4040fea9.8edac",
        "name": "",
        "links": [
            "c3618d16.13f43",
            "c502ce9d.68f6d",
            "3067a8df.81f018",
            "70164759.8cd408"
        ],
        "x": 855,
        "y": 80,
        "wires": []
    },
    {
        "id": "c3618d16.13f43",
        "type": "link in",
        "z": "4040fea9.8edac",
        "name": "",
        "links": [
            "48f5faa2.12f204",
            "e41b02e0.ae7da"
        ],
        "x": 95,
        "y": 300,
        "wires": [
            [
                "5eb37937.737fe8",
                "f997188e.1fc058",
                "7869702a.bdb94"
            ]
        ]
    },
    {
        "id": "c502ce9d.68f6d",
        "type": "link in",
        "z": "4040fea9.8edac",
        "name": "",
        "links": [
            "48f5faa2.12f204",
            "e41b02e0.ae7da"
        ],
        "x": 100,
        "y": 440,
        "wires": [
            [
                "a9457e6f.b389c"
            ]
        ]
    },
    {
        "id": "46ccf26.ba7aa0c",
        "type": "ui_artlessgauge",
        "z": "4040fea9.8edac",
        "group": "e029a68f.043b88",
        "order": 2,
        "width": 5,
        "height": 3,
        "name": "humidite",
        "icon": "",
        "label": "Humidite",
        "unit": "%",
        "layout": "radial",
        "decimals": "2",
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].valeur",
        "sectors": [
            {
                "val": 0,
                "col": "#8c8b8d",
                "t": "min",
                "dot": 0
            },
            {
                "val": 15,
                "col": "#bccef0",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 17,
                "col": "#6695f5",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 25,
                "col": "#423ff8",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 35,
                "col": "#00178a",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#00178a",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 560,
        "y": 320,
        "wires": []
    },
    {
        "id": "dd185d93.d85be",
        "type": "ui_template",
        "z": "4040fea9.8edac",
        "group": "dde4b9bc.0daa18",
        "name": "",
        "order": 1,
        "width": 15,
        "height": "15",
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 540,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "13e2e3af.c494dc",
        "type": "template",
        "z": "4040fea9.8edac",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<iframe src=\"https://pav.dnpm.fr/node-red/demonstrateur/worldmap/\" \n            frameborder=\"0\" \n            marginheight=\"0\" \n            marginwidth=\"0\" \n            width=\"790px\" \n            height=\"790px\"\n            scrolling=\"auto\">\n</iframe>",
        "x": 530,
        "y": 120,
        "wires": [
            [
                "dd185d93.d85be"
            ]
        ]
    },
    {
        "id": "f997188e.1fc058",
        "type": "function",
        "z": "4040fea9.8edac",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui, valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"0x0402\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 300,
        "wires": [
            [
                "a1daee3f.bbe93"
            ]
        ]
    },
    {
        "id": "a1daee3f.bbe93",
        "type": "sqlite",
        "z": "4040fea9.8edac",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Temperature",
        "x": 370,
        "y": 300,
        "wires": [
            [
                "85dc94f0.e49f78"
            ]
        ]
    },
    {
        "id": "85dc94f0.e49f78",
        "type": "ui_artlessgauge",
        "z": "4040fea9.8edac",
        "group": "e029a68f.043b88",
        "order": 3,
        "width": 5,
        "height": 3,
        "name": "temperature",
        "icon": "",
        "label": "Temperature",
        "unit": "°C",
        "layout": "radial",
        "decimals": "2",
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].valeur",
        "sectors": [
            {
                "val": -20,
                "col": "#8c8b8d",
                "t": "min",
                "dot": 0
            },
            {
                "val": 15,
                "col": "#7301fe",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 17,
                "col": "#e7ff33",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 25,
                "col": "#fdd512",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 35,
                "col": "#ff0a0a",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#ff0a0a",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "3",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 570,
        "y": 360,
        "wires": []
    },
    {
        "id": "7869702a.bdb94",
        "type": "function",
        "z": "4040fea9.8edac",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui, valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"0x0402\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 340,
        "wires": [
            [
                "c377a2aa.2a5eb"
            ]
        ]
    },
    {
        "id": "c377a2aa.2a5eb",
        "type": "sqlite",
        "z": "4040fea9.8edac",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Luminosite",
        "x": 370,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "a9251eb9.2798a",
        "type": "ui_template",
        "z": "4040fea9.8edac",
        "group": "8c5eef58.57af5",
        "name": "Dashboard stylesheet",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 780,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "3f987300.332b6e",
        "type": "ui_template",
        "z": "4040fea9.8edac",
        "group": "e029a68f.043b88",
        "name": "Dashboard stylesheet",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 780,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "7f400fc4.8bbae",
        "type": "ui_chart",
        "z": "4040fea9.8edac",
        "name": "Chart",
        "group": "e029a68f.043b88",
        "order": 5,
        "width": 10,
        "height": 6,
        "label": "Temperature : °C",
        "chartType": "line",
        "legend": "true",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "-20",
        "ymax": "80",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 690,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "cd379c43.0a513",
        "type": "sqlite",
        "z": "4040fea9.8edac",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Temperature",
        "x": 350,
        "y": 480,
        "wires": [
            [
                "773ba38b.21965c"
            ]
        ]
    },
    {
        "id": "773ba38b.21965c",
        "type": "function",
        "z": "4040fea9.8edac",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\nvar series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 480,
        "wires": [
            [
                "7f400fc4.8bbae"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "28050f24.ead6d",
        "type": "function",
        "z": "4040fea9.8edac",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"0x0402\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 480,
        "wires": [
            [
                "cd379c43.0a513"
            ]
        ]
    },
    {
        "id": "3067a8df.81f018",
        "type": "link in",
        "z": "4040fea9.8edac",
        "name": "",
        "links": [
            "48f5faa2.12f204",
            "e41b02e0.ae7da"
        ],
        "x": 100,
        "y": 480,
        "wires": [
            [
                "28050f24.ead6d"
            ]
        ]
    },
    {
        "id": "7868eb95.e06b64",
        "type": "ui_text",
        "z": "4040fea9.8edac",
        "group": "e029a68f.043b88",
        "order": 1,
        "width": "5",
        "height": 1,
        "name": "name",
        "label": "Nom : ",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-center",
        "x": 550,
        "y": 240,
        "wires": []
    },
    {
        "id": "f2b73f8a.a894e",
        "type": "ui_ui_control",
        "z": "9d5126d6.f23448",
        "name": "return map",
        "events": "change",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "fd84f8b8.ac0b08"
            ]
        ]
    },
    {
        "id": "e2aefd12.ca3ac",
        "type": "sqlite",
        "z": "9d5126d6.f23448",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "test/Level",
        "x": 300,
        "y": 100,
        "wires": [
            [
                "710cabe2.85e934"
            ]
        ]
    },
    {
        "id": "63596ce7.1df324",
        "type": "function",
        "z": "9d5126d6.f23448",
        "name": "temp",
        "func": "msg.payload.layer = \"temp\";\nmsg.payload.draggable = true;\nmsg.payload.icon = \"car\";\nmsg.payload.name = msg.payload.name;\n\nif(msg.payload.valeur == 1)\n    msg.payload.iconColor = \"green\";\nelse\n    msg.payload.iconColor = \"red\";\n    \n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 180,
        "wires": [
            [
                "aea1da43.ea51f8",
                "39bf05dc.95a11a"
            ]
        ]
    },
    {
        "id": "710cabe2.85e934",
        "type": "split",
        "z": "9d5126d6.f23448",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 310,
        "y": 140,
        "wires": [
            [
                "63596ce7.1df324",
                "fceac791.f13548"
            ]
        ]
    },
    {
        "id": "d0dccb85.412e98",
        "type": "function",
        "z": "9d5126d6.f23448",
        "name": "SELECT",
        "func": "/*var newMsg = {\n \"topic\": \"SELECT * FROM Capteurs WHERE description='Capteur de parking'\" \n}\nreturn newMsg;*/\n\n\nvar newMsg = {\n \"topic\": \"WITH group1 AS (SELECT * FROM Capteurs WHERE description='Capteur de parking'), \\\n           group2 AS (SELECT tt.* FROM Valeurs tt INNER JOIN (SELECT name,deveui,MAX(time) AS MaxDateTime FROM Valeurs WHERE capteur='bosh' GROUP BY name) groupedtt  ON tt.name = groupedtt.name AND tt.time = groupedtt.MaxDateTime) \\\n           SELECT * FROM group1 JOIN group2 ON group1.name = group2.name\"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 120,
        "y": 180,
        "wires": [
            [
                "e2aefd12.ca3ac"
            ]
        ]
    },
    {
        "id": "fd84f8b8.ac0b08",
        "type": "delay",
        "z": "9d5126d6.f23448",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 120,
        "y": 140,
        "wires": [
            [
                "d0dccb85.412e98"
            ]
        ]
    },
    {
        "id": "72e91cbf.ef8904",
        "type": "comment",
        "z": "9d5126d6.f23448",
        "name": "MAP",
        "info": "",
        "x": 70,
        "y": 60,
        "wires": []
    },
    {
        "id": "aea1da43.ea51f8",
        "type": "worldmap",
        "z": "9d5126d6.f23448",
        "name": "map",
        "lat": "42.7117",
        "lon": "2.9095",
        "zoom": "20",
        "layer": "OSM",
        "cluster": "0",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "hiderightclick": "true",
        "coords": "deg",
        "path": "worldmap1",
        "x": 490,
        "y": 100,
        "wires": []
    },
    {
        "id": "1eeaef86.25a3f",
        "type": "worldmap in",
        "z": "9d5126d6.f23448",
        "name": "",
        "path": "/worldmap1",
        "events": "all",
        "x": 720,
        "y": 100,
        "wires": [
            [
                "b0cbe663.011fe8",
                "c37ec41d.481de8"
            ]
        ]
    },
    {
        "id": "6c4cf7b8.a2e7b8",
        "type": "ui_text",
        "z": "9d5126d6.f23448",
        "group": "90097a80.ab23b8",
        "order": 1,
        "width": 10,
        "height": 1,
        "name": "CodeSig",
        "label": "DevEui : ",
        "format": "{{msg.payload[0].deveui}}",
        "layout": "row-center",
        "x": 540,
        "y": 460,
        "wires": []
    },
    {
        "id": "8fcbfffb.4bf11",
        "type": "sqlite",
        "z": "9d5126d6.f23448",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Humidity",
        "x": 340,
        "y": 460,
        "wires": [
            [
                "6c4cf7b8.a2e7b8",
                "d906b580.682388",
                "9c41fa2a.4b3378"
            ]
        ]
    },
    {
        "id": "f7952a28.2d11e8",
        "type": "function",
        "z": "9d5126d6.f23448",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 460,
        "wires": [
            [
                "8fcbfffb.4bf11"
            ]
        ]
    },
    {
        "id": "b5ab319c.36058",
        "type": "ui_chart",
        "z": "9d5126d6.f23448",
        "name": "Chart",
        "group": "90097a80.ab23b8",
        "order": 6,
        "width": 10,
        "height": 6,
        "label": "Occupation",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 670,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "c4d2370e.1348d8",
        "type": "sqlite",
        "z": "9d5126d6.f23448",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Humidity",
        "x": 340,
        "y": 600,
        "wires": [
            [
                "949f2bcc.378c78"
            ]
        ]
    },
    {
        "id": "949f2bcc.378c78",
        "type": "function",
        "z": "9d5126d6.f23448",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\nvar series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 600,
        "wires": [
            [
                "b5ab319c.36058",
                "a71aa622.0b42a8"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "150c788b.6d8c17",
        "type": "function",
        "z": "9d5126d6.f23448",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND capteur=\" + \"\\'\" + \"bosh\" + \"\\' \" + \n \" order by Valeurs.time desc limit 5 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 600,
        "wires": [
            [
                "c4d2370e.1348d8"
            ]
        ]
    },
    {
        "id": "b0cbe663.011fe8",
        "type": "link out",
        "z": "9d5126d6.f23448",
        "name": "",
        "links": [
            "fce340b2.4c35e",
            "f78a6f77.4e54a",
            "da58e81e.c6fed8",
            "85a73dc9.b434c",
            "711a92ab.c8539c",
            "39a0b7e5.dec208"
        ],
        "x": 835,
        "y": 60,
        "wires": []
    },
    {
        "id": "fce340b2.4c35e",
        "type": "link in",
        "z": "9d5126d6.f23448",
        "name": "",
        "links": [
            "b0cbe663.011fe8"
        ],
        "x": 75,
        "y": 460,
        "wires": [
            [
                "f7952a28.2d11e8"
            ]
        ]
    },
    {
        "id": "f78a6f77.4e54a",
        "type": "link in",
        "z": "9d5126d6.f23448",
        "name": "",
        "links": [
            "b0cbe663.011fe8"
        ],
        "x": 75,
        "y": 600,
        "wires": [
            [
                "150c788b.6d8c17"
            ]
        ]
    },
    {
        "id": "da2c848.97ac678",
        "type": "ui_template",
        "z": "9d5126d6.f23448",
        "group": "4c1aeb4a.6b7814",
        "name": "",
        "order": 1,
        "width": 15,
        "height": 15,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 520,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "39bf05dc.95a11a",
        "type": "template",
        "z": "9d5126d6.f23448",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<iframe src=\"https://pav.dnpm.fr/node-red/demonstrateur/worldmap1/\" \n            frameborder=\"0\" \n            marginheight=\"0\" \n            marginwidth=\"0\" \n            width=\"790px\" \n            height=\"790px\"\n            scrolling=\"auto\">\n</iframe>",
        "x": 510,
        "y": 140,
        "wires": [
            [
                "da2c848.97ac678"
            ]
        ]
    },
    {
        "id": "fceac791.f13548",
        "type": "debug",
        "z": "9d5126d6.f23448",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 490,
        "y": 60,
        "wires": []
    },
    {
        "id": "b911a875.e6cf98",
        "type": "ui_template",
        "z": "9d5126d6.f23448",
        "group": "90097a80.ab23b8",
        "name": "Dashboard stylesheet",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 760,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "91071d9f.55a67",
        "type": "ui_template",
        "z": "9d5126d6.f23448",
        "group": "4c1aeb4a.6b7814",
        "name": "Dashboard stylesheet",
        "order": 2,
        "width": 15,
        "height": 1,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 760,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "c37ec41d.481de8",
        "type": "debug",
        "z": "9d5126d6.f23448",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 950,
        "y": 100,
        "wires": []
    },
    {
        "id": "d906b580.682388",
        "type": "ui_text",
        "z": "9d5126d6.f23448",
        "group": "90097a80.ab23b8",
        "order": 2,
        "width": 10,
        "height": 1,
        "name": "name",
        "label": "Nom de la place : ",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-center",
        "x": 530,
        "y": 420,
        "wires": []
    },
    {
        "id": "3c7bcd17.c515e2",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "DELETE",
        "topic": "DELETE FROM Valeurs WHERE Valeurs.capteur=\"undefined\";",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 500,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "9c41fa2a.4b3378",
        "type": "debug",
        "z": "9d5126d6.f23448",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 350,
        "y": 420,
        "wires": []
    },
    {
        "id": "b2f247eb.c4e628",
        "type": "ui_artlessgauge",
        "z": "9d5126d6.f23448",
        "group": "90097a80.ab23b8",
        "order": 4,
        "width": 10,
        "height": 5,
        "name": "Place totales",
        "icon": "",
        "label": "Place totales",
        "unit": "",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0][\"COUNT(*)\"]",
        "sectors": [
            {
                "val": 0,
                "col": "#8c8b8d",
                "t": "min",
                "dot": 0
            },
            {
                "val": 1,
                "col": "#8c8b8d",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 630,
        "y": 280,
        "wires": []
    },
    {
        "id": "f97e51.94a3c1b",
        "type": "sqlite",
        "z": "9d5126d6.f23448",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Place totales",
        "x": 430,
        "y": 280,
        "wires": [
            [
                "b2f247eb.c4e628"
            ]
        ]
    },
    {
        "id": "61c29d1b.bc3e64",
        "type": "function",
        "z": "9d5126d6.f23448",
        "name": "Select",
        "func": "var newMsg = {\n  \"topic\": \"SELECT COUNT(*) FROM Capteurs WHERE description='Capteur de parking'\" + \";\"\n}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 280,
        "wires": [
            [
                "f97e51.94a3c1b"
            ]
        ]
    },
    {
        "id": "5ae0a5ce.3cbb4c",
        "type": "ui_ui_control",
        "z": "9d5126d6.f23448",
        "name": "return map",
        "events": "change",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "61c29d1b.bc3e64"
            ]
        ]
    },
    {
        "id": "c8b2db08.fe8b08",
        "type": "ui_artlessgauge",
        "z": "9d5126d6.f23448",
        "group": "90097a80.ab23b8",
        "order": 5,
        "width": 10,
        "height": 5,
        "name": "Place disponibles",
        "icon": "",
        "label": "Place disponibles",
        "unit": "",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0][\"COUNT(*)\"]",
        "sectors": [
            {
                "val": 0,
                "col": "#17c10b",
                "t": "min",
                "dot": 0
            },
            {
                "val": 1,
                "col": "#17c10b",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 650,
        "y": 320,
        "wires": []
    },
    {
        "id": "c3310865.c4bb18",
        "type": "sqlite",
        "z": "9d5126d6.f23448",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Place totales",
        "x": 430,
        "y": 320,
        "wires": [
            [
                "c8b2db08.fe8b08"
            ]
        ]
    },
    {
        "id": "3fa8b869.173528",
        "type": "function",
        "z": "9d5126d6.f23448",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"WITH group1 AS (SELECT deveui,name FROM Capteurs), \\\n           group2 AS (SELECT tt.* FROM Valeurs tt INNER JOIN (SELECT name,deveui,MAX(time) AS MaxDateTime FROM Valeurs WHERE capteur='bosh' GROUP BY name) groupedtt  ON tt.name = groupedtt.name AND tt.time = groupedtt.MaxDateTime) \\\n           SELECT COUNT(*) FROM group2 WHERE valeur=1\"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 320,
        "wires": [
            [
                "c3310865.c4bb18"
            ]
        ]
    },
    {
        "id": "f4e61211.0ad2a",
        "type": "ui_ui_control",
        "z": "9d5126d6.f23448",
        "name": "return map",
        "events": "change",
        "x": 110,
        "y": 320,
        "wires": [
            [
                "3fa8b869.173528"
            ]
        ]
    },
    {
        "id": "a71aa622.0b42a8",
        "type": "debug",
        "z": "9d5126d6.f23448",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 510,
        "y": 540,
        "wires": []
    },
    {
        "id": "d2126075.0c19a",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "B_767C_PMM_2 ON",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"B_767C_PMM_2\",\"devEUI\":\"fcd6bd000019767c\",\"rxInfo\":[{\"gatewayID\":\"AIAAAKAAdSc=\",\"time\":null,\"timeSinceGPSEpoch\":null,\"rssi\":-63,\"loRaSNR\":6.2,\"channel\":5,\"rfChain\":1,\"board\":0,\"antenna\":0,\"location\":{\"latitude\":42.82911,\"longitude\":2.7672,\"altitude\":508,\"source\":\"UNKNOWN\",\"accuracy\":0},\"fineTimestampType\":\"NONE\",\"context\":\"GjjRjA==\",\"uplinkID\":\"y29VuXSoQzSv+rvH1qlR8w==\",\"crcStatus\":\"NO_CRC\"}],\"txInfo\":{\"frequency\":867500000,\"modulation\":\"LORA\",\"loRaModulationInfo\":{\"bandwidth\":125,\"spreadingFactor\":10,\"codeRate\":\"4/5\",\"polarizationInversion\":false}},\"adr\":false,\"dr\":2,\"fCnt\":14,\"fPort\":1,\"data\":\"AQ==\",\"objectJSON\":\"\",\"tags\":{\"capteur\":\"bosh\"},\"confirmedUplink\":true,\"devAddr\":\"AHfWxg==\",\"publishedAt\":\"2021-11-25T17:35:37.206781031Z\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 540,
        "y": 520,
        "wires": [
            [
                "5665f4bf.8ebc9c"
            ]
        ]
    },
    {
        "id": "772f6caa.d94e24",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "B_767C_PMM_2 OFF",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"B_767C_PMM_2\",\"devEUI\":\"fcd6bd000019767c\",\"rxInfo\":[{\"gatewayID\":\"AIAAAKAAdSc=\",\"time\":null,\"timeSinceGPSEpoch\":null,\"rssi\":-63,\"loRaSNR\":6.2,\"channel\":5,\"rfChain\":1,\"board\":0,\"antenna\":0,\"location\":{\"latitude\":42.82911,\"longitude\":2.7672,\"altitude\":508,\"source\":\"UNKNOWN\",\"accuracy\":0},\"fineTimestampType\":\"NONE\",\"context\":\"GjjRjA==\",\"uplinkID\":\"y29VuXSoQzSv+rvH1qlR8w==\",\"crcStatus\":\"NO_CRC\"}],\"txInfo\":{\"frequency\":867500000,\"modulation\":\"LORA\",\"loRaModulationInfo\":{\"bandwidth\":125,\"spreadingFactor\":10,\"codeRate\":\"4/5\",\"polarizationInversion\":false}},\"adr\":false,\"dr\":2,\"fCnt\":14,\"fPort\":1,\"data\":\"AA==\",\"objectJSON\":\"\",\"tags\":{\"capteur\":\"bosh\"},\"confirmedUplink\":true,\"devAddr\":\"AHfWxg==\",\"publishedAt\":\"2021-11-25T17:35:37.206781031Z\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 540,
        "y": 560,
        "wires": [
            [
                "5665f4bf.8ebc9c"
            ]
        ]
    },
    {
        "id": "98b04c7b.8173f",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "B_767B_PMM_1 ON",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"B_767B_PMM_1\",\"devEUI\":\"fcd6bd000019767b\",\"rxInfo\":[{\"gatewayID\":\"AIAAAKAAdSc=\",\"time\":null,\"timeSinceGPSEpoch\":null,\"rssi\":-63,\"loRaSNR\":6.2,\"channel\":5,\"rfChain\":1,\"board\":0,\"antenna\":0,\"location\":{\"latitude\":42.82911,\"longitude\":2.7672,\"altitude\":508,\"source\":\"UNKNOWN\",\"accuracy\":0},\"fineTimestampType\":\"NONE\",\"context\":\"GjjRjA==\",\"uplinkID\":\"y29VuXSoQzSv+rvH1qlR8w==\",\"crcStatus\":\"NO_CRC\"}],\"txInfo\":{\"frequency\":867500000,\"modulation\":\"LORA\",\"loRaModulationInfo\":{\"bandwidth\":125,\"spreadingFactor\":10,\"codeRate\":\"4/5\",\"polarizationInversion\":false}},\"adr\":false,\"dr\":2,\"fCnt\":14,\"fPort\":1,\"data\":\"AQ==\",\"objectJSON\":\"\",\"tags\":{\"capteur\":\"bosh\"},\"confirmedUplink\":true,\"devAddr\":\"AHfWxg==\",\"publishedAt\":\"2021-11-25T17:35:37.206781031Z\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 540,
        "y": 420,
        "wires": [
            [
                "5665f4bf.8ebc9c"
            ]
        ]
    },
    {
        "id": "d8693c70.146d6",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "B_767B_PMM_1 OFF",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"B_767B_PMM_1\",\"devEUI\":\"fcd6bd000019767b\",\"rxInfo\":[{\"gatewayID\":\"AIAAAKAAdSc=\",\"time\":null,\"timeSinceGPSEpoch\":null,\"rssi\":-63,\"loRaSNR\":6.2,\"channel\":5,\"rfChain\":1,\"board\":0,\"antenna\":0,\"location\":{\"latitude\":42.82911,\"longitude\":2.7672,\"altitude\":508,\"source\":\"UNKNOWN\",\"accuracy\":0},\"fineTimestampType\":\"NONE\",\"context\":\"GjjRjA==\",\"uplinkID\":\"y29VuXSoQzSv+rvH1qlR8w==\",\"crcStatus\":\"NO_CRC\"}],\"txInfo\":{\"frequency\":867500000,\"modulation\":\"LORA\",\"loRaModulationInfo\":{\"bandwidth\":125,\"spreadingFactor\":10,\"codeRate\":\"4/5\",\"polarizationInversion\":false}},\"adr\":false,\"dr\":2,\"fCnt\":14,\"fPort\":1,\"data\":\"AA==\",\"objectJSON\":\"\",\"tags\":{\"capteur\":\"bosh\"},\"confirmedUplink\":true,\"devAddr\":\"AHfWxg==\",\"publishedAt\":\"2021-11-25T17:35:37.206781031Z\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 540,
        "y": 460,
        "wires": [
            [
                "5665f4bf.8ebc9c"
            ]
        ]
    },
    {
        "id": "5665f4bf.8ebc9c",
        "type": "link out",
        "z": "b65661d8.d7be2",
        "name": "",
        "links": [
            "66aec9c4.0398b8"
        ],
        "x": 735,
        "y": 540,
        "wires": []
    },
    {
        "id": "66aec9c4.0398b8",
        "type": "link in",
        "z": "b65661d8.d7be2",
        "name": "",
        "links": [
            "5665f4bf.8ebc9c",
            "f9e98ab8.ff1ea8",
            "9c9888d1.392858",
            "427cf7e0.9f25e8"
        ],
        "x": 55,
        "y": 160,
        "wires": [
            [
                "4ca27c1e.6c3744"
            ]
        ]
    },
    {
        "id": "8f3f7889.508958",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "B_767D_PMM_3 ON",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"B_767D_PMM_3\",\"devEUI\":\"fcd6bd000019767d\",\"rxInfo\":[{\"gatewayID\":\"AIAAAKAAdSc=\",\"time\":null,\"timeSinceGPSEpoch\":null,\"rssi\":-63,\"loRaSNR\":6.2,\"channel\":5,\"rfChain\":1,\"board\":0,\"antenna\":0,\"location\":{\"latitude\":42.82911,\"longitude\":2.7672,\"altitude\":508,\"source\":\"UNKNOWN\",\"accuracy\":0},\"fineTimestampType\":\"NONE\",\"context\":\"GjjRjA==\",\"uplinkID\":\"y29VuXSoQzSv+rvH1qlR8w==\",\"crcStatus\":\"NO_CRC\"}],\"txInfo\":{\"frequency\":867500000,\"modulation\":\"LORA\",\"loRaModulationInfo\":{\"bandwidth\":125,\"spreadingFactor\":10,\"codeRate\":\"4/5\",\"polarizationInversion\":false}},\"adr\":false,\"dr\":2,\"fCnt\":14,\"fPort\":1,\"data\":\"AQ==\",\"objectJSON\":\"\",\"tags\":{\"capteur\":\"bosh\"},\"confirmedUplink\":true,\"devAddr\":\"AHfWxg==\",\"publishedAt\":\"2021-11-25T17:35:37.206781031Z\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 540,
        "y": 620,
        "wires": [
            [
                "5665f4bf.8ebc9c"
            ]
        ]
    },
    {
        "id": "c71d6eda.9e0fd",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "B_767D_PMM_3 OFF",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"B_767D_PMM_3\",\"devEUI\":\"fcd6bd000019767d\",\"rxInfo\":[{\"gatewayID\":\"AIAAAKAAdSc=\",\"time\":null,\"timeSinceGPSEpoch\":null,\"rssi\":-63,\"loRaSNR\":6.2,\"channel\":5,\"rfChain\":1,\"board\":0,\"antenna\":0,\"location\":{\"latitude\":42.82911,\"longitude\":2.7672,\"altitude\":508,\"source\":\"UNKNOWN\",\"accuracy\":0},\"fineTimestampType\":\"NONE\",\"context\":\"GjjRjA==\",\"uplinkID\":\"y29VuXSoQzSv+rvH1qlR8w==\",\"crcStatus\":\"NO_CRC\"}],\"txInfo\":{\"frequency\":867500000,\"modulation\":\"LORA\",\"loRaModulationInfo\":{\"bandwidth\":125,\"spreadingFactor\":10,\"codeRate\":\"4/5\",\"polarizationInversion\":false}},\"adr\":false,\"dr\":2,\"fCnt\":14,\"fPort\":1,\"data\":\"AA==\",\"objectJSON\":\"\",\"tags\":{\"capteur\":\"bosh\"},\"confirmedUplink\":true,\"devAddr\":\"AHfWxg==\",\"publishedAt\":\"2021-11-25T17:35:37.206781031Z\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 540,
        "y": 660,
        "wires": [
            [
                "5665f4bf.8ebc9c"
            ]
        ]
    },
    {
        "id": "ffeb3a37.8aa018",
        "type": "ui_ui_control",
        "z": "167ec5b.9b9513a",
        "name": "return map",
        "events": "change",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "f6ba8589.a065f8"
            ]
        ]
    },
    {
        "id": "525b78a.36e0988",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "test/Level",
        "x": 300,
        "y": 100,
        "wires": [
            [
                "436a8bf4.62c474"
            ]
        ]
    },
    {
        "id": "bf9c768a.e57028",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "temp",
        "func": "msg.payload.layer = \"temp\";\nmsg.payload.icon = \"flash\";\nmsg.payload.draggable = true;\nmsg.payload.name = msg.payload.name;\nmsg.payload.iconColor = \"gray\";\nmsg.payload.command = { \"button\": { \"name\":\"My Fancy Button\" } };\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 180,
        "wires": [
            [
                "c436b138.bf4f3",
                "d3a34bf3.3b2458"
            ]
        ]
    },
    {
        "id": "436a8bf4.62c474",
        "type": "split",
        "z": "167ec5b.9b9513a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 310,
        "y": 140,
        "wires": [
            [
                "bf9c768a.e57028"
            ]
        ]
    },
    {
        "id": "711b871c.68ec88",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "SELECT",
        "func": "var newMsg = {\n \"topic\": \"SELECT * FROM Capteurs WHERE description='TIC + 2S0 + 2tores'\" \n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 120,
        "y": 180,
        "wires": [
            [
                "525b78a.36e0988"
            ]
        ]
    },
    {
        "id": "f6ba8589.a065f8",
        "type": "delay",
        "z": "167ec5b.9b9513a",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 120,
        "y": 140,
        "wires": [
            [
                "711b871c.68ec88"
            ]
        ]
    },
    {
        "id": "aecdda53.2a6878",
        "type": "comment",
        "z": "167ec5b.9b9513a",
        "name": "MAP",
        "info": "",
        "x": 70,
        "y": 60,
        "wires": []
    },
    {
        "id": "c436b138.bf4f3",
        "type": "worldmap",
        "z": "167ec5b.9b9513a",
        "name": "map",
        "lat": "42.7110",
        "lon": "2.9100",
        "zoom": "17",
        "layer": "OSM",
        "cluster": "0",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "hiderightclick": "false",
        "coords": "deg",
        "path": "worldmap2",
        "x": 490,
        "y": 100,
        "wires": []
    },
    {
        "id": "5a205862.5bec28",
        "type": "worldmap in",
        "z": "167ec5b.9b9513a",
        "name": "",
        "path": "/worldmap2",
        "events": "all",
        "x": 720,
        "y": 100,
        "wires": [
            [
                "68298509.de2cbc"
            ]
        ]
    },
    {
        "id": "fde9b8c8.005348",
        "type": "ui_text",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 1,
        "width": 9,
        "height": 1,
        "name": "CodeSig",
        "label": "DevEui : ",
        "format": "{{msg.payload[0].deveui}}",
        "layout": "row-center",
        "x": 500,
        "y": 260,
        "wires": []
    },
    {
        "id": "4a10c3dc.68d07c",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 340,
        "y": 280,
        "wires": [
            [
                "fde9b8c8.005348",
                "b3c3a86e.212e58",
                "e0943dbe.eb4b1"
            ]
        ]
    },
    {
        "id": "aad82a3a.973d68",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"1/active_energy_Wh\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 280,
        "wires": [
            [
                "4a10c3dc.68d07c"
            ]
        ]
    },
    {
        "id": "428d4d45.491c84",
        "type": "ui_chart",
        "z": "167ec5b.9b9513a",
        "name": "Chart1",
        "group": "f795a4b4.9f3228",
        "order": 6,
        "width": 12,
        "height": 3,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 670,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "13c835f8.26852a",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 340,
        "y": 320,
        "wires": [
            [
                "9593218a.17501"
            ]
        ]
    },
    {
        "id": "9593218a.17501",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\nvar series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 320,
        "wires": [
            [
                "428d4d45.491c84"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "7919f9ff.0c4318",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"1/active_energy_Wh\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 320,
        "wires": [
            [
                "13c835f8.26852a"
            ]
        ]
    },
    {
        "id": "68298509.de2cbc",
        "type": "link out",
        "z": "167ec5b.9b9513a",
        "name": "",
        "links": [
            "13e69c06.99ea44",
            "96cf0fda.69875",
            "d2d986fb.cc5978",
            "4de24c5e.99e474",
            "689a76ae.b885a8"
        ],
        "x": 835,
        "y": 100,
        "wires": []
    },
    {
        "id": "13e69c06.99ea44",
        "type": "link in",
        "z": "167ec5b.9b9513a",
        "name": "",
        "links": [
            "68298509.de2cbc",
            "566aafa6.192e",
            "650e7156.fc0cc"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "aad82a3a.973d68",
                "7919f9ff.0c4318",
                "78de3190.0d8b7",
                "e1f8b7de.1dd338",
                "d1bc7a3d.a57228",
                "3a9efbc7.be3da4",
                "5357d63e.fbf658",
                "a9b4dd4e.ffe23"
            ]
        ]
    },
    {
        "id": "b3c3a86e.212e58",
        "type": "ui_artlessgauge",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 5,
        "width": 3,
        "height": 3,
        "name": "valeur1",
        "icon": "",
        "label": "",
        "unit": "Wh",
        "layout": "radial",
        "decimals": "2",
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].valeur",
        "sectors": [
            {
                "val": -10000,
                "col": "#440ec4",
                "t": "min",
                "dot": 0
            },
            {
                "val": 10000,
                "col": "#440ec4",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 780,
        "y": 280,
        "wires": []
    },
    {
        "id": "99e7957a.3c5928",
        "type": "ui_template",
        "z": "167ec5b.9b9513a",
        "group": "78415ed8.82198",
        "name": "",
        "order": 1,
        "width": 10,
        "height": 19,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 520,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "d3a34bf3.3b2458",
        "type": "template",
        "z": "167ec5b.9b9513a",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<iframe src=\"https://pav.dnpm.fr/node-red/demonstrateur/worldmap2/\" \n            frameborder=\"0\" \n            marginheight=\"0\" \n            marginwidth=\"0\" \n            width=\"520px\" \n            height=\"890px\"\n            scrolling=\"auto\">\n</iframe>",
        "x": 510,
        "y": 140,
        "wires": [
            [
                "99e7957a.3c5928"
            ]
        ]
    },
    {
        "id": "bbd85cdc.109d4",
        "type": "ui_template",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "name": "Dashboard stylesheet",
        "order": 28,
        "width": 18,
        "height": 1,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 760,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "12072c14.eaa0c4",
        "type": "ui_template",
        "z": "167ec5b.9b9513a",
        "group": "78415ed8.82198",
        "name": "Dashboard stylesheet",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 760,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e0943dbe.eb4b1",
        "type": "ui_text",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 3,
        "width": 8,
        "height": 1,
        "name": "name",
        "label": "Nom : ",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-center",
        "x": 630,
        "y": 260,
        "wires": []
    },
    {
        "id": "f9e98ab8.ff1ea8",
        "type": "link out",
        "z": "b65661d8.d7be2",
        "name": "",
        "links": [
            "66aec9c4.0398b8"
        ],
        "x": 1115,
        "y": 460,
        "wires": []
    },
    {
        "id": "d8c0e72.dd7c918",
        "type": "split",
        "z": "b65661d8.d7be2",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "88fac5b8.5d2a08"
            ]
        ]
    },
    {
        "id": "1db2aab5.89bf45",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "DELETE time",
        "topic": "DELETE FROM Valeurs WHERE time>1637937717.452;",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 490,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "178b2efb.4c7471",
        "type": "comment",
        "z": "b65661d8.d7be2",
        "name": "nke tic",
        "info": "nke tic",
        "x": 870,
        "y": 380,
        "wires": []
    },
    {
        "id": "ec14ea14.602b28",
        "type": "comment",
        "z": "b65661d8.d7be2",
        "name": "bosh",
        "info": "bosh",
        "x": 470,
        "y": 380,
        "wires": []
    },
    {
        "id": "23dc69bf.33ade6",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "NKE illumin",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"B_767B_PMM_1\",\"devEUI\":\"fcd6bd000019767b\",\"rxInfo\":[{\"gatewayID\":\"00800000a0007527\",\"uplinkID\":\"008ddd82-4622-48a1-84fd-e4d1f8960fa1\",\"name\":\"Gateway_P09_Test_Mios\",\"rssi\":-100,\"loRaSNR\":4.2,\"location\":{\"latitude\":42.82911,\"longitude\":2.7672,\"altitude\":508}}],\"txInfo\":{\"frequency\":868300000,\"dr\":2},\"adr\":false,\"fCnt\":9,\"fPort\":1,\"tags\":{\"capteur\":\"nke-thr\"},\"data\":\"EQoADABVOUGgAAA=\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 440,
        "wires": [
            [
                "9c9888d1.392858"
            ]
        ]
    },
    {
        "id": "2c4c7742.35a438",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "NKE temp",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"B_767B_PMM_1\",\"devEUI\":\"fcd6bd000019767b\",\"rxInfo\":[{\"gatewayID\":\"00800000a0007527\",\"uplinkID\":\"008ddd82-4622-48a1-84fd-e4d1f8960fa1\",\"name\":\"Gateway_P09_Test_Mios\",\"rssi\":-100,\"loRaSNR\":4.2,\"location\":{\"latitude\":42.82911,\"longitude\":2.7672,\"altitude\":508}}],\"txInfo\":{\"frequency\":868300000,\"dr\":2},\"adr\":false,\"fCnt\":9,\"fPort\":1,\"tags\":{\"capteur\":\"nke-thr\"},\"data\":\"EQoEAgAAKQBk\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 480,
        "wires": [
            [
                "9c9888d1.392858"
            ]
        ]
    },
    {
        "id": "d8be65ae.843ab8",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "NKE humidity",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"B_767B_PMM_1\",\"devEUI\":\"fcd6bd000019767b\",\"rxInfo\":[{\"gatewayID\":\"00800000a0007527\",\"uplinkID\":\"008ddd82-4622-48a1-84fd-e4d1f8960fa1\",\"name\":\"Gateway_P09_Test_Mios\",\"rssi\":-100,\"loRaSNR\":4.2,\"location\":{\"latitude\":42.82911,\"longitude\":2.7672,\"altitude\":508}}],\"txInfo\":{\"frequency\":868300000,\"dr\":2},\"adr\":false,\"fCnt\":9,\"fPort\":1,\"tags\":{\"capteur\":\"nke-thr\"},\"data\":\"EQoEBQAAIQMg\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 520,
        "wires": [
            [
                "9c9888d1.392858"
            ]
        ]
    },
    {
        "id": "9c9888d1.392858",
        "type": "link out",
        "z": "b65661d8.d7be2",
        "name": "",
        "links": [
            "66aec9c4.0398b8"
        ],
        "x": 295,
        "y": 480,
        "wires": []
    },
    {
        "id": "fd249af.93a8068",
        "type": "comment",
        "z": "b65661d8.d7be2",
        "name": "nke thr",
        "info": "nke thr",
        "x": 110,
        "y": 380,
        "wires": []
    },
    {
        "id": "45700c16.513f24",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "INSERT",
        "topic": "UPDATE Capteurs SET description='Pulse senso' WHERE name='N_6A5B_PMM_5';",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 960,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "4c628a3b.8a96f4",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 340,
        "y": 380,
        "wires": [
            [
                "1d870684.af3869"
            ]
        ]
    },
    {
        "id": "78de3190.0d8b7",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"1/reactive_power_VAR\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 380,
        "wires": [
            [
                "4c628a3b.8a96f4"
            ]
        ]
    },
    {
        "id": "7a91d29c.e054fc",
        "type": "ui_chart",
        "z": "167ec5b.9b9513a",
        "name": "Chart2",
        "group": "f795a4b4.9f3228",
        "order": 9,
        "width": 12,
        "height": 3,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 670,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "b29e9561.f04ff8",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 340,
        "y": 420,
        "wires": [
            [
                "bd99c0eb.702cb"
            ]
        ]
    },
    {
        "id": "bd99c0eb.702cb",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\nvar series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 420,
        "wires": [
            [
                "7a91d29c.e054fc"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "e1f8b7de.1dd338",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"1/reactive_power_VAR\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 420,
        "wires": [
            [
                "b29e9561.f04ff8"
            ]
        ]
    },
    {
        "id": "1d870684.af3869",
        "type": "ui_artlessgauge",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 8,
        "width": 3,
        "height": 3,
        "name": "valeur2",
        "icon": "",
        "label": "",
        "unit": "VAR",
        "layout": "radial",
        "decimals": "2",
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].valeur",
        "sectors": [
            {
                "val": -10000,
                "col": "#440ec4",
                "t": "min",
                "dot": 0
            },
            {
                "val": 10000,
                "col": "#440ec4",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 680,
        "y": 380,
        "wires": []
    },
    {
        "id": "d2808c5e.2c05e",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 340,
        "y": 480,
        "wires": [
            [
                "213af2ec.6d5e5e"
            ]
        ]
    },
    {
        "id": "d1bc7a3d.a57228",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"1/active_power_W\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 480,
        "wires": [
            [
                "d2808c5e.2c05e"
            ]
        ]
    },
    {
        "id": "21a35e46.1dafb2",
        "type": "ui_chart",
        "z": "167ec5b.9b9513a",
        "name": "Chart3",
        "group": "f795a4b4.9f3228",
        "order": 12,
        "width": 12,
        "height": 3,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 670,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "b781968f.861448",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 340,
        "y": 520,
        "wires": [
            [
                "6e636ff1.15749"
            ]
        ]
    },
    {
        "id": "6e636ff1.15749",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\nvar series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 520,
        "wires": [
            [
                "21a35e46.1dafb2"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "3a9efbc7.be3da4",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"1/active_power_W\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 520,
        "wires": [
            [
                "b781968f.861448"
            ]
        ]
    },
    {
        "id": "213af2ec.6d5e5e",
        "type": "ui_artlessgauge",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 11,
        "width": 3,
        "height": 3,
        "name": "valeur3",
        "icon": "",
        "label": "",
        "unit": "W",
        "layout": "radial",
        "decimals": "2",
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].valeur",
        "sectors": [
            {
                "val": -10000,
                "col": "#440ec4",
                "t": "min",
                "dot": 0
            },
            {
                "val": 10000,
                "col": "#440ec4",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 680,
        "y": 480,
        "wires": []
    },
    {
        "id": "a5809fd3.25d03",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 340,
        "y": 580,
        "wires": [
            [
                "1aa82057.c0f7c"
            ]
        ]
    },
    {
        "id": "5357d63e.fbf658",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"1/reactive_energy_Varh\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 580,
        "wires": [
            [
                "a5809fd3.25d03"
            ]
        ]
    },
    {
        "id": "1f5123d3.ecd15c",
        "type": "ui_chart",
        "z": "167ec5b.9b9513a",
        "name": "Chart4",
        "group": "f795a4b4.9f3228",
        "order": 15,
        "width": 12,
        "height": 3,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 670,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "96913bb5.993f78",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 340,
        "y": 620,
        "wires": [
            [
                "98712a23.ca7bd8"
            ]
        ]
    },
    {
        "id": "98712a23.ca7bd8",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\nvar series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 620,
        "wires": [
            [
                "1f5123d3.ecd15c"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "a9b4dd4e.ffe23",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"1/reactive_energy_Varh\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 620,
        "wires": [
            [
                "96913bb5.993f78"
            ]
        ]
    },
    {
        "id": "1aa82057.c0f7c",
        "type": "ui_artlessgauge",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 14,
        "width": 3,
        "height": 3,
        "name": "valeur4",
        "icon": "",
        "label": "",
        "unit": "Varh",
        "layout": "radial",
        "decimals": "2",
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].valeur",
        "sectors": [
            {
                "val": -10000,
                "col": "#440ec4",
                "t": "min",
                "dot": 0
            },
            {
                "val": 10000,
                "col": "#440ec4",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 680,
        "y": 580,
        "wires": []
    },
    {
        "id": "be944411.54e178",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 1180,
        "y": 280,
        "wires": [
            [
                "231b9ae3.c825d6"
            ]
        ]
    },
    {
        "id": "1b0c9b7b.0fc665",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"2/active_energy_Wh\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 280,
        "wires": [
            [
                "be944411.54e178"
            ]
        ]
    },
    {
        "id": "45d525c1.557b9c",
        "type": "ui_chart",
        "z": "167ec5b.9b9513a",
        "name": "Chart5",
        "group": "f795a4b4.9f3228",
        "order": 18,
        "width": 12,
        "height": 3,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1510,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "f16bc55f.733d68",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 1180,
        "y": 320,
        "wires": [
            [
                "7c9dc190.ca591"
            ]
        ]
    },
    {
        "id": "7c9dc190.ca591",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\nvar series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 320,
        "wires": [
            [
                "45d525c1.557b9c"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "1f8c5f25.d4adb1",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"2/active_energy_Wh\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 320,
        "wires": [
            [
                "f16bc55f.733d68"
            ]
        ]
    },
    {
        "id": "4de24c5e.99e474",
        "type": "link in",
        "z": "167ec5b.9b9513a",
        "name": "",
        "links": [
            "68298509.de2cbc",
            "566aafa6.192e",
            "650e7156.fc0cc"
        ],
        "x": 895,
        "y": 440,
        "wires": [
            [
                "1b0c9b7b.0fc665",
                "1f8c5f25.d4adb1",
                "ca3d6c8f.ba69",
                "81192b06.361748",
                "aa9953e3.b4d42",
                "704dd547.885bcc",
                "5c8043c1.24df4c",
                "9782a744.975db8"
            ]
        ]
    },
    {
        "id": "231b9ae3.c825d6",
        "type": "ui_artlessgauge",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 17,
        "width": 3,
        "height": 3,
        "name": "valeur5",
        "icon": "",
        "label": "",
        "unit": "Wh",
        "layout": "radial",
        "decimals": "2",
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].valeur",
        "sectors": [
            {
                "val": -10000,
                "col": "#dede16",
                "t": "min",
                "dot": 0
            },
            {
                "val": 10000,
                "col": "#dede16",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 1520,
        "y": 280,
        "wires": []
    },
    {
        "id": "aee4e380.8b1fb",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 1180,
        "y": 380,
        "wires": [
            [
                "90dd7747.469bf8"
            ]
        ]
    },
    {
        "id": "ca3d6c8f.ba69",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"2/reactive_power_VAR\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 380,
        "wires": [
            [
                "aee4e380.8b1fb"
            ]
        ]
    },
    {
        "id": "800595ca.384b98",
        "type": "ui_chart",
        "z": "167ec5b.9b9513a",
        "name": "Chart6",
        "group": "f795a4b4.9f3228",
        "order": 21,
        "width": 12,
        "height": 3,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1510,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "b16d4bf6.f9c1c8",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 1180,
        "y": 420,
        "wires": [
            [
                "b2aff907.dbcf48"
            ]
        ]
    },
    {
        "id": "b2aff907.dbcf48",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\nvar series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 420,
        "wires": [
            [
                "800595ca.384b98"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "81192b06.361748",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"2/reactive_power_VAR\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 420,
        "wires": [
            [
                "b16d4bf6.f9c1c8"
            ]
        ]
    },
    {
        "id": "90dd7747.469bf8",
        "type": "ui_artlessgauge",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 20,
        "width": 3,
        "height": 3,
        "name": "valeur6",
        "icon": "",
        "label": "",
        "unit": "VAR",
        "layout": "radial",
        "decimals": "2",
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].valeur",
        "sectors": [
            {
                "val": -10000,
                "col": "#dede16",
                "t": "min",
                "dot": 0
            },
            {
                "val": 10000,
                "col": "#dede16",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 1520,
        "y": 380,
        "wires": []
    },
    {
        "id": "cbebbfb4.93eaa",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 1180,
        "y": 480,
        "wires": [
            [
                "220607d7.1d64b8"
            ]
        ]
    },
    {
        "id": "aa9953e3.b4d42",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"2/active_power_W\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 480,
        "wires": [
            [
                "cbebbfb4.93eaa"
            ]
        ]
    },
    {
        "id": "608c5a04.9c8124",
        "type": "ui_chart",
        "z": "167ec5b.9b9513a",
        "name": "Chart7",
        "group": "f795a4b4.9f3228",
        "order": 24,
        "width": 12,
        "height": 3,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1510,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "6a65eb41.76a974",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 1180,
        "y": 520,
        "wires": [
            [
                "b9540367.c21a9"
            ]
        ]
    },
    {
        "id": "b9540367.c21a9",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\nvar series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 520,
        "wires": [
            [
                "608c5a04.9c8124"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "704dd547.885bcc",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"2/active_power_W\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 520,
        "wires": [
            [
                "6a65eb41.76a974"
            ]
        ]
    },
    {
        "id": "220607d7.1d64b8",
        "type": "ui_artlessgauge",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 23,
        "width": 3,
        "height": 3,
        "name": "valeur7",
        "icon": "",
        "label": "",
        "unit": "W",
        "layout": "radial",
        "decimals": "2",
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].valeur",
        "sectors": [
            {
                "val": -10000,
                "col": "#dede16",
                "t": "min",
                "dot": 0
            },
            {
                "val": 10000,
                "col": "#dede16",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 1520,
        "y": 480,
        "wires": []
    },
    {
        "id": "9ec6b599.7bd588",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 1180,
        "y": 580,
        "wires": [
            [
                "5cab76b8.7c3cb8"
            ]
        ]
    },
    {
        "id": "5c8043c1.24df4c",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"2/reactive_energy_Varh\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 580,
        "wires": [
            [
                "9ec6b599.7bd588"
            ]
        ]
    },
    {
        "id": "db2586.3a8aaa78",
        "type": "ui_chart",
        "z": "167ec5b.9b9513a",
        "name": "Chart8",
        "group": "f795a4b4.9f3228",
        "order": 27,
        "width": 12,
        "height": 3,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1510,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "a5506bf2.70f6c8",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 1180,
        "y": 620,
        "wires": [
            [
                "90c5a66b.0cb038"
            ]
        ]
    },
    {
        "id": "90c5a66b.0cb038",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\nvar series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 620,
        "wires": [
            [
                "db2586.3a8aaa78"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "9782a744.975db8",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"2/reactive_energy_Varh\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 620,
        "wires": [
            [
                "a5506bf2.70f6c8"
            ]
        ]
    },
    {
        "id": "5cab76b8.7c3cb8",
        "type": "ui_artlessgauge",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 26,
        "width": 3,
        "height": 3,
        "name": "valeur8",
        "icon": "",
        "label": "",
        "unit": "Varh",
        "layout": "radial",
        "decimals": "2",
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].valeur",
        "sectors": [
            {
                "val": -10000,
                "col": "#dede16",
                "t": "min",
                "dot": 0
            },
            {
                "val": 10000,
                "col": "#dede16",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 1520,
        "y": 580,
        "wires": []
    },
    {
        "id": "5eae1df8.632974",
        "type": "ui_text",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 4,
        "width": 3,
        "height": 3,
        "name": "1-Energie active(Wh)",
        "label": "Energie active (Wh)",
        "format": "E1",
        "layout": "row-spread",
        "x": 1080,
        "y": 40,
        "wires": []
    },
    {
        "id": "137fd2d1.449d5d",
        "type": "ui_text",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 7,
        "width": 3,
        "height": 3,
        "name": "2-Puissance reactive (Var)",
        "label": "Puissance reactive (Var)",
        "format": "E1",
        "layout": "row-spread",
        "x": 1100,
        "y": 80,
        "wires": []
    },
    {
        "id": "d58d1586.9a0d78",
        "type": "ui_text",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 13,
        "width": 3,
        "height": 3,
        "name": "4-Energie reactive  (Varh)",
        "label": "Energie reactive (Varh)",
        "format": "E1",
        "layout": "row-spread",
        "x": 1090,
        "y": 160,
        "wires": []
    },
    {
        "id": "ab61cd09.6890a",
        "type": "ui_text",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 10,
        "width": 3,
        "height": 3,
        "name": "3-Puissance active (W)",
        "label": "Puissance active (W)",
        "format": "E1",
        "layout": "row-spread",
        "x": 1090,
        "y": 120,
        "wires": []
    },
    {
        "id": "80a88051.ab0f6",
        "type": "ui_text",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 16,
        "width": 3,
        "height": 3,
        "name": "5-Energie active(Wh)2",
        "label": "Energie active (Wh)",
        "format": "E2",
        "layout": "row-spread",
        "x": 1360,
        "y": 40,
        "wires": []
    },
    {
        "id": "2954da4d.f5b416",
        "type": "ui_text",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 19,
        "width": 3,
        "height": 3,
        "name": "6-Puissance reactive (Var)2",
        "label": "Puissance reactive (Var)",
        "format": "E2",
        "layout": "row-spread",
        "x": 1380,
        "y": 80,
        "wires": []
    },
    {
        "id": "b0393033.da448",
        "type": "ui_text",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 25,
        "width": 3,
        "height": 3,
        "name": "8-Energie reactive  (Varh)2",
        "label": "Energie reactive (Varh)",
        "format": "E2",
        "layout": "row-spread",
        "x": 1370,
        "y": 160,
        "wires": []
    },
    {
        "id": "304e8353.15fcdc",
        "type": "ui_text",
        "z": "167ec5b.9b9513a",
        "group": "f795a4b4.9f3228",
        "order": 22,
        "width": 3,
        "height": 3,
        "name": "7-Puissance active (W)2",
        "label": "Puissance active (W)",
        "format": "E2",
        "layout": "row-spread",
        "x": 1370,
        "y": 120,
        "wires": []
    },
    {
        "id": "176fc6e6.b60d29",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "N_6A2E_PMM_4",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"N_6A2E_PMM_4\",\"devEUI\":\"70b3d5e75e006a2e\",\"rxInfo\":[{\"gatewayID\":\"00800000a0007527\",\"uplinkID\":\"b463ade6-a298-4116-8c70-faeba39d74fe\",\"name\":\"Gateway_P09_Test_Mios\",\"rssi\":-37,\"loRaSNR\":10,\"location\":{\"latitude\":42.82911,\"longitude\":2.7672,\"altitude\":508}}],\"txInfo\":{\"frequency\":867100000,\"dr\":5},\"adr\":true,\"fCnt\":15,\"fPort\":125,\"tags\":{\"capteur\":\"nke-senso\"},\"data\":\"MQoADwQCIwAAAAE=\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 920,
        "y": 600,
        "wires": [
            [
                "427cf7e0.9f25e8"
            ]
        ]
    },
    {
        "id": "427cf7e0.9f25e8",
        "type": "link out",
        "z": "b65661d8.d7be2",
        "name": "",
        "links": [
            "66aec9c4.0398b8"
        ],
        "x": 1055,
        "y": 600,
        "wires": []
    },
    {
        "id": "1b0d429d.21a52d",
        "type": "comment",
        "z": "b65661d8.d7be2",
        "name": "nke tic",
        "info": "nke senso",
        "x": 870,
        "y": 560,
        "wires": []
    },
    {
        "id": "4ca27c1e.6c3744",
        "type": "function",
        "z": "b65661d8.d7be2",
        "name": "decodage ",
        "func": "// ----------------------------------------------------------------\n// ----------------------- FUNCTIONS PART -------------------------\n// ----------------------------------------------------------------\n\nfunction UintToInt(Uint, Size) {\n    if (Size === 2) {\n      if ((Uint & 0x8000) > 0) {\n        Uint = Uint - 0x10000;\n      }\n    }\n    if (Size === 3) {\n      if ((Uint & 0x800000) > 0) {\n        Uint = Uint - 0x1000000;\n      }\n    }\n    if (Size === 4) {\n      if ((Uint & 0x80000000) > 0) {\n        Uint = Uint - 0x100000000;\n      }\n    }\n\n\n    return Uint;\n}\n\nfunction decimalToHex(d, padding) {\n    var hex = Number(d).toString(16).toUpperCase();\n    padding = typeof (padding) === \"undefined\" || padding === null ? padding = 2 : padding;\n\n    while (hex.length < padding) {\n        hex = \"0\" + hex;\n    }\n\n    return \"0x\" + hex;\n}\n\nfunction Bytes2Float32(bytes) {\n    var sign = (bytes & 0x80000000) ? -1 : 1;\n    var exponent = ((bytes >> 23) & 0xFF) - 127;\n    var significand = (bytes & ~(-1 << 23));\n\n    if (exponent == 128) \n        return sign * ((significand) ? Number.NaN : Number.POSITIVE_INFINITY);\n\n    if (exponent == -127) {\n        if (significand == 0) return sign * 0.0;\n        exponent = -126;\n        significand /= (1 << 22);\n    } else significand = (significand | (1 << 23)) / (1 << 23);\n\n    return sign * significand * Math.pow(2, exponent);\n}\n\nfunction parseHexString(str) { \n    var result = [];\n    while (str.length >= 2) { \n        result.push(parseInt(str.substring(0, 2), 16));\n\n        str = str.substring(2, str.length);\n    }\n\n    return result;\n}\n\nfunction Decoder(bytes, port) {\n  // Decode an uplink message from a buffer\n  // (array) of bytes to an object of fields.\n\tvar decoded = {};\n\tdecoded.lora = {};\n\n\tdecoded.lora.port  = port;\n\t\n\t// Get raw payload\n\tvar bytes_len_\t= bytes.length;\n\tvar temp_hex_str = \"\"\n\n\tdecoded.lora.payload  = \"\";\n\n\tfor( var j = 0; j < bytes_len_; j++ )\n\n\t{\n\t\ttemp_hex_str   = bytes[j].toString( 16 ).toUpperCase( );\n\t\tif( temp_hex_str.length == 1 )\n\t\t{\n\t\t  temp_hex_str = \"0\" + temp_hex_str;\n\t\t}\n\t\tdecoded.lora.payload += temp_hex_str;\n\t\tvar date = new Date();\n\t\tdecoded.lora.date = date.toISOString();\n\t}\n\t\n\tif (port === 125) \n\t{\n\t\t//batch\n\t\tbatch = !(bytes[0] & 0x01);\n\t\n\t\t//trame standard\n\t\tif (batch === false){\n\t\t\tdecoded.zclheader = {};\n\t\t\tdecoded.zclheader.report =  \"standard\";\n\t\t\tattributID = -1;\n\t\t\tcmdID = -1;\n\t\t\tclusterdID = -1;\n\t\t\t//endpoint\n\t\t\tdecoded.zclheader.endpoint = ((bytes[0]&0xE0)>>5) | ((bytes[0]&0x06)<<2);\n\t\t\t//command ID\n\t\t\tcmdID =  bytes[1]; decoded.zclheader.cmdID = decimalToHex(cmdID,2);\n\t\t\t//Cluster ID\n\t\t\tclusterdID = bytes[2]*256 + bytes[3]; decoded.zclheader.clusterdID = decimalToHex(clusterdID,4);\n\t\t\t\n\t\t\t// decode report and read atrtribut response\n\t\t\tif((cmdID === 0x0a)|(cmdID === 0x8a)|(cmdID === 0x01)){\n\t\t\t\tdecoded.data = {};\n\t\t\t\t//Attribut ID \n\t\t\t\tattributID = bytes[4]*256 + bytes[5];decoded.zclheader.attributID = decimalToHex(attributID,4);\n\t\t\t\t\n\t\t\t\tif (cmdID === 0x8a) decoded.zclheader.alarm = 1;\n\t\t\t\t//data index start\n\t\t\t\tif ((cmdID === 0x0a) | (cmdID === 0x8a))\tindex = 7;\n\t\t\t\tif (cmdID === 0x01)\t{index = 8; decoded.zclheader.status = bytes[6];}\n\t\t\t\t\n\t\t\t\t//temperature\n\t\t\t\tif (  (clusterdID === 0x0402 ) & (attributID === 0x0000)) decoded.data.temperature = (UintToInt(bytes[index]*256+bytes[index+1],2))/100;\n\t\t\t\t//humidity\n\t\t\t\tif (  (clusterdID === 0x0405 ) & (attributID === 0x0000)) decoded.data.humidity = (bytes[index]*256+bytes[index+1])/100;\n\t\t\t\t//binary input counter\n\t\t\t\tif (  (clusterdID === 0x000f ) & (attributID === 0x0402)) decoded.data.counter = (bytes[index]*256*256*256+bytes[index+1]*256*256+bytes[index+2]*256+bytes[index+3]);\n\t\t\t\t// binary input present value\n\t\t\t\tif (  (clusterdID === 0x000f ) & (attributID === 0x0055)) decoded.data.pin_state = !(!bytes[index]);\n\t\t\t\t//multistate output\n\t\t\t\tif (  (clusterdID === 0x0013 ) & (attributID === 0x0055)) decoded.data.value = bytes[index];\n\t\t\t\t// on/off present value\n\t\t\t\tif (  (clusterdID === 0x0006 ) & (attributID === 0x0000)) {state = bytes[index]; if(state === 1) decoded.data.state = \"ON\"; else decoded.data.state = \"OFF\" ; }\n\t\t\t\t// multibinary input present value\n\t\t\t\tif (  (clusterdID === 0x8005 ) & (attributID === 0x0000)) \n\t\t\t\t{\n\t\t\t\t\tdecoded.data.pin_state_1 = ((bytes[index+1]&0x01) === 0x01);\n\t\t\t\t\tdecoded.data.pin_state_2 = ((bytes[index+1]&0x02) === 0x02);\n\t\t\t\t\tdecoded.data.pin_state_3 = ((bytes[index+1]&0x04) === 0x04);\n\t\t\t\t\tdecoded.data.pin_state_4 = ((bytes[index+1]&0x08) === 0x08);\n\t\t\t\t\tdecoded.data.pin_state_5 = ((bytes[index+1]&0x10) === 0x10);\n\t\t\t\t\tdecoded.data.pin_state_6 = ((bytes[index+1]&0x20) === 0x20);\n\t\t\t\t\tdecoded.data.pin_state_7 = ((bytes[index+1]&0x40) === 0x40);\n\t\t\t\t\tdecoded.data.pin_state_8 = ((bytes[index+1]&0x80) === 0x80);\n\t\t\t\t\tdecoded.data.pin_state_9 = ((bytes[index]&0x01) === 0x01);\n\t\t\t\t\tdecoded.data.pin_state_10 = ((bytes[index]&0x02) === 0x02);\n\t\t\t\t}\n\t\t\t\t//analog input\n\t\t\t\tif (  (clusterdID === 0x000c ) & (attributID === 0x0055)) decoded.data.analog = Bytes2Float32(bytes[index]*256*256*256+bytes[index+1]*256*256+bytes[index+2]*256+bytes[index+3]);\n\n\t\t\t\t//modbus \n\t\t\t\tif (  (clusterdID === 0x8007 ) & (attributID === 0x0001)) \n\t\t\t\t{\n\t\t\t\t\tdecoded.data.payload = \"\";\n\t\t\t\t\tdecoded.data.modbus_payload = \"\";\n\t\t\t\t\tdecoded.data.size = bytes[index]; \n\t\t\t\t\tdecoded.data.modbus_float = 0; // 0: pas de décodage float 1: décodage float 2: décodage float 2word inversé\n\t\t\t\t\tfor( var j = 0; j < decoded.data.size -1; j++ )\n\t\t\t\t\t{\n\t\t\t\t\t\t\n\t\t\t\t\t\ttemp_hex_str   = bytes[index+j+1].toString( 16 ).toUpperCase( );\n\t\t\t\t\t\tif( temp_hex_str.length == 1 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemp_hex_str = \"0\" + temp_hex_str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdecoded.data.payload += temp_hex_str;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (j == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdecoded.data.modbus_address = bytes[index+j+1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (j == 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdecoded.data.modbus_commandID = bytes[index+j+1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (j == 2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdecoded.data.modbus_size = bytes[index+j+1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdecoded.data.modbus_payload += temp_hex_str;\n\t\t\t\t\t\t\tif (decoded.data.modbus_float == 1){ // big endian\n\t\t\t\t\t\t\t\tif (j == 3)\t\tdecoded.data.fregister_00 = Bytes2Float32(bytes[index+j+1]*256*256*256+bytes[index+j+1+1]*256*256+bytes[index+j+1+2]*256+bytes[index+j+1+3]);\n\t\t\t\t\t\t\t\tif (j == 7)\t\tdecoded.data.fregister_01 = Bytes2Float32(bytes[index+j+1]*256*256*256+bytes[index+j+1+1]*256*256+bytes[index+j+1+2]*256+bytes[index+j+1+3]);\n\t\t\t\t\t\t\t\tif (j == 11)\tdecoded.data.fregister_02 = Bytes2Float32(bytes[index+j+1]*256*256*256+bytes[index+j+1+1]*256*256+bytes[index+j+1+2]*256+bytes[index+j+1+3]);\n\t\t\t\t\t\t\t\tif (j == 15)\tdecoded.data.fregister_03 = Bytes2Float32(bytes[index+j+1]*256*256*256+bytes[index+j+1+1]*256*256+bytes[index+j+1+2]*256+bytes[index+j+1+3]);\n\t\t\t\t\t\t\t\tif (j == 19)\tdecoded.data.fregister_04 = Bytes2Float32(bytes[index+j+1]*256*256*256+bytes[index+j+1+1]*256*256+bytes[index+j+1+2]*256+bytes[index+j+1+3]);\n\t\t\t\t\t\t\t\tif (j == 23)\tdecoded.data.fregister_05 = Bytes2Float32(bytes[index+j+1]*256*256*256+bytes[index+j+1+1]*256*256+bytes[index+j+1+2]*256+bytes[index+j+1+3]);\n\t\t\t\t\t\t\t\tif (j == 27)\tdecoded.data.fregister_06 = Bytes2Float32(bytes[index+j+1]*256*256*256+bytes[index+j+1+1]*256*256+bytes[index+j+1+2]*256+bytes[index+j+1+3]);\n\t\t\t\t\t\t\t\tif (j == 31)\tdecoded.data.fregister_07 = Bytes2Float32(bytes[index+j+1]*256*256*256+bytes[index+j+1+1]*256*256+bytes[index+j+1+2]*256+bytes[index+j+1+3]);\n\t\t\t\t\t\t\t\tif (j == 35)\tdecoded.data.fregister_08 = Bytes2Float32(bytes[index+j+1]*256*256*256+bytes[index+j+1+1]*256*256+bytes[index+j+1+2]*256+bytes[index+j+1+3]);\n\t\t\t\t\t\t\t\tif (j == 35)\tdecoded.data.fregister_09 = Bytes2Float32(bytes[index+j+1]*256*256*256+bytes[index+j+1+1]*256*256+bytes[index+j+1+2]*256+bytes[index+j+1+3]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (decoded.data.modbus_float == 2){ // float little endian 2 word\n\t\t\t\t\t\t\t\tif (j == 3)\t\tdecoded.data.fregister_00 = Bytes2Float32(bytes[index+j+1]*256+bytes[index+j+1+1]+bytes[index+j+1+2]*256*256*256+bytes[index+j+1+3]*256*256);\n\t\t\t\t\t\t\t\tif (j == 7)\t\tdecoded.data.fregister_01 = Bytes2Float32(bytes[index+j+1]*256+bytes[index+j+1+1]+bytes[index+j+1+2]*256*256*256+bytes[index+j+1+3]*256*256);\n\t\t\t\t\t\t\t\tif (j == 11)\tdecoded.data.fregister_02 = Bytes2Float32(bytes[index+j+1]*256+bytes[index+j+1+1]+bytes[index+j+1+2]*256*256*256+bytes[index+j+1+3]*256*256);\n\t\t\t\t\t\t\t\tif (j == 15)\tdecoded.data.fregister_03 = Bytes2Float32(bytes[index+j+1]*256+bytes[index+j+1+1]+bytes[index+j+1+2]*256*256*256+bytes[index+j+1+3]*256*256);\n\t\t\t\t\t\t\t\tif (j == 19)\tdecoded.data.fregister_04 = Bytes2Float32(bytes[index+j+1]*256+bytes[index+j+1+1]+bytes[index+j+1+2]*256*256*256+bytes[index+j+1+3]*256*256);\n\t\t\t\t\t\t\t\tif (j == 23)\tdecoded.data.fregister_05 = Bytes2Float32(bytes[index+j+1]*256+bytes[index+j+1+1]+bytes[index+j+1+2]*256*256*256+bytes[index+j+1+3]*256*256);\n\t\t\t\t\t\t\t\tif (j == 27)\tdecoded.data.fregister_06 = Bytes2Float32(bytes[index+j+1]*256+bytes[index+j+1+1]+bytes[index+j+1+2]*256*256*256+bytes[index+j+1+3]*256*256);\n\t\t\t\t\t\t\t\tif (j == 31)\tdecoded.data.fregister_07 = Bytes2Float32(bytes[index+j+1]*256+bytes[index+j+1+1]+bytes[index+j+1+2]*256*256*256+bytes[index+j+1+3]*256*256);\n\t\t\t\t\t\t\t\tif (j == 35)\tdecoded.data.fregister_08 = Bytes2Float32(bytes[index+j+1]*256+bytes[index+j+1+1]+bytes[index+j+1+2]*256*256*256+bytes[index+j+1+3]*256*256);\n\t\t\t\t\t\t\t\tif (j == 35)\tdecoded.data.fregister_09 = Bytes2Float32(bytes[index+j+1]*256+bytes[index+j+1+1]+bytes[index+j+1+2]*256*256*256+bytes[index+j+1+3]*256*256);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//multimodbus \n\t\t\t\tif (  (clusterdID === 0x8009 ) & (attributID === 0x0000)) \n\t\t\t\t{\n\t\t\t\t\tdecoded.data.payloads = \"\";\n\t\t\t\t\tdecoded.data.size = bytes[index]; \n\t\t\t\t\tdecoded.data.multimodbus_frame_series_sent = bytes[index+1];\n\t\t\t\t\tdecoded.data.multimodbus_frame_number_in_serie = (bytes[index+2] & 0xE0) >> 5; \n\t\t\t\t\tdecoded.data.multimodbus_last_frame_of_serie = (bytes[index+2] & 0x1C ) >> 2; \n\t\t\t\t\tdecoded.data.multimodbus_EP9 = ((bytes[index+2]&0x01) === 0x01);\n\t\t\t\t\tdecoded.data.multimodbus_EP8 = ((bytes[index+2]&0x02) === 0x02);\n\t\t\t\t\tdecoded.data.multimodbus_EP7 = ((bytes[index+3]&0x80) === 0x80);\n\t\t\t\t\tdecoded.data.multimodbus_EP6 = ((bytes[index+3]&0x40) === 0x40);\n\t\t\t\t\tdecoded.data.multimodbus_EP5 = ((bytes[index+3]&0x20) === 0x20);\n\t\t\t\t\tdecoded.data.multimodbus_EP4 = ((bytes[index+3]&0x10) === 0x10);\n\t\t\t\t\tdecoded.data.multimodbus_EP3 = ((bytes[index+3]&0x08) === 0x08);\n\t\t\t\t\tdecoded.data.multimodbus_EP2 = ((bytes[index+3]&0x04) === 0x04);\n\t\t\t\t\tdecoded.data.multimodbus_EP1 = ((bytes[index+3]&0x02) === 0x02);\n\t\t\t\t\tdecoded.data.multimodbus_EP0 = ((bytes[index+3]&0x01) === 0x01); \n\t\t\t\t\tindex2 = index + 4;\n\t\t\t\t\twithout_header = 0;\n\n\t\t\t\t\tif (decoded.data.multimodbus_EP0 === true)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (without_header === 0){\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP0_slaveID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP0_fnctID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP0_datasize = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdecoded.data.multimodbus_EP0_payload = \"\"\n\t\t\t\t\t\tif (bytes[index2] === undefined ) return decoded;\n\t\t\t\t\t\tfor( var j = 0; j < decoded.data.multimodbus_EP0_datasize; j++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemp_hex_str   = bytes[index2+j].toString( 16 ).toUpperCase( );\n\t\t\t\t\t\t\tif( temp_hex_str.length == 1 )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttemp_hex_str = \"0\" + temp_hex_str;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP0_payload += temp_hex_str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex2 = index2 + decoded.data.multimodbus_EP0_datasize;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (decoded.data.multimodbus_EP1 === true)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (without_header === 0){\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP1_slaveID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP1_fnctID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP1_datasize = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdecoded.data.multimodbus_EP1_payload = \"\"\n\t\t\t\t\t\tif (bytes[index2] === undefined ) return decoded;\n\t\t\t\t\t\tfor( var j = 0; j < decoded.data.multimodbus_EP1_datasize; j++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemp_hex_str   = bytes[index2+j].toString( 16 ).toUpperCase( );\n\t\t\t\t\t\t\tif( temp_hex_str.length == 1 )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttemp_hex_str = \"0\" + temp_hex_str;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP1_payload += temp_hex_str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex2 = index2 + decoded.data.multimodbus_EP1_datasize;\n\t\t\t\t\t}\n\t\t\t\t\tif (decoded.data.multimodbus_EP2 === true)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (without_header === 0){\t\t\t\t\t\t\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP2_slaveID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP2_fnctID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP2_datasize = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdecoded.data.multimodbus_EP2_payload = \"\"\n\t\t\t\t\t\tif (bytes[index2] === undefined ) return decoded;\n\t\t\t\t\t\tfor( var j = 0; j < decoded.data.multimodbus_EP2_datasize; j++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemp_hex_str   = bytes[index2+j].toString( 16 ).toUpperCase( );\n\t\t\t\t\t\t\tif( temp_hex_str.length == 1 )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttemp_hex_str = \"0\" + temp_hex_str;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP2_payload += temp_hex_str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex2 = index2 + decoded.data.multimodbus_EP2_datasize;\n\t\t\t\t\t}\n\t\t\t\t\tif (decoded.data.multimodbus_EP3 === true)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (without_header === 0){\t\t\t\t\t\t\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP3_slaveID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP3_fnctID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP3_datasize = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdecoded.data.multimodbus_EP3_payload = \"\"\n\t\t\t\t\t\tif (bytes[index2] === undefined ) return decoded;\n\t\t\t\t\t\tfor( var j = 0; j < decoded.data.multimodbus_EP3_datasize; j++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemp_hex_str   = bytes[index2+j].toString( 16 ).toUpperCase( );\n\t\t\t\t\t\t\tif( temp_hex_str.length == 1 )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttemp_hex_str = \"0\" + temp_hex_str;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP3_payload += temp_hex_str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex2 = index2 + decoded.data.multimodbus_EP3_datasize;\n\t\t\t\t\t}\n\t\t\t\t\tif (decoded.data.multimodbus_EP4 === true)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (without_header === 0){\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP4_slaveID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP4_fnctID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP4_datasize = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdecoded.data.multimodbus_EP4_payload = \"\"\n\t\t\t\t\t\tif (bytes[index2] === undefined ) return decoded;\n\t\t\t\t\t\tfor( var j = 0; j < decoded.data.multimodbus_EP4_datasize; j++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemp_hex_str   = bytes[index2+j].toString( 16 ).toUpperCase( );\n\t\t\t\t\t\t\tif( temp_hex_str.length == 1 )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttemp_hex_str = \"0\" + temp_hex_str;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP4_payload += temp_hex_str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex2 = index2 + decoded.data.multimodbus_EP4_datasize;\n\t\t\t\t\t}\n\t\t\t\t\tif (decoded.data.multimodbus_EP5 === true)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (without_header === 0){\t\t\t\t\t\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP5_slaveID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP5_fnctID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP5_datasize = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdecoded.data.multimodbus_EP5_payload = \"\"\n\t\t\t\t\t\tif (bytes[index2] === undefined ) return decoded;\n\t\t\t\t\t\tfor( var j = 0; j < decoded.data.multimodbus_EP5_datasize; j++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemp_hex_str   = bytes[index2+j].toString( 16 ).toUpperCase( );\n\t\t\t\t\t\t\tif( temp_hex_str.length == 1 )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttemp_hex_str = \"0\" + temp_hex_str;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP5_payload += temp_hex_str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex2 = index2 + decoded.data.multimodbus_EP5_datasize;\n\t\t\t\t\t}\n\t\t\t\t\tif (decoded.data.multimodbus_EP6 === true)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (without_header === 0){\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP6_slaveID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP6_fnctID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP6_datasize = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdecoded.data.multimodbus_EP6_payload = \"\"\n\t\t\t\t\t\tif (bytes[index2] === undefined ) return decoded;\n\t\t\t\t\t\tfor( var j = 0; j < decoded.data.multimodbus_EP6_datasize; j++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemp_hex_str   = bytes[index2+j].toString( 16 ).toUpperCase( );\n\t\t\t\t\t\t\tif( temp_hex_str.length == 1 )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttemp_hex_str = \"0\" + temp_hex_str;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP6_payload += temp_hex_str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex2 = index2 + decoded.data.multimodbus_EP6_datasize;\n\t\t\t\t\t}\n\t\t\t\t\tif (decoded.data.multimodbus_EP7 === true)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (without_header === 0){\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP7_slaveID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP7_fnctID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP7_datasize = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdecoded.data.multimodbus_EP7_payload = \"\"\n\t\t\t\t\t\tif (bytes[index2] === undefined ) return decoded;\n\t\t\t\t\t\tfor( var j = 0; j < decoded.data.multimodbus_EP7_datasize; j++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemp_hex_str   = bytes[index2+j].toString( 16 ).toUpperCase( );\n\t\t\t\t\t\t\tif( temp_hex_str.length == 1 )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttemp_hex_str = \"0\" + temp_hex_str;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP7_payload += temp_hex_str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex2 = index2 + decoded.data.multimodbus_EP7_datasize;\n\t\t\t\t\t}\n\t\t\t\t\tif (decoded.data.multimodbus_EP8 === true)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (without_header === 0){\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP8_slaveID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP8_fnctID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP8_datasize = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdecoded.data.multimodbus_EP8_payload = \"\"\n\t\t\t\t\t\tif (bytes[index2] === undefined ) return decoded;\n\t\t\t\t\t\tfor( var j = 0; j < decoded.data.multimodbus_EP8_datasize; j++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemp_hex_str   = bytes[index2+j].toString( 16 ).toUpperCase( );\n\t\t\t\t\t\t\tif( temp_hex_str.length == 1 )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttemp_hex_str = \"0\" + temp_hex_str;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP8_payload += temp_hex_str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex2 = index2 + decoded.data.multimodbus_EP8_datasize;\n\t\t\t\t\t}\n\t\t\t\t\tif (decoded.data.multimodbus_EP9 === true)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (without_header === 0){\t\t\t\t\t\t\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP6_slaveID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP6_fnctID = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP6_datasize = bytes[index2];\n\t\t\t\t\t\t\tindex2 = index2 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdecoded.data.multimodbus_EP6_payload = \"\"\n\t\t\t\t\t\tif (bytes[index2] === undefined ) return decoded;\n\t\t\t\t\t\tfor( var j = 0; j < decoded.data.multimodbus_EP6_datasize; j++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemp_hex_str   = bytes[index2+j].toString( 16 ).toUpperCase( );\n\t\t\t\t\t\t\tif( temp_hex_str.length == 1 )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttemp_hex_str = \"0\" + temp_hex_str;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdecoded.data.multimodbus_EP6_payload += temp_hex_str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex2 = index2 + decoded.data.multimodbus_EP6_datasize;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//simple metering\n\t\t\t\tif (  (clusterdID === 0x0052 ) & (attributID === 0x0000)) {\n\t\t\t\t\tdecoded.data.active_energy_Wh = UintToInt(bytes[index+1]*256*256+bytes[index+2]*256+bytes[index+3],3);\n\t\t\t\t\tdecoded.data.reactive_energy_Varh = UintToInt(bytes[index+4]*256*256+bytes[index+5]*256+bytes[index+6],3);\n\t\t\t\t\tdecoded.data.nb_samples = (bytes[index+7]*256+bytes[index+8]);\n\t\t\t\t\tdecoded.data.active_power_W = UintToInt(bytes[index+9]*256+bytes[index+10],2);\n\t\t\t\t\tdecoded.data.reactive_power_VAR = UintToInt(bytes[index+11]*256+bytes[index+12],2);\n\t\t\t\t}\n\t\t\t\t// lorawan message type\n\t\t\t\tif (  (clusterdID === 0x8004 ) & (attributID === 0x0000)) {\n\t\t\t\t  if (bytes[index] === 1)\n\t\t\t\t\tdecoded.data.message_type = \"confirmed\";\n\t\t\t\t  if (bytes[index] === 0)\n\t\t\t\t\tdecoded.data.message_type = \"unconfirmed\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// lorawan retry\n\t\t\t\tif (  (clusterdID === 0x8004 ) & (attributID === 0x0001)) {\n\t\t\t\t\t\tdecoded.data.nb_retry= bytes[index] ;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// lorawan reassociation\n\t\t\t\tif (  (clusterdID === 0x8004 ) & (attributID === 0x0002)) {\n\t\t\t\t\tdecoded.data.period_in_minutes = bytes[index+1] *256+bytes[index+2];\n\t\t\t\t\tdecoded.data.nb_err_frames = bytes[index+3] *256+bytes[index+4];\n\t\t\t\t}\n\t\t\t\t// configuration node power desc\n\t\t\t\tif (   (clusterdID === 0x0050 ) & (attributID === 0x0006)) {\n\t\t\t\t  index2 = index + 3;\n\t\t\t\t  if ((bytes[index+2] &0x01) === 0x01) {decoded.data.main_or_external_voltage = (bytes[index2]*256+bytes[index2+1])/1000;index2=index2+2;}\n\t\t\t\t  if ((bytes[index+2] &0x02) === 0x02) {decoded.data.rechargeable_battery_voltage = (bytes[index2]*256+bytes[index2+1])/1000;index2=index2+2;}\n\t\t\t\t  if ((bytes[index+2] &0x04) === 0x04) {decoded.data.disposable_battery_voltage = (bytes[index2]*256+bytes[index2+1])/1000;index2=index2+2;}\n\t\t\t\t  if ((bytes[index+2] &0x08) === 0x08) {decoded.data.solar_harvesting_voltage = (bytes[index2]*256+bytes[index2+1])/1000;index2=index2+2;}\n\t\t\t\t  if ((bytes[index+2] &0x10) === 0x10) {decoded.data.tic_harvesting_voltage = (bytes[index2]*256+bytes[index2+1])/1000;index2=index2+2;}\n\t\t\t\t}\n\t\t\t\t//energy and power metering\n\t\t\t\tif (  (clusterdID === 0x800a) & (attributID === 0x0000)) {\n\t\t\t\t\tindex2 = index;\n\t\t\t\t\tdecoded.data.sum_positive_active_energy_Wh = UintToInt(bytes[index2+1]*256*256*256+bytes[index2+2]*256*256+bytes[index2+3]*256+bytes[index2+4],4);\n\t\t\t\t\tindex2 = index2 + 4; \n\t\t\t\t\tdecoded.data.sum_negative_active_energy_Wh = UintToInt(bytes[index2+1]*256*256*256+bytes[index2+2]*256*256+bytes[index2+3]*256+bytes[index2+4],4);\n\t\t\t\t\tindex2 = index2 + 4; \n\t\t\t\t\tdecoded.data.sum_positive_reactive_energy_Wh = UintToInt(bytes[index2+1]*256*256*256+bytes[index2+2]*256*256+bytes[index2+3]*256+bytes[index2+4],4);\n\t\t\t\t\tindex2 = index2 + 4; \n\t\t\t\t\tdecoded.data.sum_negative_reactive_energy_Wh = UintToInt(bytes[index2+1]*256*256*256+bytes[index2+2]*256*256+bytes[index2+3]*256+bytes[index2+4],4);\n\t\t\t\t\tindex2 = index2 + 4; \n\t\t\t\t\tdecoded.data.positive_active_power_W = UintToInt(bytes[index2+1]*256*256*256+bytes[index2+2]*256*256+bytes[index2+3]*256+bytes[index2+4],4);\n\t\t\t\t\tindex2 = index2 + 4; \n\t\t\t\t\tdecoded.data.negative_active_power_W = UintToInt(bytes[index2+1]*256*256*256+bytes[index2+2]*256*256+bytes[index2+3]*256+bytes[index2+4],4);\n\t\t\t\t\tindex2 = index2 + 4; \n\t\t\t\t\tdecoded.data.positive_reactive_power_W = UintToInt(bytes[index2+1]*256*256*256+bytes[index2+2]*256*256+bytes[index2+3]*256+bytes[index2+4],4);\n\t\t\t\t\tindex2 = index2 + 4; \n\t\t\t\t\tdecoded.data.negative_reactive_power_W = UintToInt(bytes[index2+1]*256*256*256+bytes[index2+2]*256*256+bytes[index2+3]*256+bytes[index2+4],4);\n\t\t\t\t}\n\t\t\t\t//energy and power metering\n\t\t\t\tif (  (clusterdID === 0x800b) & (attributID === 0x0000)) {\n\t\t\t\t\tindex2 = index;\n\t\t\t\t\tdecoded.data.Vrms = UintToInt(bytes[index2+1]*256+bytes[index2+2],2)/10;\n\t\t\t\t\tindex2 = index2 + 2; \n\t\t\t\t\tdecoded.data.Irms = UintToInt(bytes[index2+1]*256+bytes[index2+2],2)/10;\n\t\t\t\t\tindex2 = index2 + 2; \n\t\t\t\t\tdecoded.data.phase_angle = UintToInt(bytes[index2+1]*256+bytes[index2+2],2);\n\t\t\t\t}\n\t\t\t\t//concentration\n\t\t\t\tif (  (clusterdID === 0x800c) & (attributID === 0x0000)) {\n\t\t\t\t\tdecoded.data.Concentration = (bytes[index]*256+bytes[index+1]);\n\t\t\t\t}\n\t\t\t\t//illuminance\n\t\t\t\tif (  (clusterdID === 0x0400) & (attributID === 0x0000)) {\n\t\t\t\t\tdecoded.data.Illuminance = (bytes[index]*256+bytes[index+1]);\n\t\t\t\t}\n\t\t\t\t//Pressure\n\t\t\t\tif (  (clusterdID === 0x0403) & (attributID === 0x0000)) {\n\t\t\t\t\tdecoded.data.Pressure = (UintToInt(bytes[index]*256+bytes[index+1],2));\n\t\t\t\t}\n\t\t\t\t//Occupancy\n\t\t\t\tif (  (clusterdID === 0x0406) & (attributID === 0x0000)) {\n\t\t\t\t\tdecoded.data.Occupancy = !(!bytes[index]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\t//decode configuration response\n\t\t\tif(cmdID === 0x07){\n\t\t\t\t//AttributID\n\t\t\t\tattributID = bytes[6]*256 + bytes[7];decoded.zclheader.attributID = decimalToHex(attributID,4);\n\t\t\t\t//status\n\t\t\t\tdecoded.zclheader.status = bytes[4];\n\t\t\t\t//batch\n\t\t\t\tdecoded.zclheader.batch = bytes[5];\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t//decode read configuration response\n\t\t\tif(cmdID === 0x09){\n\t\t\t\t//AttributID\n\t\t\t\tattributID = bytes[6]*256 + bytes[7];decoded.zclheader.attributID = decimalToHex(attributID,4);\n\t\t\t\t//status\n\t\t\t\tdecoded.zclheader.status = bytes[4];\n\t\t\t\t//batch\n\t\t\t\tdecoded.zclheader.batch = bytes[5];\n\t\t\t\t\n\t\t\t\t//AttributType\n\t\t\t\tdecoded.zclheader.attribut_type = bytes[8];\n\t\t\t\t//min\n\t\t\t\tdecoded.zclheader.min = {}\n\t\t\t\tif ((bytes[9] & 0x80) === 0x80) {decoded.zclheader.min.value = (bytes[9]-0x80)*256+bytes[10];decoded.zclheader.min.unity = \"minutes\";} else {decoded.zclheader.min.value = bytes[9]*256+bytes[10];decoded.zclheader.min.unity = \"seconds\";}\n\t\t\t\t//max\n\t\t\t\tdecoded.zclheader.max = {}\n\t\t\t\tif ((bytes[9] & 0x80) === 0x80) {decoded.zclheader.max.value = (bytes[9]-0x80)*256+bytes[10];decoded.zclheader.max.unity = \"minutes\";} else {decoded.zclheader.max.value = bytes[9]*256+bytes[10];decoded.zclheader.max.unity = \"seconds\";}\n\t\t\t\tdecoded.lora.payload  = \"\";\n\n\t\t\t}\n\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdecoded.batch = {};\n\t\t\tdecoded.batch.report = \"batch\";\n\t\t}\n\t}\n\n  return decoded;\n}\n\nif(msg.payload.tags.capteur.includes(\"nke\")) {\n    \n    var deviceName = msg.payload.deviceName;\n    var capteur = msg.payload.tags.capteur;\n    const buffer = Buffer.from(msg.payload.data, 'base64');\n    var data_hex = buffer.toString('hex');\n    var port = 125;\n    //var payload = \"110a000f04022300000456\";\n    var byte_array = parseHexString(data_hex);\n    var port_nb = parseInt(port, 10);\n    var decode_data = Decoder(byte_array, port_nb);\n    //return {decode_data}\n    \n    var Tag_Pi = msg.payload.devEUI;\n    \n    var Horodatage = new Date() / 1000;\n    //var d = new Date(msg.payload.rxInfo[0].time); var Horodatage = ('0' + d.getDate()).slice(-2) + \"/\" + ('0' + (d.getMonth()+1)).slice(-2) + \"/\" + d.getFullYear() + \" \" + ('0' + d.getHours()).slice(-2) + \":\" + ('0' + d.getMinutes()).slice(-2) + \":\" + ('0' + d.getSeconds()).slice(-2);\n    \n    var loc_long = \"\";\n    var loc_lat = \"\";\n    var batterie = \"\";\n    \n    var message = [];\n    if(msg.payload.tags.capteur==\"nke-thr\") {\n        message = { payload: {'deveui':Tag_Pi, 'time':Horodatage, 'type': decode_data.zclheader.clusterdID,'capteur':capteur, 'valeur': decode_data.data[Object.keys(decode_data.data)[0]], 'deviceName': deviceName, 'Gps_lon':loc_long, 'Gps_lat':loc_lat, 'batterie':batterie } };\n        return [ message, null];\n    }\n    else if(msg.payload.tags.capteur==\"nke-tic\") {\n        if(decode_data.zclheader.clusterdID==\"0x0052\") {\n            message.push( {'deveui':Tag_Pi, 'time':(new Date() / 1000), 'type': decode_data.zclheader.endpoint+'/active_energy_Wh','capteur':capteur, 'valeur': decode_data.data.active_energy_Wh, 'deviceName': deviceName, 'Gps_lon':loc_long, 'Gps_lat':loc_lat, 'batterie':batterie } );\n            message.push( {'deveui':Tag_Pi, 'time':(new Date() / 1000)+0.1, 'type': decode_data.zclheader.endpoint+'/reactive_energy_Varh','capteur':capteur, 'valeur': decode_data.data.reactive_energy_Varh, 'deviceName': deviceName, 'Gps_lon':loc_long, 'Gps_lat':loc_lat, 'batterie':batterie } );\n            message.push( {'deveui':Tag_Pi, 'time':(new Date() / 1000)+0.2, 'type': decode_data.zclheader.endpoint+'/nb_samples','capteur':capteur, 'valeur': decode_data.data.nb_samples, 'deviceName': deviceName, 'Gps_lon':loc_long, 'Gps_lat':loc_lat, 'batterie':batterie } );\n            message.push( {'deveui':Tag_Pi, 'time':(new Date() / 1000)+0.3, 'type': decode_data.zclheader.endpoint+'/active_power_W','capteur':capteur, 'valeur': decode_data.data.active_power_W, 'deviceName': deviceName, 'Gps_lon':loc_long, 'Gps_lat':loc_lat, 'batterie':batterie } );\n            message.push( {'deveui':Tag_Pi, 'time':(new Date() / 1000)+0.4, 'type': decode_data.zclheader.endpoint+'/reactive_power_VAR','capteur':capteur, 'valeur': decode_data.data.reactive_power_VAR, 'deviceName': deviceName, 'Gps_lon':loc_long, 'Gps_lat':loc_lat, 'batterie':batterie } );\n            return [ null, {payload:message}];\n        }\n    }\n    else if(msg.payload.tags.capteur==\"nke-senso\") {\n        if(decode_data.zclheader.clusterdID==\"0x000F\" && decode_data.zclheader.attributID==\"0x0402\") {\n            message = { payload: {'deveui':Tag_Pi, 'time':(new Date() / 1000), 'type': decode_data.zclheader.endpoint,'capteur':capteur, 'valeur': decode_data.data.counter, 'deviceName': deviceName, 'Gps_lon':loc_long, 'Gps_lat':loc_lat, 'batterie':batterie } };\n            return [ message, null ];\n        }\n    }\n}\nelse if(msg.payload.tags.capteur == \"bosh\")\n{\n    const buffer = Buffer.from(msg.payload.data, 'base64');\n    var RawBuffer = Buffer.from(buffer, 'hex');\n\n    if(msg.payload.fPort == 1 || msg.payload.fPort == 3) {\n        msg.payload.type = 'parking';\n        msg.payload.valeur = parseInt(RawBuffer.readInt8()&1,10);\n        msg.payload.capteur = msg.payload.tags.capteur;\n        msg.payload.time =  new Date() / 1000;\n        msg.payload.deveui = msg.payload.devEUI;\n        return [ msg, null];\n    }\n    else {\n        return;\n    }\n}\nelse {\n    return\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 180,
        "y": 160,
        "wires": [
            [
                "88fac5b8.5d2a08"
            ],
            [
                "d8c0e72.dd7c918"
            ]
        ]
    },
    {
        "id": "f50c1bd8.5b13a8",
        "type": "ui_ui_control",
        "z": "e51008a5.27ff68",
        "name": "return map",
        "events": "change",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "1a015e81.03abe1"
            ]
        ]
    },
    {
        "id": "6fe57a61.a694a4",
        "type": "sqlite",
        "z": "e51008a5.27ff68",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "test/Level",
        "x": 320,
        "y": 80,
        "wires": [
            [
                "b8dc8e7d.728b3"
            ]
        ]
    },
    {
        "id": "e9ac04e6.a0a458",
        "type": "function",
        "z": "e51008a5.27ff68",
        "name": "temp",
        "func": "msg.payload.layer = \"temp\";\nmsg.payload.draggable = true;\nmsg.payload.icon = \"fa-map-pin\";\nmsg.payload.name = msg.payload.name;\nmsg.payload.iconColor = \"dark\";\nmsg.payload.command = { \"button\": { \"name\":\"My Fancy Button\" } };\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 160,
        "wires": [
            [
                "606c3ea6.48e16",
                "e0c5155f.ab38b8"
            ]
        ]
    },
    {
        "id": "b8dc8e7d.728b3",
        "type": "split",
        "z": "e51008a5.27ff68",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "e9ac04e6.a0a458"
            ]
        ]
    },
    {
        "id": "e2d32b67.643fa8",
        "type": "function",
        "z": "e51008a5.27ff68",
        "name": "SELECT",
        "func": "var newMsg = {\n \"topic\": \"SELECT * FROM Capteurs WHERE description='Pulse senso'\" \n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 160,
        "wires": [
            [
                "6fe57a61.a694a4"
            ]
        ]
    },
    {
        "id": "1a015e81.03abe1",
        "type": "delay",
        "z": "e51008a5.27ff68",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 140,
        "y": 120,
        "wires": [
            [
                "e2d32b67.643fa8"
            ]
        ]
    },
    {
        "id": "28b9dfa1.aef27",
        "type": "comment",
        "z": "e51008a5.27ff68",
        "name": "MAP",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "606c3ea6.48e16",
        "type": "worldmap",
        "z": "e51008a5.27ff68",
        "name": "map",
        "lat": "42.7110",
        "lon": "2.9100",
        "zoom": "17",
        "layer": "OSM",
        "cluster": "0",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "hiderightclick": "false",
        "coords": "deg",
        "path": "worldmap3",
        "x": 510,
        "y": 80,
        "wires": []
    },
    {
        "id": "94222fba.5bb36",
        "type": "worldmap in",
        "z": "e51008a5.27ff68",
        "name": "",
        "path": "/worldmap3",
        "events": "all",
        "x": 740,
        "y": 80,
        "wires": [
            [
                "6e3317aa.777318"
            ]
        ]
    },
    {
        "id": "412a256b.8772bc",
        "type": "ui_text",
        "z": "e51008a5.27ff68",
        "group": "d09125c3.688348",
        "order": 1,
        "width": 8,
        "height": 1,
        "name": "CodeSig",
        "label": "DevEui : ",
        "format": "{{msg.payload[0].deveui}}",
        "layout": "row-center",
        "x": 520,
        "y": 240,
        "wires": []
    },
    {
        "id": "16db9188.9107ee",
        "type": "sqlite",
        "z": "e51008a5.27ff68",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 360,
        "y": 260,
        "wires": [
            [
                "412a256b.8772bc",
                "36ca72b8.698dbe",
                "b038a4cf.c0e188"
            ]
        ]
    },
    {
        "id": "1f661692.0face9",
        "type": "function",
        "z": "e51008a5.27ff68",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"1\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 260,
        "wires": [
            [
                "16db9188.9107ee",
                "bb798bca.8a5eb8"
            ]
        ]
    },
    {
        "id": "5594cab8.fcfe14",
        "type": "ui_chart",
        "z": "e51008a5.27ff68",
        "name": "Chart1",
        "group": "d09125c3.688348",
        "order": 5,
        "width": 10,
        "height": 3,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 690,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "943a71bd.fcd78",
        "type": "sqlite",
        "z": "e51008a5.27ff68",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 360,
        "y": 300,
        "wires": [
            [
                "1220a9a8.0ac3f6"
            ]
        ]
    },
    {
        "id": "1220a9a8.0ac3f6",
        "type": "function",
        "z": "e51008a5.27ff68",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\nvar series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 300,
        "wires": [
            [
                "5594cab8.fcfe14"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "a8e1305e.4e756",
        "type": "function",
        "z": "e51008a5.27ff68",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"1\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 300,
        "wires": [
            [
                "943a71bd.fcd78"
            ]
        ]
    },
    {
        "id": "6e3317aa.777318",
        "type": "link out",
        "z": "e51008a5.27ff68",
        "name": "",
        "links": [
            "3297f8c.f34c908",
            "96cf0fda.69875",
            "d2d986fb.cc5978",
            "66390b1f.44d144",
            "2f1ed59b.674a8a"
        ],
        "x": 855,
        "y": 80,
        "wires": []
    },
    {
        "id": "3297f8c.f34c908",
        "type": "link in",
        "z": "e51008a5.27ff68",
        "name": "",
        "links": [
            "6e3317aa.777318"
        ],
        "x": 75,
        "y": 380,
        "wires": [
            [
                "1f661692.0face9",
                "a8e1305e.4e756",
                "740c3f9d.adc2e",
                "b13927e4.bfffc8",
                "d9f560bf.4ee05",
                "8184ab06.5705d8"
            ]
        ]
    },
    {
        "id": "36ca72b8.698dbe",
        "type": "ui_artlessgauge",
        "z": "e51008a5.27ff68",
        "group": "d09125c3.688348",
        "order": 4,
        "width": 3,
        "height": 3,
        "name": "valeur1",
        "icon": "fa-line-chart",
        "label": "",
        "unit": "",
        "layout": "linear",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#fb2323",
        "colorFromTheme": true,
        "property": "payload[0].valeur",
        "sectors": [
            {
                "val": -10000,
                "col": "#ff0000",
                "t": "min",
                "dot": 0
            },
            {
                "val": 10000,
                "col": "#ff0000",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 800,
        "y": 260,
        "wires": []
    },
    {
        "id": "79cabe98.d987f",
        "type": "ui_template",
        "z": "e51008a5.27ff68",
        "group": "54805cf3.e18314",
        "name": "",
        "order": 1,
        "width": 10,
        "height": 17,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 540,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e0c5155f.ab38b8",
        "type": "template",
        "z": "e51008a5.27ff68",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<iframe src=\"https://pav.dnpm.fr/node-red/demonstrateur/worldmap3/\" \n            frameborder=\"0\" \n            marginheight=\"0\" \n            marginwidth=\"0\" \n            width=\"520px\" \n            height=\"890px\"\n            scrolling=\"auto\">\n</iframe>",
        "x": 530,
        "y": 120,
        "wires": [
            [
                "79cabe98.d987f"
            ]
        ]
    },
    {
        "id": "a8914c63.94c4e",
        "type": "ui_template",
        "z": "e51008a5.27ff68",
        "group": "d09125c3.688348",
        "name": "Dashboard stylesheet",
        "order": 14,
        "width": 16,
        "height": 1,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 780,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "7f110e6f.0bd59",
        "type": "ui_template",
        "z": "e51008a5.27ff68",
        "group": "54805cf3.e18314",
        "name": "Dashboard stylesheet",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 780,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "b038a4cf.c0e188",
        "type": "ui_text",
        "z": "e51008a5.27ff68",
        "group": "d09125c3.688348",
        "order": 2,
        "width": 8,
        "height": 1,
        "name": "name",
        "label": "Nom : ",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-center",
        "x": 650,
        "y": 240,
        "wires": []
    },
    {
        "id": "aa4218c.1134fe8",
        "type": "sqlite",
        "z": "e51008a5.27ff68",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 360,
        "y": 360,
        "wires": [
            [
                "2e961dcd.52f4d2"
            ]
        ]
    },
    {
        "id": "740c3f9d.adc2e",
        "type": "function",
        "z": "e51008a5.27ff68",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"2\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 360,
        "wires": [
            [
                "aa4218c.1134fe8",
                "bb798bca.8a5eb8"
            ]
        ]
    },
    {
        "id": "4e1b7a62.189af4",
        "type": "ui_chart",
        "z": "e51008a5.27ff68",
        "name": "Chart2",
        "group": "d09125c3.688348",
        "order": 9,
        "width": 10,
        "height": 3,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 690,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "366df219.bee7fe",
        "type": "sqlite",
        "z": "e51008a5.27ff68",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 360,
        "y": 400,
        "wires": [
            [
                "756c681a.c04c38"
            ]
        ]
    },
    {
        "id": "756c681a.c04c38",
        "type": "function",
        "z": "e51008a5.27ff68",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\nvar series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "4e1b7a62.189af4"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "b13927e4.bfffc8",
        "type": "function",
        "z": "e51008a5.27ff68",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"2\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 400,
        "wires": [
            [
                "366df219.bee7fe"
            ]
        ]
    },
    {
        "id": "c493fe6e.eb9ae",
        "type": "sqlite",
        "z": "e51008a5.27ff68",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 360,
        "y": 460,
        "wires": [
            [
                "bc794f19.16c45"
            ]
        ]
    },
    {
        "id": "d9f560bf.4ee05",
        "type": "function",
        "z": "e51008a5.27ff68",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"3\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 460,
        "wires": [
            [
                "c493fe6e.eb9ae",
                "bb798bca.8a5eb8"
            ]
        ]
    },
    {
        "id": "7eabd4c8.1bdd4c",
        "type": "ui_chart",
        "z": "e51008a5.27ff68",
        "name": "Chart3",
        "group": "d09125c3.688348",
        "order": 13,
        "width": 10,
        "height": 3,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 690,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "255bc104.e4f1ce",
        "type": "sqlite",
        "z": "e51008a5.27ff68",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "valeurs",
        "x": 360,
        "y": 500,
        "wires": [
            [
                "26332efc.5ffa62"
            ]
        ]
    },
    {
        "id": "26332efc.5ffa62",
        "type": "function",
        "z": "e51008a5.27ff68",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\nvar series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 500,
        "wires": [
            [
                "7eabd4c8.1bdd4c"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "8184ab06.5705d8",
        "type": "function",
        "z": "e51008a5.27ff68",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"3\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 500,
        "wires": [
            [
                "255bc104.e4f1ce"
            ]
        ]
    },
    {
        "id": "385b426d.dbe3ee",
        "type": "ui_text",
        "z": "e51008a5.27ff68",
        "group": "d09125c3.688348",
        "order": 3,
        "width": 3,
        "height": 3,
        "name": "1Comptage impulsionnel entrée",
        "label": "Comptage impulsionnel entrée : ",
        "format": "E1",
        "layout": "row-spread",
        "x": 190,
        "y": 580,
        "wires": []
    },
    {
        "id": "5fb53858.ece008",
        "type": "ui_text",
        "z": "e51008a5.27ff68",
        "group": "d09125c3.688348",
        "order": 7,
        "width": 3,
        "height": 3,
        "name": "2Comptage impulsionnel entrée",
        "label": "Comptage impulsionnel entrée : ",
        "format": "E2",
        "layout": "row-spread",
        "x": 190,
        "y": 620,
        "wires": []
    },
    {
        "id": "131a4250.be91ee",
        "type": "ui_text",
        "z": "e51008a5.27ff68",
        "group": "d09125c3.688348",
        "order": 11,
        "width": 3,
        "height": 3,
        "name": "3Comptage impulsionnel entrée",
        "label": "Comptage impulsionnel entrée : ",
        "format": "E3",
        "layout": "row-spread",
        "x": 190,
        "y": 660,
        "wires": []
    },
    {
        "id": "bb798bca.8a5eb8",
        "type": "debug",
        "z": "e51008a5.27ff68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 530,
        "y": 200,
        "wires": []
    },
    {
        "id": "e37c0ca2.8dd9f",
        "type": "debug",
        "z": "b65661d8.d7be2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 270,
        "y": 40,
        "wires": []
    },
    {
        "id": "2e961dcd.52f4d2",
        "type": "ui_artlessgauge",
        "z": "e51008a5.27ff68",
        "group": "d09125c3.688348",
        "order": 8,
        "width": 3,
        "height": 3,
        "name": "valeur2",
        "icon": "fa-line-chart",
        "label": "",
        "unit": "",
        "layout": "linear",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#fb2323",
        "colorFromTheme": true,
        "property": "payload[0].valeur",
        "sectors": [
            {
                "val": -10000,
                "col": "#ff0000",
                "t": "min",
                "dot": 0
            },
            {
                "val": 10000,
                "col": "#ff0000",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 700,
        "y": 360,
        "wires": []
    },
    {
        "id": "bc794f19.16c45",
        "type": "ui_artlessgauge",
        "z": "e51008a5.27ff68",
        "group": "d09125c3.688348",
        "order": 12,
        "width": 3,
        "height": 3,
        "name": "valeur3",
        "icon": "fa-line-chart",
        "label": "",
        "unit": "",
        "layout": "linear",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#fb2323",
        "colorFromTheme": true,
        "property": "payload[0].valeur",
        "sectors": [
            {
                "val": -10000,
                "col": "#ff0000",
                "t": "min",
                "dot": 0
            },
            {
                "val": 10000,
                "col": "#ff0000",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 700,
        "y": 460,
        "wires": []
    },
    {
        "id": "6cd47c76.750f04",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "refresh",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 140,
        "y": 820,
        "wires": [
            [
                "1b167b7c.4a4a55"
            ]
        ]
    },
    {
        "id": "33ff754f.fa393a",
        "type": "link out",
        "z": "b65661d8.d7be2",
        "name": "for_chart",
        "links": [
            "6a774687.818a28",
            "61ce46d7.beb838",
            "4e05cb75.33e9b4",
            "fa101440.8632a8",
            "a3e743bb.cf67e",
            "2cc622fe.92a9ee"
        ],
        "x": 935,
        "y": 820,
        "wires": []
    },
    {
        "id": "e03a4d7e.429d6",
        "type": "function",
        "z": "b65661d8.d7be2",
        "name": "update table",
        "func": "var numberOfRows = msg.payload.length;\n\n//flow.set(\"lastId\",numberOfRows);\n\nvar newMsg = { payload: msg.payload };\nmsg.payload=[];\n\nfor (let i=0; i<numberOfRows; i++) {\n    var d = new Date(newMsg.payload[i].time*1000);\n    var strdate =  (\"00\" + d.getDate()).slice(-2) + \"/\" + \n        (\"00\" + (d.getMonth() + 1)).slice(-2) + \"/\" + \n        (d.getFullYear()) + \" \" + \n        (\"00\" + d.getHours()).slice(-2) + \":\" + \n        (\"00\" + d.getMinutes()).slice(-2) + \":\" + \n        (\"00\" + d.getSeconds()).slice(-2);\n    \n    msg.payload.push({\n            \"time\":strdate,\n            \"deveui\":newMsg.payload[i].deveui,\n            \"name\":newMsg.payload[i].name,\n            \"capteur\":newMsg.payload[i].capteur\n            })\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 820,
        "wires": [
            [
                "469ed52b.706aac"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "469ed52b.706aac",
        "type": "change",
        "z": "b65661d8.d7be2",
        "name": "ui_control",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{\"tabulator\":{\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.field});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"groupHeader\":\"function (value, count, data, group) {return value + \\\"<span style='color:#d00; margin-left:10px;'>(\\\" + count + \\\" Termostat\\\"+((count>1) ? \\\"e\\\" : \\\"\\\") + \\\")</span>\\\";}\",\"layout\":\"fitColumns\",\"columns\":[{\"title\":\"Map\",\"field\":\"Map\",\"formatter\":\"function(cell, formatterParams, onRendered){ return \\\"<i class='fa fa-map'></i>\\\";}\",\"width\":10,\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"time\",\"field\":\"time\",\"frozen\":false,\"sorter\":\"date\",\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"deveui\",\"field\":\"deveui\",\"headerFilter\":\"input\",\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"name\",\"field\":\"name\",\"headerFilter\":\"input\",\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"capteur\",\"field\":\"capteur\",\"headerFilter\":\"input\",\"align\":\"center\"}],\"movableColumns\":true},\"customHeight\":36}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 820,
        "wires": [
            [
                "abd8ff1d.7d9b6"
            ]
        ]
    },
    {
        "id": "1b167b7c.4a4a55",
        "type": "function",
        "z": "b65661d8.d7be2",
        "name": "Query",
        "func": "var newMsg = {\n \"topic\": \n \"SELECT tt.* FROM Valeurs tt INNER JOIN   (SELECT name, MAX(Time) AS MaxDateTime FROM Valeurs GROUP BY name) groupedtt  ON tt.name = groupedtt.name AND tt.time = groupedtt.MaxDateTime\"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 820,
        "wires": [
            [
                "9ff55f85.5bc8c"
            ]
        ]
    },
    {
        "id": "9ff55f85.5bc8c",
        "type": "sqlite",
        "z": "b65661d8.d7be2",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Valeurs",
        "x": 420,
        "y": 820,
        "wires": [
            [
                "e03a4d7e.429d6"
            ]
        ]
    },
    {
        "id": "abd8ff1d.7d9b6",
        "type": "ui_table",
        "z": "b65661d8.d7be2",
        "group": "1605543a.aa9f8c",
        "name": "Table",
        "order": 1,
        "width": 19,
        "height": "20",
        "columns": [],
        "outputs": 1,
        "cts": true,
        "x": 850,
        "y": 820,
        "wires": [
            [
                "33ff754f.fa393a",
                "64f499b8.c64868"
            ]
        ]
    },
    {
        "id": "b22b5e47.5ed99",
        "type": "ui_template",
        "z": "b65661d8.d7be2",
        "group": "1605543a.aa9f8c",
        "name": "Dashboard stylesheet",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 160,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "64f499b8.c64868",
        "type": "function",
        "z": "b65661d8.d7be2",
        "name": "",
        "func": "if(msg.topic == \"Map\" && msg.payload.capteur== \"nke-thr\") {\n    msg.data = msg.payload;\n    msg.payload = 2;\n    return msg;\n}\nelse if(msg.topic == \"Map\" && msg.payload.capteur== \"nke-tic\") {\n    msg.data = msg.payload;\n    msg.payload = 1;\n    return msg;\n}\nelse if(msg.topic == \"Map\" && msg.payload.capteur== \"nke-senso\") {\n    msg.data = msg.payload;\n    msg.payload = 4;\n    return msg;\n}\nelse if(msg.topic == \"Map\" && msg.payload.capteur== \"bosh\") {\n    msg.data = msg.payload;\n    msg.payload = 5;\n    return msg;\n}\nelse if(msg.topic == \"Map\" && msg.payload.capteur== \"atim-thaq\") {\n    msg.data = msg.payload;\n    msg.payload = 3;\n    return msg;\n}\nelse{\n    return;\n}\n    \n    ",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 860,
        "wires": [
            [
                "22e386b6.e4e26a"
            ]
        ]
    },
    {
        "id": "22e386b6.e4e26a",
        "type": "ui_ui_control",
        "z": "b65661d8.d7be2",
        "name": "",
        "events": "all",
        "x": 900,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "14ef43ab.44fe5c",
        "type": "catch",
        "z": "b65661d8.d7be2",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 120,
        "y": 1040,
        "wires": [
            [
                "5aec5d0e.a13474"
            ]
        ]
    },
    {
        "id": "5aec5d0e.a13474",
        "type": "debug",
        "z": "b65661d8.d7be2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 270,
        "y": 1040,
        "wires": []
    },
    {
        "id": "adbae2fa.53cc7",
        "type": "link in",
        "z": "b65661d8.d7be2",
        "name": "",
        "links": [
            "1d132d63.88c0a3",
            "88fac5b8.5d2a08"
        ],
        "x": 175,
        "y": 760,
        "wires": [
            [
                "1b167b7c.4a4a55"
            ]
        ]
    },
    {
        "id": "b9b17190.cf8fd",
        "type": "ui_ui_control",
        "z": "876e2113.a1b7f",
        "name": "return map",
        "events": "change",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "f46799dd.42b9e8"
            ]
        ]
    },
    {
        "id": "b5d1be28.12393",
        "type": "sqlite",
        "z": "876e2113.a1b7f",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "test/Level",
        "x": 300,
        "y": 40,
        "wires": [
            [
                "8dc63748.eb92e8"
            ]
        ]
    },
    {
        "id": "9c2b3120.fbc5e",
        "type": "function",
        "z": "876e2113.a1b7f",
        "name": "temp",
        "func": "msg.payload.layer = \"temp\";\nmsg.payload.draggable = true;\nmsg.payload.icon = \"thermometer\";\nmsg.payload.name = msg.payload.name;\nmsg.payload.iconColor = \"gray\";\nmsg.payload.command = { \"button\": { \"name\":\"My Fancy Button\" } };\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 120,
        "wires": [
            [
                "8f45d5d8.a15758",
                "f8df28c0.8bc428"
            ]
        ]
    },
    {
        "id": "8dc63748.eb92e8",
        "type": "split",
        "z": "876e2113.a1b7f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 310,
        "y": 80,
        "wires": [
            [
                "9c2b3120.fbc5e"
            ]
        ]
    },
    {
        "id": "973a330e.17413",
        "type": "function",
        "z": "876e2113.a1b7f",
        "name": "SELECT",
        "func": "var newMsg = {\n \"topic\": \"SELECT * FROM Capteurs WHERE description='qualite-air'\" \n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 120,
        "y": 120,
        "wires": [
            [
                "b5d1be28.12393"
            ]
        ]
    },
    {
        "id": "f46799dd.42b9e8",
        "type": "delay",
        "z": "876e2113.a1b7f",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 120,
        "y": 80,
        "wires": [
            [
                "973a330e.17413"
            ]
        ]
    },
    {
        "id": "8f45d5d8.a15758",
        "type": "worldmap",
        "z": "876e2113.a1b7f",
        "name": "map",
        "lat": "42.7110",
        "lon": "2.9100",
        "zoom": "18",
        "layer": "OSM",
        "cluster": "0",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "hiderightclick": "false",
        "coords": "deg",
        "path": "worldmap4",
        "x": 490,
        "y": 40,
        "wires": []
    },
    {
        "id": "2cbff8b0.0e5238",
        "type": "worldmap in",
        "z": "876e2113.a1b7f",
        "name": "",
        "path": "/worldmap4",
        "events": "all",
        "x": 720,
        "y": 40,
        "wires": [
            [
                "ab3329fb.fed038"
            ]
        ]
    },
    {
        "id": "8b16a452.4e9af8",
        "type": "ui_text",
        "z": "876e2113.a1b7f",
        "group": "f2ee891a.5bb3e8",
        "order": 1,
        "width": 12,
        "height": 1,
        "name": "CodeSig",
        "label": "DevEui : ",
        "format": "{{msg.payload[0].deveui}}",
        "layout": "row-center",
        "x": 540,
        "y": 240,
        "wires": []
    },
    {
        "id": "96fe4863.179088",
        "type": "sqlite",
        "z": "876e2113.a1b7f",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Humidity",
        "x": 360,
        "y": 260,
        "wires": [
            [
                "8b16a452.4e9af8",
                "9a2987a3.991858",
                "c118d448.89d218"
            ]
        ]
    },
    {
        "id": "60c38cfa.f618a4",
        "type": "function",
        "z": "876e2113.a1b7f",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"p_humidity_0\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 260,
        "wires": [
            [
                "96fe4863.179088"
            ]
        ]
    },
    {
        "id": "8d0c00f6.d672d",
        "type": "ui_chart",
        "z": "876e2113.a1b7f",
        "name": "Chart",
        "group": "9fab53c7.d31e8",
        "order": 1,
        "width": 10,
        "height": 5,
        "label": "Humidite : %",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 670,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "2fd95984.fd6d36",
        "type": "sqlite",
        "z": "876e2113.a1b7f",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Humidity",
        "x": 320,
        "y": 500,
        "wires": [
            [
                "46ec7bc9.2bfb34"
            ]
        ]
    },
    {
        "id": "46ec7bc9.2bfb34",
        "type": "function",
        "z": "876e2113.a1b7f",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\n//var series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[1],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 500,
        "wires": [
            [
                "8d0c00f6.d672d"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "100a78f3.6ed1e7",
        "type": "function",
        "z": "876e2113.a1b7f",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"p_humidity_0\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 500,
        "wires": [
            [
                "2fd95984.fd6d36"
            ]
        ]
    },
    {
        "id": "ab3329fb.fed038",
        "type": "link out",
        "z": "876e2113.a1b7f",
        "name": "",
        "links": [
            "495529e5.8ef588",
            "562cff69.3eefa",
            "dcb902a0.43a09",
            "add00942.7b1ca8",
            "d1f80c02.5c941",
            "8000fa74.898628"
        ],
        "x": 835,
        "y": 40,
        "wires": []
    },
    {
        "id": "495529e5.8ef588",
        "type": "link in",
        "z": "876e2113.a1b7f",
        "name": "",
        "links": [
            "ab3329fb.fed038"
        ],
        "x": 95,
        "y": 320,
        "wires": [
            [
                "60c38cfa.f618a4",
                "eac917a4.c51bf8",
                "1bb83a82.910845",
                "9a7b98bc.ce62c8"
            ]
        ]
    },
    {
        "id": "562cff69.3eefa",
        "type": "link in",
        "z": "876e2113.a1b7f",
        "name": "",
        "links": [
            "ab3329fb.fed038"
        ],
        "x": 80,
        "y": 500,
        "wires": [
            [
                "100a78f3.6ed1e7"
            ]
        ]
    },
    {
        "id": "c041d19d.a3585",
        "type": "ui_template",
        "z": "876e2113.a1b7f",
        "group": "8c5eef58.57af5",
        "name": "",
        "order": 1,
        "width": 15,
        "height": 15,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 520,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "f8df28c0.8bc428",
        "type": "template",
        "z": "876e2113.a1b7f",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<iframe src=\"https://pav.dnpm.fr/node-red/demonstrateur/worldmap4/\" \n            frameborder=\"0\" \n            marginheight=\"0\" \n            marginwidth=\"0\" \n            width=\"790px\" \n            height=\"790px\"\n            scrolling=\"auto\">\n</iframe>",
        "x": 510,
        "y": 80,
        "wires": [
            [
                "c041d19d.a3585"
            ]
        ]
    },
    {
        "id": "eac917a4.c51bf8",
        "type": "function",
        "z": "876e2113.a1b7f",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui, valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"p_temperature_0\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 300,
        "wires": [
            [
                "60dee2e6.30ca7c"
            ]
        ]
    },
    {
        "id": "60dee2e6.30ca7c",
        "type": "sqlite",
        "z": "876e2113.a1b7f",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Temperature",
        "x": 370,
        "y": 300,
        "wires": [
            [
                "7784ba97.b7e8c4"
            ]
        ]
    },
    {
        "id": "e3716214.2af31",
        "type": "ui_template",
        "z": "876e2113.a1b7f",
        "group": "8c5eef58.57af5",
        "name": "Dashboard stylesheet",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 760,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "1e6179a.7cc0986",
        "type": "ui_template",
        "z": "876e2113.a1b7f",
        "group": "f2ee891a.5bb3e8",
        "name": "Dashboard stylesheet",
        "order": 7,
        "width": 12,
        "height": 1,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 760,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "9b6296f4.4fc1c8",
        "type": "ui_chart",
        "z": "876e2113.a1b7f",
        "name": "Chart",
        "group": "9fab53c7.d31e8",
        "order": 2,
        "width": 10,
        "height": 5,
        "label": "Temperature : °C",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "-20",
        "ymax": "80",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 670,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "83985c32.b5881",
        "type": "sqlite",
        "z": "876e2113.a1b7f",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Temperature",
        "x": 330,
        "y": 540,
        "wires": [
            [
                "1ba06807.99bcc8"
            ]
        ]
    },
    {
        "id": "1ba06807.99bcc8",
        "type": "function",
        "z": "876e2113.a1b7f",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\n//var series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[2],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 540,
        "wires": [
            [
                "9b6296f4.4fc1c8"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "9709001e.cbe76",
        "type": "function",
        "z": "876e2113.a1b7f",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"p_temperature_0\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 540,
        "wires": [
            [
                "83985c32.b5881"
            ]
        ]
    },
    {
        "id": "dcb902a0.43a09",
        "type": "link in",
        "z": "876e2113.a1b7f",
        "name": "",
        "links": [
            "ab3329fb.fed038"
        ],
        "x": 80,
        "y": 540,
        "wires": [
            [
                "9709001e.cbe76"
            ]
        ]
    },
    {
        "id": "9a2987a3.991858",
        "type": "ui_text",
        "z": "876e2113.a1b7f",
        "group": "f2ee891a.5bb3e8",
        "order": 2,
        "width": 12,
        "height": 1,
        "name": "name",
        "label": "Nom : ",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-center",
        "x": 530,
        "y": 200,
        "wires": []
    },
    {
        "id": "7784ba97.b7e8c4",
        "type": "ui_gauge",
        "z": "876e2113.a1b7f",
        "name": "",
        "group": "f2ee891a.5bb3e8",
        "order": 3,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "temperature",
        "label": "°C",
        "format": "{{msg.payload[0].valeur}}",
        "min": "-20",
        "max": "80",
        "colors": [
            "#028af2",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "18",
        "seg2": "25",
        "x": 550,
        "y": 300,
        "wires": []
    },
    {
        "id": "c118d448.89d218",
        "type": "ui_gauge",
        "z": "876e2113.a1b7f",
        "name": "",
        "group": "f2ee891a.5bb3e8",
        "order": 4,
        "width": 6,
        "height": 4,
        "gtype": "donut",
        "title": "humidité",
        "label": "% humidité",
        "format": "{{msg.payload[0].valeur}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#0091ff",
            "#0091ff",
            "#0091ff"
        ],
        "seg1": "18",
        "seg2": "25",
        "x": 540,
        "y": 260,
        "wires": []
    },
    {
        "id": "3c850ac.7de18f6",
        "type": "ui_gauge",
        "z": "876e2113.a1b7f",
        "name": "",
        "group": "f2ee891a.5bb3e8",
        "order": 5,
        "width": 6,
        "height": 4,
        "gtype": "donut",
        "title": "C02",
        "label": "ppm",
        "format": "{{msg.payload[0].valeur}}",
        "min": 0,
        "max": "2000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "310",
        "seg2": "800",
        "x": 530,
        "y": 340,
        "wires": []
    },
    {
        "id": "c402b849.f76198",
        "type": "ui_gauge",
        "z": "876e2113.a1b7f",
        "name": "",
        "group": "f2ee891a.5bb3e8",
        "order": 6,
        "width": 6,
        "height": 4,
        "gtype": "donut",
        "title": "VOC",
        "label": "",
        "format": "{{msg.payload[0].valeur}}",
        "min": 0,
        "max": "500",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "125",
        "seg2": "250",
        "x": 530,
        "y": 380,
        "wires": []
    },
    {
        "id": "c4e03eae.ad59f",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "N_6A2E_PMM_4",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"A_AA5E_PMM_2\",\"devEUI\":\"70b3d59ba000aa5e\",\"rxInfo\":[{\"gatewayID\":\"70B3D59BA000AA5E\",\"uplinkID\":\"b463ade6-a298-4116-8c70-faeba39d74fe\",\"name\":\"Gateway_P09_Test_Mios\",\"rssi\":-37,\"loRaSNR\":10,\"location\":{\"latitude\":42.82911,\"longitude\":2.7672,\"altitude\":508}}],\"txInfo\":{\"frequency\":867100000,\"dr\":5},\"adr\":true,\"fCnt\":15,\"fPort\":125,\"tags\":{\"capteur\":\"atim-thaq\"},\"data\":\"hQgJlAkHagwAwg0DeQ==\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 640,
        "wires": [
            [
                "2714c1d4.7e611e"
            ]
        ]
    },
    {
        "id": "2714c1d4.7e611e",
        "type": "link out",
        "z": "b65661d8.d7be2",
        "name": "",
        "links": [
            "bbff794d.6f0b78"
        ],
        "x": 295,
        "y": 660,
        "wires": []
    },
    {
        "id": "860e52cc.6faa3",
        "type": "comment",
        "z": "b65661d8.d7be2",
        "name": "atim qualité air",
        "info": "nke senso",
        "x": 120,
        "y": 600,
        "wires": []
    },
    {
        "id": "76f7000a.808f5",
        "type": "function",
        "z": "b65661d8.d7be2",
        "name": "decodage atim",
        "func": "/* *************************************** */\n/*              FRAME HEADER               */\n/* *************************************** */\nconst ACW_FRAME_HEADER_MEAS_MASK = 0x20;\nconst ACW_FRAME_HEADER_TYPE_MASK = 0x0F;\nconst ACW_FRAME_HEADER_TIMESTAMP_MASK  = 0x40;\n\n/****           Frame type              ****/\nconst ACW_FRAME_HEADER_TYPE_KEEP_ALIVE   = 0x01;\nconst ACW_FRAME_HEADER_TYPE_NETWORK_TEST = 0x02;\nconst ACW_FRAME_HEADER_TYPE_TEST_FRAME   = 0x05;\nconst ACW_FRAME_HEADER_TYPE_THOLD_ALERT  = 0x0D;\nconst ACW_FRAME_HEADER_TYPE_ERROR        = 0x0E;\nconst ACW_FRAME_HEADER_TYPE_SPECIFIC     = 0x0F;\n\n\n/* *************************************** */\n/*              MEASURE FRAME              */\n/* *************************************** */\nconst ACW_FRAME_HEADER_MEAS_HISTORIC_POS = 3;\nconst ACW_FRAME_HEADER_MEAS_HISTORIC_MASK = 0x18;\nconst ACW_FRAME_HEADER_MEAS_SAMPLES_MASK = 0x07;\n\nconst ACW_FRAME_MEAS_MEAS_TYPE_MASK = 0x0F;\nconst ACW_FRAME_MEAS_CHANNEL_NUM_POS = 4;\nconst ACW_FRAME_MEAS_CHANNEL_NUM_MASK = 0x30;\n\n\n/* *************************************** */\n/*              ALERT HEADER               */\n/* *************************************** */\nconst ACW_FRAME_ALERT_MEAS_TYPE_POS   = 0;\nconst ACW_FRAME_ALERT_MEAS_TYPE_MASK  = 0x0F;\nconst ACW_FRAME_ALERT_CHANNEL_NUM_POS = 4;\nconst ACW_FRAME_ALERT_ALERT_TYPE_POS  = 6;\n\n\n/* *************************************** */\n/*              ERROR HEADER               */\n/* *************************************** */\nconst ACW_FRAME_ERR_ID_MSG_POS      = 4;\nconst ACW_FRAME_ERR_MSG_LENGTH_MASK = 0x0F;\n\n\n/* *************************************** */\n/*              Measure Type               */\n/* *************************************** */\nconst UP_FRAME_WAY_TYPE_UINT8_INPUT       = 0x01;\nconst UP_FRAME_WAY_TYPE_UINT16_INPUT      = 0x02;\nconst UP_FRAME_WAY_TYPE_UINT16_COUNTER    = 0x03;\nconst UP_FRAME_WAY_TYPE_UINT32_COUNTER    = 0x04;\nconst UP_FRAME_WAY_TYPE_UINTx_BRIGHTNESS  = 0x05;\nconst UP_FRAME_WAY_TYPE_INTx_PRESSURE     = 0x06;\nconst UP_FRAME_WAY_TYPE_INT16_DISTANCE    = 0x07;\nconst UP_FRAME_WAY_TYPE_INT16_TEMPERATURE = 0x08;\nconst UP_FRAME_WAY_TYPE_UINT16_HUMIDITY   = 0x09;\nconst UP_FRAME_WAY_TYPE_INT16_VOLTAGE     = 0x0a;\nconst UP_FRAME_WAY_TYPE_INT16_CURRENT     = 0x0b;\nconst UP_FRAME_WAY_TYPE_UINT16_VOC_INDEX  = 0x0c;\nconst UP_FRAME_WAY_TYPE_UINT16_CO2        = 0x0d;\n\n\nconst ACW_FRAME_HEADER_SIZE_ASCII    = 2; /* size of the header in ASCII character */\nconst ACW_FRAME_TIMESTAMP_SIZE_ASCII = 8; /* size of the timestamp in ASCII character */\nconst ACW_FRAME_TX_PERIOD_SIZE_ASCII = 4; /* size of the tx period of periodic frame (when historic or nb samples > 1) in ASCII character */\n\n\n/* *************************************** */\n/*               Error code                */\n/* *************************************** */\n\n/* real error codes which cause the product to enter fault mode */\nconst ACW_ERR_UNKNOWN                       = 0x81;\nconst ACW_ERR_BUF_SMALLER                   = 0x82;\nconst ACW_ERR_DEPTH_HISTORIC_OUT_OF_RANGE   = 0x83;\nconst ACW_ERR_NB_SAMPLE_OUT_OF_RANGE        = 0x84;\nconst ACW_ERR_NWAY_OUT_OF_RANGE             = 0x85;\nconst ACW_ERR_TYPEWAY_OUT_OF_RANGE          = 0x86;\nconst ACW_ERR_SAMPLING_PERIOD               = 0x87;\nconst ACW_ERR_SUBTASK_END                   = 0x88;\nconst ACW_ERR_NULL_POINTER                  = 0x89;\nconst ACW_ERR_BATTERY_LEVEL_DEAD            = 0x8A;\nconst ACW_ERR_EEPROM                        = 0x8B;\nconst ACW_ERR_ROM                           = 0x8C;\nconst ACW_ERR_RAM                           = 0x8D;\nconst ACW_ERR_ARM_INIT_FAIL                 = 0x8E;\nconst ACW_ERR_ARM_BUSY                      = 0x8F;\nconst ACW_ERR_ARM_BRIDGE_ENABLE             = 0x90;\nconst ACW_ERR_ARM_RADIO_QUEUE_FULL          = 0x91;\nconst ACW_ERR_CFG_BOX_INIT_FAIL             = 0x92;\n\n/*\n * From here error code are considered as alert\n * the product do not enter fault mode\n * if one of the following code occurs\n */\nconst ACW_ERR_KEEP_ALIVE_PERIOD             = 0x93;\nconst ACW_ERR_ENTER_DEEP_SLEEP              = 0x94;\nconst ACW_ERR_BATTERY_LEVEL_LOW             = 0x95;\nconst ACW_ERR_ARM_TRANSMISSION              = 0x96;\nconst ACW_ERR_ARM_PAYLOAD_BIGGER            = 0x97;\nconst ACW_ERR_RADIO_PAIRING_TIMEOUT         = 0x98;\nconst ACW_ERR_SENSORS_TIMEOUT               = 0x99;\nconst ACW_ERR_SENSORS_STOP                  = 0x9A;\nconst ACW_ERR_SENSORS_FAIL                  = 0x9B;\nconst ACW_ERR_BOX_OPENED                    = 0x9C;\nconst ACW_ERR_BOX_CLOSED                    = 0x9D;\n\n/* *************************************** */\n/*           MR4 specific code             */\n/* *************************************** */\nconst ACW_MR4_WIRECUT                       = 0x1C;\n\n/* *************************************** */\n\n\nfunction decodeStream (payload_data){\n\n\t// Init result\n    let result = {historics: [],events: [],realTimes: []};\n\n    // Parse stream\n    //let jsonStream = JSON.parse(stream);\n\n    /*** TO IMPLEMENT ***/\n    // Get timestamp from stream JSON\n    var time = new Date() / 1000 ; // To fill according to the json returned by your gateway\n    // Get clear device paylaod from stream JSON\n    var payload = payload_data; // To fill according to the json returned by your gateway\n    /********************/\n\n    // Get message ID\n    var header = parseInt(payload.substring(0, 2),16);\n\n    /* is it a measurement or generic frame ? */\n    if((header & ACW_FRAME_HEADER_MEAS_MASK) == ACW_FRAME_HEADER_MEAS_MASK){\n        /** In case of measurement frame **/\n        result.realTimes = result.realTimes.concat(DecodeMesureFrame(payload, time).realTimes);\n        result.historics = result.historics.concat(DecodeMesureFrame(payload, time).historics);\n        result.events = result.events.concat(DecodeMesureFrame(payload, time).events);\n    }else{\n        /** In case of generic frame **/\n        result.realTimes = result.realTimes.concat(DecodeCommonFrame(payload, time).realTimes);\n        result.historics = result.historics.concat(DecodeCommonFrame(payload, time).historics);\n        result.events = result.events.concat(DecodeCommonFrame(payload, time).events);\n    }\n\n    if (((header & ACW_FRAME_HEADER_TYPE_MASK) == ACW_FRAME_HEADER_TYPE_KEEP_ALIVE) &&\n        ((header & ACW_FRAME_HEADER_MEAS_MASK) != ACW_FRAME_HEADER_MEAS_MASK))\n    {\n        var data_offset = ACW_FRAME_HEADER_SIZE_ASCII;\n        if((header & ACW_FRAME_HEADER_TIMESTAMP_MASK) == ACW_FRAME_HEADER_TIMESTAMP_MASK)\n        {\n            data_offset += ACW_FRAME_TIMESTAMP_SIZE_ASCII;\n        }\n        result.realTimes.push({tagRef: \"p_batteryVoltage_empty\",timestamp: time,tagValue: String(parseInt(payload.substr(data_offset,4),16)/1000)});\n        result.realTimes.push({tagRef: \"p_batteryVoltage_inCharge\",timestamp: time,tagValue: String(parseInt(payload.substr(data_offset+4,4),16)/1000)});\n    }\n\n\t// return result\n\treturn result;\n}\n\nfunction DecodeCommonFrame(payload, time)\n{\n\t// Init result\n\tlet result = {\n\t\thistorics: [],\n\t\tevents: [],\n\t\trealTimes: []\n\t};\n\n\t// get timestamp bit value\n\tlet timestamp = parseInt(payload.substring(0, 2),16);\n\ttimestamp &= ACW_FRAME_HEADER_TIMESTAMP_MASK;\n\n\t/* By default, data starts after header */\n\tlet startingIndex = ACW_FRAME_HEADER_SIZE_ASCII;\n\n\tif(timestamp)\n\t    /* if timestamp included, data starts after header + timstamp */\n\t    startingIndex += ACW_FRAME_TIMESTAMP_SIZE_ASCII;\n\n\t// get frame type\n\tlet frameType = parseInt(payload.substring(0, 2),16);\n\tframeType &= ACW_FRAME_HEADER_TYPE_MASK;\n\n\t// keep alive frame\n\tif(frameType == ACW_FRAME_HEADER_TYPE_KEEP_ALIVE)\n\t{\n\t\tresult.realTimes.push({\n\t\t\ttagRef: \"p_keepAlive\",\n\t\t\ttimestamp: time,\n\t\t\ttagValue: String(1)\n\t\t});\n\t}\n\n    // test frame\n\tif (frameType == ACW_FRAME_HEADER_TYPE_TEST_FRAME)\n\t{\n\t\twhile(startingIndex<payload.length)\n\t\t{\n\t\t\t// get header informations of each voie\n\t\t\tlet header_voie = parseInt(payload.substring(startingIndex, startingIndex+2),16);\n\n\t\t\t/* get channel number */\n\t\t\tlet number_voie = header_voie >> ACW_FRAME_MEAS_CHANNEL_NUM_POS;\n\n            /* get measure type */\n\t\t\tlet mesureType_voie = header_voie & ACW_FRAME_MEAS_MEAS_TYPE_MASK;\n\n            /* get measure size */\n\t\t\tlet mesureSize_voie = getMesureSize(mesureType_voie);\n\n\t\t\t// increase starting index\n\t\t\tstartingIndex += 2;\n\n\t\t\t// check if the size is different than 0\n\t\t\tif(mesureSize_voie != 0)\n\t\t\t{\n\t\t\t\t// get mesure\n\t\t\t\tlet mesure = parseInt(payload.substring(startingIndex, startingIndex+mesureSize_voie),16);\n\n\t\t\t\t// get calculated table of log\n\t\t\t\tlet calculatedMesureTab = getCalculatedMesure(mesure, mesureType_voie, number_voie, timestamp ? new Date(parseInt(payload.substring(2, 10),16)*1000) : time);\n\n\t\t\t\t// add table log into realtimes\n\t\t\t\tresult.realTimes = result.realTimes.concat(calculatedMesureTab);\n\n\t\t\t\t// increase index\n\t\t\t\tstartingIndex += mesureSize_voie;\n\n\t\t\t}else{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t}\n\n\t// threshold alarm\n\tif (frameType == ACW_FRAME_HEADER_TYPE_THOLD_ALERT)\n\t{\n\t\twhile(startingIndex<payload.length)\n\t\t{\n\t\t\t// get header informations of each voie\n\t\t\tlet header_voie = parseInt(payload.substring(startingIndex, startingIndex+2),16);\n\t\t\t/* get alert type */\n\t\t\tlet alertType_voie = header_voie >> ACW_FRAME_ALERT_ALERT_TYPE_POS;\n\t\t\t/* get channel number */\n\t\t\tlet number_voie = header_voie >> ACW_FRAME_ALERT_CHANNEL_NUM_POS;\n\t\t\t/* get measure type */\n\t\t\tlet mesureType_voie = header_voie & ACW_FRAME_ALERT_MEAS_TYPE_MASK;\n\t\t\t/* get measure size */\n\t\t\tlet mesureSize_voie = getMesureSize(mesureType_voie);\n\n\t\t\t// increase starting index\n\t\t\tstartingIndex += 2;\n\n\t\t\t// check if the size is different than 0\n\t\t\tif(mesureSize_voie != 0)\n\t\t\t{\n\t\t\t\t// get mesure\n\t\t\t\tlet mesure = parseInt(payload.substring(startingIndex, startingIndex+mesureSize_voie),16);\n\n\t\t\t\t// get calculated table of log\n\t\t\t\tlet calculatedMesureTab = getCalculatedMesure(mesure, mesureType_voie, number_voie, timestamp ? new Date(parseInt(payload.substring(2, 10),16)*1000) : time);\n\n\t\t\t\t// add table log into realtimes\n\t\t\t\tresult.realTimes = result.realTimes.concat(calculatedMesureTab);\n\n\t\t\t\t// get calculated table of events\n\t\t\t\tlet eventTab = getThresholdEvents(mesureType_voie, alertType_voie, number_voie, timestamp ? new Date(parseInt(payload.substring(2, 10),16)*1000) : time);\n\n\t\t\t\t// add table event into events\n\t\t\t\tresult.events = result.events.concat(eventTab);\n\n\t\t\t\t// increase index\n\t\t\t\tstartingIndex += mesureSize_voie;\n\n\t\t\t}else{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t}\n\n\t// general alarm\n\tif(frameType == ACW_FRAME_HEADER_TYPE_ERROR)\n\t{\n\t\t// get header informations of each voie\n\t\tlet header_error = parseInt(payload.substring(startingIndex, startingIndex+2),16);\n\t\tlet length_error = header_error & ACW_FRAME_ERR_MSG_LENGTH_MASK;\n\n\t\t// increase starting index\n\t\tstartingIndex += 2;\n\n\t\tfor (let e=0; e<length_error; e++)\n\t\t{\n\t\t\t// get error and add log into realtimes table\n\t\t\tresult.realTimes.push(getError(parseInt(payload.substring(startingIndex, startingIndex+2),16)));\n\n\t\t\t// increase starting index\n\t\t\tstartingIndex += 2;\n\t\t}\n\t}\n\n\tif(frameType == ACW_FRAME_HEADER_TYPE_SPECIFIC)\n\t{\n\t    /* Specific to the MR4 */\n\t\tif(parseInt(payload.substring(startingIndex, startingIndex+2),16)==28)\n        {\n            // add wirecut into realtimes table\n            result.realTimes.push({tagRef: \"p_wirecut\",timestamp: time,tagValue: String(parseInt(payload.substring(startingIndex+2, startingIndex+4),16)==1 ? 0 : 1)});\n        }\n\n\t}\n\treturn result;\n}\n\nfunction DecodeMesureFrame(payload, time)\n{\n\t// Init result\n\tlet result = {\n\t\thistorics: [],\n\t\tevents: [],\n\t\trealTimes: []\n\t};\n\n\t// get timestamp bit value\n\tlet timestamp = parseInt(payload.substring(0, 2),16);\n\ttimestamp &= ACW_FRAME_HEADER_TIMESTAMP_MASK;\n\n\tlet historic = parseInt(payload.substring(0, 2),16);\n\thistoric = (historic & ACW_FRAME_HEADER_MEAS_HISTORIC_MASK) >> ACW_FRAME_HEADER_MEAS_HISTORIC_POS;\n\thistoric++;\n\n\tlet nb_samples = parseInt(payload.substring(0, 2),16);\n\tnb_samples &= ACW_FRAME_HEADER_MEAS_SAMPLES_MASK;\n\tnb_samples++;\n\n\t/* By default, data starts after header */\n\tlet startingIndex = ACW_FRAME_HEADER_SIZE_ASCII;\n\n\tif(timestamp)\n\t    /* if timestamp included, data starts after header + timstamp */\n\t    startingIndex += ACW_FRAME_TIMESTAMP_SIZE_ASCII;\n\n\tlet period = 0;\n\n\tif(historic > 1 || nb_samples > 1)\n\t{\n\t    period = parseInt(payload.substring(startingIndex, startingIndex + ACW_FRAME_TX_PERIOD_SIZE_ASCII),16);\n\n\t    startingIndex += ACW_FRAME_TX_PERIOD_SIZE_ASCII;\n\t}\n\n\twhile(startingIndex<payload.length)\n\t{\n\t\t// get header informations of each voie\n\t\tlet header_voie = parseInt(payload.substring(startingIndex, startingIndex+2),16);\n\t\t/* get channel number */\n\t\tlet number_voie = (header_voie & ACW_FRAME_MEAS_CHANNEL_NUM_MASK) >> ACW_FRAME_ALERT_CHANNEL_NUM_POS;\n\t\t/* get measure type */\n\t\tlet mesureType_voie = header_voie & ACW_FRAME_MEAS_MEAS_TYPE_MASK;\n\t\t/* get measure size */\n\t\tlet mesureSize_voie = getMesureSize(mesureType_voie);\n\n\t\t// increase starting index\n\t\tstartingIndex += 2;\n\n\t\t// check if the size is different than 0\n\t\tif(mesureSize_voie != 0)\n\t\t{\n\t\t\t// iterate on each mesure\n\t\t\tfor(let i=0; i<historic*nb_samples;i++)\n\t\t\t{\n\t\t\t\t// get mesure\n\t\t\t\tlet mesure = parseInt(payload.substring(startingIndex, startingIndex+mesureSize_voie),16);\n\n\t\t\t\tif(i==0){\n\t\t\t\t\t// get calculated table of log\n\t\t\t\t\tlet calculatedMesureTab = getCalculatedMesure(mesure,mesureType_voie,number_voie,timestamp ? new Date(parseInt(payload.substring(2, 10),16)*1000) : time);\n\n\t\t\t\t\t// add table log into realtimes\n\t\t\t\t\tresult.realTimes = result.realTimes.concat(calculatedMesureTab);\n\t\t\t\t}else{\n\t\t\t\t\t// get calculated table of log\n\t\t\t\t\tlet calculatedMesureTab = getCalculatedMesure(mesure,mesureType_voie,number_voie,timestamp ? new Date((parseInt(payload.substring(2, 10),16)-(period/nb_samples*60*i))*1000) : new Date((time-(period/nb_samples*60*i))*1000));\n\n\t\t\t\t\t// add table log into historics\n\t\t\t\t\tresult.historics = result.historics.concat(calculatedMesureTab);\n\t\t\t\t}\n\n\t\t\t\t// increase index\n\t\t\t\tstartingIndex += mesureSize_voie;\n\t\t\t}\n\t\t}else{\n\t\t\treturn result;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction getMesureSize(mesureType)\n{\n\tswitch (mesureType)\n\t{\n\t\tcase UP_FRAME_WAY_TYPE_UINT8_INPUT:\n\t\t\treturn 2;\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_UINT16_INPUT:\n\t\t    return 4;\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_UINT16_COUNTER:\n\t\t    return 4;\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_UINT32_COUNTER:\n\t\t\treturn 8;\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_UINTx_BRIGHTNESS:\n\t\t    return 0;\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_INTx_PRESSURE:\n\t\t    return 0;\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_INT16_DISTANCE:\n\t\t    return 4;\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_INT16_TEMPERATURE:\n\t\t    return 4;\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_UINT16_HUMIDITY:\n\t\t    return 4;\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_INT16_VOLTAGE:\n\t\t    return 4;\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_INT16_CURRENT:\n\t\t\treturn 4;\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_UINT16_VOC_INDEX:\n\t\t    return 4;\n\t\tbreak;\n\n        case UP_FRAME_WAY_TYPE_UINT16_CO2:\n            return 4;\n        break;\n\n\t\tdefault:\n\t\t\treturn 0;\n\t}\n}\n\nfunction getCalculatedMesure(mesure,mesureType,number_voie,date)\n{\n\tswitch (mesureType)\n\t{\n\t\tcase UP_FRAME_WAY_TYPE_UINT8_INPUT:\n\t\tcase UP_FRAME_WAY_TYPE_UINT16_INPUT:\n\t\t\tvar tab = [];\n\t\t\tvar mesureString = ('0000000' + mesure.toString(2)).slice(-8);\n\t\t\tfor (let i=1; i<mesureString.length+1;i++)\n\t\t\t{\n\t\t\t\ttab.push({\n\t\t\t\t\ttagRef: \"p_DI\"+ i + '_' +number_voie,\n\t\t\t\t\ttimestamp: date,\n\t\t\t\t\ttagValue: String(mesureString[mesureString.length-i])\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn tab;\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_UINT16_COUNTER:\n\t\tcase UP_FRAME_WAY_TYPE_UINT32_COUNTER:\n\t\t\treturn [{\n\t\t\t\ttagRef: \"p_count\" + '_' +number_voie,\n\t\t\t\ttimestamp: date,\n\t\t\t\ttagValue: String(mesure)\n\t\t\t}]\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_INT16_DISTANCE:\n\t\t\tif((mesure>>15)==1){\n\t\t\t\treturn [{\n\t\t\t\t\t\ttagRef: \"p_mm\" + '_' +number_voie,\n\t\t\t\t\t\ttimestamp: date,\n\t\t\t\t\t\ttagValue: String(((mesure^65535)+1)*-1)\n\t\t\t\t}];\n\t\t\t}else{\n\t\t\t\treturn [{\n\t\t\t\t\t\ttagRef: \"p_mm\" + '_' +number_voie,\n\t\t\t\t\t\ttimestamp: date,\n\t\t\t\t\t\ttagValue: String(mesure)\n\t\t\t\t}];\n\t\t\t}\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_INT16_TEMPERATURE:\n\t\t\tif((mesure>>15)==1){\n\t\t\t\treturn [{\n\t\t\t\t\t\ttagRef: \"p_temperature\" + '_' +number_voie,\n\t\t\t\t\t\ttimestamp: date,\n\t\t\t\t\t\ttagValue: String(((mesure^65535)+1)/100*-1)\n\t\t\t\t}];\n\t\t\t}else{\n\t\t\t\treturn [{\n\t\t\t\t\t\ttagRef: \"p_temperature\" + '_' +number_voie,\n\t\t\t\t\t\ttimestamp: date,\n\t\t\t\t\t\ttagValue: String(mesure/100)\n\t\t\t\t}];\n\t\t\t}\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_UINT16_HUMIDITY:\n\t\t\tif((mesure>>15)==1){\n\t\t\t\treturn [{\n\t\t\t\t\t\ttagRef: \"p_humidity\" + '_' +number_voie,\n\t\t\t\t\t\ttimestamp: date,\n\t\t\t\t\t\ttagValue: String(((mesure^65535)+1)/100*-1)\n\t\t\t\t}];\n\t\t\t}else{\n\t\t\t\treturn [{\n\t\t\t\t\t\ttagRef: \"p_humidity\" + '_' +number_voie,\n\t\t\t\t\t\ttimestamp: date,\n\t\t\t\t\t\ttagValue: String(mesure/100)\n\t\t\t\t}];\n\t\t\t}\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_INT16_VOLTAGE:\n\t\t\tif((mesure>>15)==1){\n\t\t\t\treturn [{\n\t\t\t\t\t\ttagRef: \"p_mV\" + '_' +number_voie,\n\t\t\t\t\t\ttimestamp: date,\n\t\t\t\t\t\ttagValue: String(((mesure^65535)+1)*-1)\n\t\t\t\t}];\n\t\t\t}else{\n\t\t\t\treturn [{\n\t\t\t\t\t\ttagRef: \"p_mV\" + '_' +number_voie,\n\t\t\t\t\t\ttimestamp: date,\n\t\t\t\t\t\ttagValue: String(mesure)\n\t\t\t\t}];\n\t\t\t}\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_INT16_CURRENT:\n\t\t\tif((mesure>>15)==1){\n\t\t\t\treturn [{\n\t\t\t\t\t\ttagRef: \"p_uA\" + '_' +number_voie,\n\t\t\t\t\t\ttimestamp: date,\n\t\t\t\t\t\ttagValue: String(((mesure^65535)+1)*-1)\n\t\t\t\t}];\n\t\t\t}else{\n\t\t\t\treturn [{\n\t\t\t\t\t\ttagRef: \"p_uA\" + '_' +number_voie,\n\t\t\t\t\t\ttimestamp: date,\n\t\t\t\t\t\ttagValue: String(mesure)\n\t\t\t\t}];\n\t\t\t}\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_UINT16_VOC_INDEX:\n\t\t    return[{\n\t\t        tagRef: \"p_VOC_index\" + '_' + number_voie,\n\t\t        timestamp: date,\n\t\t        tagValue: String(mesure)\n\t\t    }];\n\t\tbreak;\n\n        case UP_FRAME_WAY_TYPE_UINT16_CO2:\n            return[{\n                tagRef: \"p_CO2\" + '_' + number_voie,\n                timestamp: date,\n                tagValue: String(mesure)\n            }];\n        break;\n\n\t\tdefault:\n\t\t\treturn [];\n\t}\n}\n\nfunction getThresholdEvents(mesureType,alertType,number_voie,date)\n{\n\n\tswitch (mesureType)\n\t{\n\t\tcase UP_FRAME_WAY_TYPE_UINT16_COUNTER:\n\t\tcase UP_FRAME_WAY_TYPE_UINT32_COUNTER:\n\t\t\treturn [{\n\t\t\t\ttagRef: \"p_count\" + '_' +number_voie + '_high_alm',\n\t\t\t\ttimestamp: date,\n\t\t\t\ttagValue: String(alertType==0 ? 0 : alertType==1 ? 1 : 0),\n\t\t\t\tcontext:[]\n\t\t\t},{\n\t\t\t\ttagRef: \"p_count\" + '_' +number_voie + '_low_alm',\n\t\t\t\ttimestamp: date,\n\t\t\t\ttagValue: String(alertType==0 ? 0 : alertType==2 ? 1 : 0),\n\t\t\t\tcontext:[]\n\t\t\t}]\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_INT16_DISTANCE:\n\t\t\treturn [{\n\t\t\t\ttagRef: \"p_mm\" + '_' +number_voie + '_high_alm',\n\t\t\t\ttimestamp: date,\n\t\t\t\ttagValue: String(alertType==0 ? 0 : alertType==1 ? 1 : 0),\n\t\t\t\tcontext:[]\n\t\t\t},{\n\t\t\t\ttagRef: \"p_mm\" + '_' +number_voie + '_low_alm',\n\t\t\t\ttimestamp: date,\n\t\t\t\ttagValue: String(alertType==0 ? 0 : alertType==2 ? 1 : 0),\n\t\t\t\tcontext:[]\n\t\t\t}];\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_INT16_TEMPERATURE:\n\t\t\treturn [{\n\t\t\t\ttagRef: \"p_temperature\" + '_' +number_voie + '_high_alm',\n\t\t\t\ttimestamp: date,\n\t\t\t\ttagValue: String(alertType==0 ? 0 : alertType==1 ? 1 : 0),\n\t\t\t\tcontext:[]\n\t\t\t},{\n\t\t\t\ttagRef: \"p_temperature\" + '_' +number_voie + '_low_alm',\n\t\t\t\ttimestamp: date,\n\t\t\t\ttagValue: String(alertType==0 ? 0 : alertType==2 ? 1 : 0),\n\t\t\t\tcontext:[]\n\t\t\t}];\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_UINT16_HUMIDITY:\n\t\t\treturn [{\n\t\t\t\ttagRef: \"p_humidity\" + '_' +number_voie + '_high_alm',\n\t\t\t\ttimestamp: date,\n\t\t\t\ttagValue: String(alertType==0 ? 0 : alertType==1 ? 1 : 0),\n\t\t\t\tcontext:[]\n\t\t\t},{\n\t\t\t\ttagRef: \"p_humidity\" + '_' +number_voie + '_low_alm',\n\t\t\t\ttimestamp: date,\n\t\t\t\ttagValue: String(alertType==0 ? 0 : alertType==2 ? 1 : 0),\n\t\t\t\tcontext:[]\n\t\t\t}];\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_INT16_VOLTAGE:\n\t\t\treturn [{\n\t\t\t\ttagRef: \"p_mV\" + '_' +number_voie + '_high_alm',\n\t\t\t\ttimestamp: date,\n\t\t\t\ttagValue: String(alertType==0 ? 0 : alertType==1 ? 1 : 0),\n\t\t\t\tcontext:[]\n\t\t\t},{\n\t\t\t\ttagRef: \"p_mV\" + '_' +number_voie + '_low_alm',\n\t\t\t\ttimestamp: date,\n\t\t\t\ttagValue: String(alertType==0 ? 0 : alertType==2 ? 1 : 0),\n\t\t\t\tcontext:[]\n\t\t\t}];\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_INT16_CURRENT:\n\t\t\treturn [{\n\t\t\t\ttagRef: \"p_uA\" + '_' +number_voie + '_high_alm',\n\t\t\t\ttimestamp: date,\n\t\t\t\ttagValue: String(alertType==0 ? 0 : alertType==1 ? 1 : 0),\n\t\t\t\tcontext:[]\n\t\t\t},{\n\t\t\t\ttagRef: \"p_uA\" + '_' +number_voie + '_low_alm',\n\t\t\t\ttimestamp: date,\n\t\t\t\ttagValue: String(alertType==0 ? 0 : alertType==2 ? 1 : 0),\n\t\t\t\tcontext:[]\n\t\t\t}];\n\t\tbreak;\n\n\t\tcase UP_FRAME_WAY_TYPE_UINT16_VOC_INDEX:\n\t\t\treturn [{\n\t\t\t\ttagRef: \"p_VOC_index\" + '_' +number_voie + '_high_alm',\n\t\t\t\ttimestamp: date,\n\t\t\t\ttagValue: String(alertType==0 ? 0 : alertType==1 ? 1 : 0),\n\t\t\t\tcontext:[]\n\t\t\t},{\n\t\t\t\ttagRef: \"p_VOC_index\" + '_' +number_voie + '_low_alm',\n\t\t\t\ttimestamp: date,\n\t\t\t\ttagValue: String(alertType==0 ? 0 : alertType==2 ? 1 : 0),\n\t\t\t\tcontext:[]\n\t\t\t}];\n\t\tbreak;\n\n        case UP_FRAME_WAY_TYPE_UINT16_CO2:\n            return [{\n                tagRef: \"p_CO2\" + '_' +number_voie + '_high_alm',\n                timestamp: date,\n                tagValue: String(alertType==0 ? 0 : alertType==1 ? 1 : 0),\n                context:[]\n            },{\n                tagRef: \"p_CO2\" + '_' +number_voie + '_low_alm',\n                timestamp: date,\n                tagValue: String(alertType==0 ? 0 : alertType==2 ? 1 : 0),\n                context:[]\n            }];\n        break;\n\n\t\tdefault:\n\t\t\treturn [];\n\t}\n}\n\nfunction getError(error_code, date)\n{\n\tlet ref;\n\tlet value;\n\n\tswitch (error_code)\n\t{\n\t\tcase ACW_ERR_BUF_SMALLER :\n\t\t\tref = 'p_ERR_BUF_SMALLER';\n\t\tbreak;\n\n\t\tcase ACW_ERR_DEPTH_HISTORIC_OUT_OF_RANGE :\n\t\t\tref = 'p_ERR_DEPTH_HISTORIC_OUT_OF_RANGE';\n\t\tbreak;\n\n\t\tcase ACW_ERR_NB_SAMPLE_OUT_OF_RANGE :\n\t\t\tref = 'p_ERR_NB_SAMPLE_OUT_OF_RANGE';\n\t\tbreak;\n\n\t\tcase ACW_ERR_NWAY_OUT_OF_RANGE :\n\t\t\tref = 'p_ERR_NWAY_OUT_OF_RANGE';\n\t\tbreak;\n\n\t\tcase ACW_ERR_TYPEWAY_OUT_OF_RANGE :\n\t\t\tref = 'p_ERR_TYPEWAY_OUT_OF_RANGE';\n\t\tbreak;\n\n\t\tcase ACW_ERR_SAMPLING_PERIOD :\n\t\t\tref = 'p_ERR_SAMPLING_PERIOD';\n\t\tbreak;\n\n\t    case ACW_ERR_SUBTASK_END :\n\t\t\tref = 'p_ERR_SUBTASK_END';\n\t\tbreak;\n\n\t\tcase ACW_ERR_NULL_POINTER :\n\t\t\tref = 'p_ERR_NULL_POINTER';\n\t\tbreak;\n\n\t\tcase ACW_ERR_BATTERY_LEVEL_DEAD :\n\t\t\tref = 'p_ERR_BATTERY_LEVEL_DEAD';\n\t\tbreak;\n\n\t\tcase ACW_ERR_EEPROM :\n\t\t\tref = 'p_ERR_EEPROM';\n\t\tbreak;\n\n\t\tcase ACW_ERR_ROM:\n\t\t\tref = 'p_ERR_ROM';\n\t\tbreak;\n\n\t\tcase ACW_ERR_RAM :\n\t\t\tref = 'p_ERR_RAM';\n\t\tbreak;\n\n\t\tcase ACW_ERR_ARM_INIT_FAIL :\n\t\t\tref = 'p_ERR_ARM_INIT_FAIL';\n\t\tbreak;\n\n\t\tcase ACW_ERR_ARM_BUSY :\n\t\t\tref = 'p_ERR_ARM_BUSY';\n\t\tbreak;\n\n\t\tcase ACW_ERR_ARM_BRIDGE_ENABLE :\n\t\t\tref = 'p_ERR_ARM_BRIDGE_ENABLE';\n\t\tbreak;\n\n\t    case ACW_ERR_ARM_RADIO_QUEUE_FULL :\n\t\t\tref = 'p_ERR_RADIO_QUEUE_FULL';\n\t\tbreak;\n\n\t\tcase ACW_ERR_CFG_BOX_INIT_FAIL :\n\t\t\tref = 'p_ERR_CFG_BOX_INIT_FAIL';\n\t\tbreak;\n\n/* ******************************************* */\n/*                    ALERT                    */\n/* ******************************************* */\n\n\t\tcase ACW_ERR_KEEP_ALIVE_PERIOD :\n\t\t\tref = 'p_ERR_KEEP_ALIVE_PERIOD';\n\t\tbreak;\n\n\t\tcase ACW_ERR_BATTERY_LEVEL_LOW :\n\t\t\tref = 'p_ERR_BATTERY_LEVEL_LOW';\n\t\tbreak;\n\n        case ACW_ERR_ENTER_DEEP_SLEEP :\n            ref = 'p_ERR_ENTER_DEEP_SLEEP';\n        break;\n\n\t\tcase ACW_ERR_ARM_TRANSMISSION :\n\t\t\tref = 'p_ERR_ARM_TRANSMISSION';\n\t\tbreak;\n\n\t\tcase ACW_ERR_ARM_PAYLOAD_BIGGER :\n\t\t\tref = 'p_ERR_ARM_PAYLOAD_BIGGER';\n\t\tbreak;\n\n\t\tcase ACW_ERR_RADIO_PAIRING_TIMEOUT :\n\t\t\tref = 'p_ERR_RADIO_PAIRING_TIMEOUT';\n\t\tbreak;\n\n\t\tcase ACW_ERR_SENSORS_TIMEOUT :\n\t\t\tref = 'p_ERR_SENSORS_TIMEOUT';\n\t\tbreak;\n\n\t\tcase ACW_ERR_SENSORS_STOP :\n\t\t\tref = 'p_ERR_SENSOR_STOP';\n\t\tbreak;\n\n\t\tcase ACW_ERR_SENSORS_FAIL :\n\t\t\tref = 'p_ERR_SENSORS_FAIL';\n\t\tbreak;\n\n\t\tcase ACW_ERR_BOX_OPENED :\n\t\t\tref = 'p_ERR_BOX_OPENED';\n\t\tbreak;\n\n\t\tcase ACW_ERR_BOX_CLOSED :\n\t\t    ref = 'p_ERR_BOX_CLOSED';\n\t\tbreak;\n\n\t\tdefault :\n\t\t\treturn undefined;\n\t}\n\n\treturn {\n\t\ttagRef: ref,\n\t\ttimestamp: date,\n\t\ttagValue: String(1)\n\t}\n}\n\n\nif(msg.payload.tags.capteur == \"atim-thaq\") {\n    \n    var result = { historics: [], events: [], realTimes: [] };\n    var capteur = msg.payload.tags.capteur;\n    var deviceName = msg.payload.deviceName;\n    var loc_long = \"\";\n    var loc_lat = \"\";\n    var batterie = \"\";\n    var time = new Date() / 1000;\n    \n    const buffer = Buffer.from(msg.payload.data, 'base64');\n    var buffer_hex = buffer.toString('hex');\n\n    result = decodeStream(buffer_hex);\n\n    var message = [];\n    message.push( {'deveui':msg.payload.devEUI, 'time':(new Date() / 1000), 'type': result.realTimes[0].tagRef,'capteur':capteur, 'valeur': result.realTimes[0].tagValue, 'deviceName': deviceName, 'Gps_lon':loc_long, 'Gps_lat':loc_lat, 'batterie':batterie } );\n    message.push( {'deveui':msg.payload.devEUI, 'time':(new Date() / 1000)+0.1, 'type': result.realTimes[1].tagRef,'capteur':capteur, 'valeur': result.realTimes[1].tagValue, 'deviceName': deviceName, 'Gps_lon':loc_long, 'Gps_lat':loc_lat, 'batterie':batterie } );\n    message.push( {'deveui':msg.payload.devEUI, 'time':(new Date() / 1000)+0.2, 'type': result.realTimes[2].tagRef,'capteur':capteur, 'valeur': result.realTimes[2].tagValue, 'deviceName': deviceName, 'Gps_lon':loc_long, 'Gps_lat':loc_lat, 'batterie':batterie } );\n    message.push( {'deveui':msg.payload.devEUI, 'time':(new Date() / 1000)+0.3, 'type': result.realTimes[3].tagRef,'capteur':capteur, 'valeur': result.realTimes[3].tagValue, 'deviceName': deviceName, 'Gps_lon':loc_long, 'Gps_lat':loc_lat, 'batterie':batterie } );\n    \n    return {payload:message};\n}\nelse {\n    return\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 280,
        "wires": [
            [
                "d8c0e72.dd7c918"
            ]
        ]
    },
    {
        "id": "bbff794d.6f0b78",
        "type": "link in",
        "z": "b65661d8.d7be2",
        "name": "",
        "links": [
            "2714c1d4.7e611e"
        ],
        "x": 55,
        "y": 280,
        "wires": [
            [
                "76f7000a.808f5"
            ]
        ]
    },
    {
        "id": "1bb83a82.910845",
        "type": "function",
        "z": "876e2113.a1b7f",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui, valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"p_CO2_0\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 340,
        "wires": [
            [
                "f112510b.8de8f"
            ]
        ]
    },
    {
        "id": "9a7b98bc.ce62c8",
        "type": "function",
        "z": "876e2113.a1b7f",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),deveui, valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" +\n  \" AND type=\" +\n   \"\\'\" + \"p_VOC_index_0\" + \"\\' \" + \n   \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 380,
        "wires": [
            [
                "c8aa96a8.e378f8"
            ]
        ]
    },
    {
        "id": "f112510b.8de8f",
        "type": "sqlite",
        "z": "876e2113.a1b7f",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "C02",
        "x": 350,
        "y": 340,
        "wires": [
            [
                "3c850ac.7de18f6"
            ]
        ]
    },
    {
        "id": "c8aa96a8.e378f8",
        "type": "sqlite",
        "z": "876e2113.a1b7f",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "COV",
        "x": 350,
        "y": 380,
        "wires": [
            [
                "c402b849.f76198"
            ]
        ]
    },
    {
        "id": "c739c35a.fbf9c",
        "type": "inject",
        "z": "b65661d8.d7be2",
        "name": "N_6A2E_PMM_4",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"A_AAF3_PMM_1\",\"devEUI\":\"70b3d59ba000aaf3\",\"rxInfo\":[{\"gatewayID\":\"70B3D59BA000AA5E\",\"uplinkID\":\"b463ade6-a298-4116-8c70-faeba39d74fe\",\"name\":\"Gateway_P09_Test_Mios\",\"rssi\":-37,\"loRaSNR\":10,\"location\":{\"latitude\":42.82911,\"longitude\":2.7672,\"altitude\":508}}],\"txInfo\":{\"frequency\":867100000,\"dr\":5},\"adr\":true,\"fCnt\":15,\"fPort\":125,\"tags\":{\"capteur\":\"atim-thaq\"},\"data\":\"oAgJNAkHjgwAhQ0EHw==\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 680,
        "wires": [
            [
                "2714c1d4.7e611e"
            ]
        ]
    },
    {
        "id": "7b09ae01.10ab4",
        "type": "sqlite",
        "z": "876e2113.a1b7f",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "C02",
        "x": 310,
        "y": 580,
        "wires": [
            [
                "fc72c449.cb7458"
            ]
        ]
    },
    {
        "id": "77cdd761.6fd468",
        "type": "function",
        "z": "876e2113.a1b7f",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"p_CO2_0\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 580,
        "wires": [
            [
                "7b09ae01.10ab4"
            ]
        ]
    },
    {
        "id": "add00942.7b1ca8",
        "type": "link in",
        "z": "876e2113.a1b7f",
        "name": "",
        "links": [
            "ab3329fb.fed038"
        ],
        "x": 80,
        "y": 580,
        "wires": [
            [
                "77cdd761.6fd468"
            ]
        ]
    },
    {
        "id": "9c87948d.97c778",
        "type": "sqlite",
        "z": "876e2113.a1b7f",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "COV",
        "x": 310,
        "y": 620,
        "wires": [
            [
                "81defe4f.432aa"
            ]
        ]
    },
    {
        "id": "4c68b6fb.31feb8",
        "type": "function",
        "z": "876e2113.a1b7f",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT time,name,valeur FROM Valeurs WHERE name= \" + \n  \"\\'\" + msg.payload.name + \"\\'\" + \n \" AND type=\" + \"\\'\" + \"p_VOC_index_0\" + \"\\' \" + \n \" order by Valeurs.time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 620,
        "wires": [
            [
                "9c87948d.97c778"
            ]
        ]
    },
    {
        "id": "d1f80c02.5c941",
        "type": "link in",
        "z": "876e2113.a1b7f",
        "name": "",
        "links": [
            "ab3329fb.fed038"
        ],
        "x": 80,
        "y": 620,
        "wires": [
            [
                "4c68b6fb.31feb8"
            ]
        ]
    },
    {
        "id": "fc72c449.cb7458",
        "type": "function",
        "z": "876e2113.a1b7f",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\n//var series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[3],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 580,
        "wires": [
            [
                "3e2f8613.8ac8aa"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "81defe4f.432aa",
        "type": "function",
        "z": "876e2113.a1b7f",
        "name": "fill chart",
        "func": "\n/* Get new data in array */\n//var series = msg.payload[0].name;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].time*1000) + ', \"y\":' + msg.payload[i].valeur + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[4],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 620,
        "wires": [
            [
                "1b19bc91.434073"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "3e2f8613.8ac8aa",
        "type": "ui_chart",
        "z": "876e2113.a1b7f",
        "name": "Chart",
        "group": "9fab53c7.d31e8",
        "order": 3,
        "width": 10,
        "height": 5,
        "label": "C02 ppm",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "2000",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 670,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "1b19bc91.434073",
        "type": "ui_chart",
        "z": "876e2113.a1b7f",
        "name": "Chart",
        "group": "9fab53c7.d31e8",
        "order": 4,
        "width": 10,
        "height": 5,
        "label": "VOC",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "500",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 670,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "91b7d573.dd5b38",
        "type": "link out",
        "z": "b65661d8.d7be2",
        "name": "",
        "links": [
            "447bf7ba.cfa138"
        ],
        "x": 235,
        "y": 80,
        "wires": []
    },
    {
        "id": "447bf7ba.cfa138",
        "type": "link in",
        "z": "b65661d8.d7be2",
        "name": "",
        "links": [
            "91b7d573.dd5b38"
        ],
        "x": 55,
        "y": 220,
        "wires": [
            [
                "4ca27c1e.6c3744",
                "76f7000a.808f5"
            ]
        ]
    },
    {
        "id": "bb8d1f.136652e",
        "type": "sqlite",
        "z": "9d5126d6.f23448",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Humidity",
        "x": 340,
        "y": 680,
        "wires": [
            [
                "52cafc20.24e784"
            ]
        ]
    },
    {
        "id": "2527da53.7a5006",
        "type": "function",
        "z": "9d5126d6.f23448",
        "name": "Select",
        "func": "if(msg.payload.action==\"move\") {\n    var newMsg = {\n        \"topic\": \"UPDATE Capteurs SET lat=\" + \"\\'\" + parseFloat(msg.payload.lat) + \"\\'\" + \", lon=\" + \"\\'\" + parseFloat(msg.payload.lon) + \"\\'\" + \" WHERE deveui=\" + \"\\'\" + msg.payload.name.toUpperCase() + \"\\'\"\n    }\n    return newMsg;\n}\nelse {\n    return;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 680,
        "wires": [
            [
                "bb8d1f.136652e"
            ]
        ]
    },
    {
        "id": "711a92ab.c8539c",
        "type": "link in",
        "z": "9d5126d6.f23448",
        "name": "",
        "links": [
            "b0cbe663.011fe8"
        ],
        "x": 75,
        "y": 680,
        "wires": [
            [
                "2527da53.7a5006"
            ]
        ]
    },
    {
        "id": "52cafc20.24e784",
        "type": "debug",
        "z": "9d5126d6.f23448",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 510,
        "y": 680,
        "wires": []
    },
    {
        "id": "66abf733.764328",
        "type": "sqlite",
        "z": "167ec5b.9b9513a",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "capteurs",
        "x": 340,
        "y": 720,
        "wires": [
            [
                "752537c2.909728"
            ]
        ]
    },
    {
        "id": "ad871409.c60488",
        "type": "function",
        "z": "167ec5b.9b9513a",
        "name": "Select",
        "func": "if(msg.payload.action==\"move\") {\n    var newMsg = {\n        \"topic\": \"UPDATE Capteurs SET lat=\" + \"\\'\" + parseFloat(msg.payload.lat) + \"\\'\" + \", lon=\" + \"\\'\" + parseFloat(msg.payload.lon) + \"\\'\" + \" WHERE deveui=\" + \"\\'\" + msg.payload.name.toUpperCase() + \"\\'\"\n    }\n    return newMsg;\n}\nelse {\n    return;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 720,
        "wires": [
            [
                "66abf733.764328"
            ]
        ]
    },
    {
        "id": "752537c2.909728",
        "type": "debug",
        "z": "167ec5b.9b9513a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 510,
        "y": 720,
        "wires": []
    },
    {
        "id": "689a76ae.b885a8",
        "type": "link in",
        "z": "167ec5b.9b9513a",
        "name": "",
        "links": [
            "68298509.de2cbc"
        ],
        "x": 75,
        "y": 720,
        "wires": [
            [
                "ad871409.c60488"
            ]
        ]
    },
    {
        "id": "ab04ea8a.a4e5a8",
        "type": "sqlite",
        "z": "e51008a5.27ff68",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "capteurs",
        "x": 360,
        "y": 720,
        "wires": [
            [
                "94dbe493.0d4cf8"
            ]
        ]
    },
    {
        "id": "768e74b6.f09eac",
        "type": "function",
        "z": "e51008a5.27ff68",
        "name": "Select",
        "func": "if(msg.payload.action==\"move\") {\n    var newMsg = {\n        \"topic\": \"UPDATE Capteurs SET lat=\" + \"\\'\" + parseFloat(msg.payload.lat) + \"\\'\" + \", lon=\" + \"\\'\" + parseFloat(msg.payload.lon) + \"\\'\" + \" WHERE deveui=\" + \"\\'\" + msg.payload.name.toUpperCase() + \"\\'\"\n    }\n    return newMsg;\n}\nelse {\n    return;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 720,
        "wires": [
            [
                "ab04ea8a.a4e5a8"
            ]
        ]
    },
    {
        "id": "94dbe493.0d4cf8",
        "type": "debug",
        "z": "e51008a5.27ff68",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 530,
        "y": 720,
        "wires": []
    },
    {
        "id": "2f1ed59b.674a8a",
        "type": "link in",
        "z": "e51008a5.27ff68",
        "name": "",
        "links": [
            "6e3317aa.777318"
        ],
        "x": 100,
        "y": 720,
        "wires": [
            [
                "768e74b6.f09eac"
            ]
        ]
    },
    {
        "id": "6005712d.af5c9",
        "type": "sqlite",
        "z": "876e2113.a1b7f",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "capteurs",
        "x": 340,
        "y": 680,
        "wires": [
            [
                "bc9a75b4.45b2d8"
            ]
        ]
    },
    {
        "id": "69e117f.08066e8",
        "type": "function",
        "z": "876e2113.a1b7f",
        "name": "Select",
        "func": "if(msg.payload.action==\"move\") {\n    var newMsg = {\n        \"topic\": \"UPDATE Capteurs SET lat=\" + \"\\'\" + parseFloat(msg.payload.lat) + \"\\'\" + \", lon=\" + \"\\'\" + parseFloat(msg.payload.lon) + \"\\'\" + \" WHERE deveui=\" + \"\\'\" + msg.payload.name.toUpperCase() + \"\\'\"\n    }\n    return newMsg;\n}\nelse {\n    return;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 680,
        "wires": [
            [
                "6005712d.af5c9"
            ]
        ]
    },
    {
        "id": "bc9a75b4.45b2d8",
        "type": "debug",
        "z": "876e2113.a1b7f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 510,
        "y": 680,
        "wires": []
    },
    {
        "id": "8000fa74.898628",
        "type": "link in",
        "z": "876e2113.a1b7f",
        "name": "",
        "links": [
            "ab3329fb.fed038"
        ],
        "x": 75,
        "y": 680,
        "wires": [
            [
                "69e117f.08066e8"
            ]
        ]
    },
    {
        "id": "b4260233.1c6ae",
        "type": "sqlite",
        "z": "4040fea9.8edac",
        "mydb": "666416d8.e6f858",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "capteurs",
        "x": 360,
        "y": 540,
        "wires": [
            [
                "88ade441.5ff7d8"
            ]
        ]
    },
    {
        "id": "1cffe0fa.059d2f",
        "type": "function",
        "z": "4040fea9.8edac",
        "name": "Select",
        "func": "if(msg.payload.action==\"move\") {\n    var newMsg = {\n        \"topic\": \"UPDATE Capteurs SET lat=\" + \"\\'\" + parseFloat(msg.payload.lat) + \"\\'\" + \", lon=\" + \"\\'\" + parseFloat(msg.payload.lon) + \"\\'\" + \" WHERE deveui=\" + \"\\'\" + msg.payload.name.toUpperCase() + \"\\'\"\n    }\n    return newMsg;\n}\nelse {\n    return;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 540,
        "wires": [
            [
                "b4260233.1c6ae"
            ]
        ]
    },
    {
        "id": "88ade441.5ff7d8",
        "type": "debug",
        "z": "4040fea9.8edac",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 530,
        "y": 540,
        "wires": []
    },
    {
        "id": "70164759.8cd408",
        "type": "link in",
        "z": "4040fea9.8edac",
        "name": "",
        "links": [
            "48f5faa2.12f204"
        ],
        "x": 100,
        "y": 540,
        "wires": [
            [
                "1cffe0fa.059d2f"
            ]
        ]
    }
]