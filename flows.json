[
    {
        "id": "ad99b549.c0c208",
        "type": "tab",
        "label": "dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4906e0ea.6bc0f",
        "type": "tab",
        "label": "map",
        "disabled": false,
        "info": ""
    },
    {
        "id": "95955858.b23038",
        "type": "tab",
        "label": "backend",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b1aaf5f5.0d31a8",
        "type": "tab",
        "label": "Parking",
        "disabled": true,
        "info": ""
    },
    {
        "id": "b31a2ba7.4795e8",
        "type": "tab",
        "label": "Consommation",
        "disabled": true,
        "info": ""
    },
    {
        "id": "2fc0c269.45440e",
        "type": "subflow",
        "name": "ui-table handler",
        "info": "# ui-table handler\nUniversal handler for ui-table.\n## features\n- buffer table data\n- add or update individual rows or cells of the table\n- delete rows\n- clear tableData\n- handle column width\n- handle column order\n- hide und unhide columns\n- hide and unhide rows\n- records row order\n- support for nested columns [(column groups)](http://tabulator.info/examples/4.7#column-groups)\n- support for child rows (_children) [(nested data trees)](http://tabulator.info/examples/4.7#tree)\n\nFor real life example see:\n\n**syslog server** for logfile like table with filters\n\n**remote device table** for dynamically updated table with context menues\n\n**irrigation system** for sortable rows\n\n## sending data to ui-tabel\n\n- sending an `array` as discribed in ui-table will replace the complete table and delete all table edits\n  \n  if `msg.keepEdits=true` is added the existing edits will be kept.\n- send an `object` containing the updated properties of a table row by sending msg.<tableDataProp>.\n\n  The table is updated using the `updateOrAddData` command. You can alter the command used by adding the `msg.tabulatorCommand` and `msg.tabulatorParameter`\n\n```\nmsg.tabulatorCommand=\"addData\";\nmsg.tabulatorParameter=[true];\n```\n## configuration\n- `tabulator` json formatted object containing configuration of the table. See ui-table for more details.\n- `property` property of the msg object that contains the data to be passed to ui-table. I.e. *state* `msg.state`\n- `index` index column to identify individual rows. Each message containing data must have a unique `msg.topic` to identify the row. Messages without this `msg.topic` will be droped. It is not nessesary but possible to display the index column in the table. Do not enable editing on this column otherwise you will loose the connection and another row will be added to the table as soon as a new message arrives!\n\n   Defaults to *$topic* `msg.state.$topic`\n- `maxRows`maximum number of rows held by table widget. If grater than **0** the amount of rows in ui-table is limited. For this to work the index row must be a Number. ´rows < currentID-maxRows´ will be deleted.\n- `maxStore`maximum number of rows stored by this node for replay if a client connects. If grater than **0** the amount of rows in flow context is limited. for this to work the index row must be a Number. ´rows < currentID-maxStore´ will be deleted.\n- `dashboard` name of the dashboard tab to only update the table if the dashboard is visible. If empty the table will be updated on every tab change and connect.\n- `context` configuration of context data. The subflow will save or cache data in the flows context using `$parent.`. \n   **tableData** caches the incoming data to restore it on `ui-control´ *change* messages.\n   **tableConfig** saves column width and order to save the interactive table layot\n   **tableEdit** saves edits on the table data otherwise it would be overwritten when new data arrives\n```json\n{\n    \"tableData\": {\n        \"name\": \"tableData\"\n    },\n    \"tableConfig\": {\n        \"name\": \"tableConfig\",\n        \"storage\": \"file\"\n    },\n    \"tableEdit\": {\n        \"name\": \"tableEdit\",\n        \"storage\": \"file\"\n    }\n}\n```\n\n## commands\ncommands can be passed by sending a object as `msg.payload`\n\n```json\n{\n    \"command\": \"delete\",\n    \"object\": \"columnOrder\"\n}\n```\n\n- `deleteTable` tableCache\n- `deleteRow` delete single row. `object` matching index property\n- `ignoreRow` delete single row and put it on an ignore list. `object` matching index property\n- `unIgnoreRow`remove row from the ignore list.  `object` matching index property\n- `unIgnoreRows`delte the ignore list. \n- `deleteRowOrder` delete custom row order\n- `deleteColumnOrder` delete custom column order\n  This is important if you add or delete columns in the tabulator config otherwise the columns most likely don`t show up\n- `deleteColumnWidth` delete custom column width\n- `columnHide` hide a column. `object` matching column field\n- `columnUnHide` unhide a column. `object` matching column field\n- `columnsUnHide` unhide all hidden columns.\n- `setMaxStore` set maximum amount of rows in cache\n- `setMaxDisplay` set maximum amout of rows in ui-table\n- `getTable` get table data (as displayed) as an array (on 2nd output)\n \n## background\nui-table warps the powerfull tabluator library.  This subflow makes it easier to unleash the powerfull features of ui-table",
        "category": "dashboard",
        "in": [
            {
                "x": 54,
                "y": 85,
                "wires": [
                    {
                        "id": "cbbc1421.32ee08"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 85,
                "wires": [
                    {
                        "id": "cbbc1421.32ee08",
                        "port": 1
                    }
                ]
            },
            {
                "x": 360,
                "y": 136,
                "wires": [
                    {
                        "id": "cbbc1421.32ee08",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "tabulator",
                "type": "json",
                "value": "{\"tabulator\":{\"responsiveLayout\":\"collapse\",\"responsiveLayoutCollapseStartOpen\":false,\"index\":\"$name\",\"layout\":\"fitColumns\",\"movableColumns\":true,\"groupBy\":\"\",\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.definition.field, 'title': column._column.definition.title});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"rowFormatter\":\"function(row){     var data = row.getData();     switch (data.$state) {         case \\\"lost\\\":             row.getElement().style.backgroundColor = \\\"#9e2e66\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"sleeping\\\":             row.getElement().style.backgroundColor = \\\"#336699\\\";             break;         case \\\"disconnected\\\":             row.getElement().style.backgroundColor = \\\"#cc3300\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"alert\\\":             row.getElement().style.backgroundColor = \\\"#A6A6DF\\\";             break;         case \\\"init\\\":             row.getElement().style.backgroundColor = \\\"#f2f20d\\\";             break;         case \\\"ready\\\":             row.getElement().style.backgroundColor = \\\"\\\";             row.getElement().style.color = \\\"\\\";             break;         } }\",\"columns\":[{\"formatter\":\"responsiveCollapse\",\"width\":30,\"minWidth\":30,\"align\":\"center\",\"resizable\":false,\"headerSort\":false,\"frozen\":true,\"title\":\"expand\",\"field\":\"expand\",\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {      var html = cell.getValue(); return html;  }\",\"title\":\"State\",\"field\":\"$stateIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {     var html = cell.getValue(); return html;  }\",\"title\":\"Signal\",\"field\":\"signalIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"Name\",\"field\":\"$name\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"State\",\"field\":\"$state\",\"width\":100,\"align\":\"center\",\"headerVertical\":\"flip\"},{\"title\":\"last-ready\",\"field\":\"lastSeenreadyFormatted\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Homie\",\"field\":\"$homie\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Platform\",\"field\":\"$implementation\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Statistics\",\"columns\":[{\"title\":\"Interval\",\"field\":\"interval\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"outputFormat\":\"d hh:mm:ss\",\"inputFormat\":\"seconds\",\"invalidPlaceholder\":\"(unknown)\"},\"title\":\"Uptime\",\"field\":\"uptime\",\"formatter\":\"function(cell, formatterParams, onRendered){     var pad = function (num) {         return (\\\"0\\\"+num).slice(-2);     };     var secs = Number(cell.getValue());     if (Number.isNaN(secs)) return;     var minutes = Math.floor(secs / 60);     secs = secs%60;     var hours = Math.floor(minutes/60);     minutes = minutes%60;     var days = Math.floor(hours/24);     hours = hours%24;     if (days>0)         return days+\\\"d \\\"+pad(hours)+\\\":\\\"+pad(minutes);     else         return pad(hours)+\\\":\\\"+pad(minutes)+\\\":\\\"+pad(secs); }\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\"; else return; }\",\"legendColor\":\"#FFFFFF\",\"legendAlign\":\"center\"},\"title\":\"Signal\",\"field\":\"signal\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":2.5,\"max\":3.5,\"color\":[\"red\",\"green\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" V</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Supply\",\"field\":\"supply\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Battery\",\"field\":\"battery\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100000,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+(value/1024).toFixed(2)+\\\" kB</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Memory\",\"field\":\"freeheap\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU load\",\"field\":\"cpuload\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":20,\"max\":60,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" °C</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU temp\",\"field\":\"cputemp\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"}]},{\"title\":\"Firmware\",\"columns\":[{\"formatter\":\"link\",\"formatterParams\":{\"labelField\":\"$localip\",\"urlPrefix\":\"http://\",\"target\":\"_blank\"},\"title\":\"IP\",\"field\":\"$localip\",\"width\":100},{\"title\":\"mac\",\"field\":\"$mac\",\"width\":100},{\"title\":\"Accsess Point\",\"field\":\"SSID\",\"width\":100},{\"title\":\"Firmware\",\"field\":\"name\",\"width\":100},{\"title\":\"Version\",\"field\":\"version\",\"width\":100},{\"title\":\"Last Boot Cause\",\"field\":\"lastBootCause\",\"width\":100},{\"title\":\"Reset Reason\",\"field\":\"resetReason\",\"width\":100}]}]},\"customHeight\":12}",
                "ui": {
                    "icon": "font-awesome/fa-table",
                    "label": {
                        "en-US": "Tabulator"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableDataProp",
                "type": "str",
                "value": "row",
                "ui": {
                    "icon": "font-awesome/fa-tag",
                    "label": {
                        "en-US": "rowProperty"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableIndex",
                "type": "str",
                "value": "$topic",
                "ui": {
                    "icon": "font-awesome/fa-indent",
                    "label": {
                        "en-US": "Index"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "maxRows",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-list-ol",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num",
                            "bool",
                            "env"
                        ]
                    },
                    "label": {}
                }
            },
            {
                "name": "maxStore",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num",
                            "env"
                        ]
                    },
                    "label": {}
                }
            },
            {
                "name": "dashboard",
                "type": "str",
                "value": "Remote Device Table",
                "ui": {
                    "icon": "font-awesome/fa-dashboard",
                    "label": {
                        "en-US": "Dashboard"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableContext",
                "type": "json",
                "value": "{\"tableData\":{\"name\":\"tableData\"},\"tableConfig\":{\"name\":\"tableConfig\",\"storage\":\"file\"},\"tableEdit\":{\"name\":\"tableEdit\",\"storage\":\"file\"}}",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "label": {
                        "en-US": "Context"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            }
        ],
        "color": "#3FADB5",
        "icon": "node-red-dashboard/ui_slider.png",
        "status": {
            "x": 360,
            "y": 34,
            "wires": [
                {
                    "id": "cbbc1421.32ee08",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "95d0fd03.24a6e",
        "type": "sqlitedb",
        "z": "",
        "db": "/data/datavolume1/db1",
        "mode": "RW"
    },
    {
        "id": "3dc8a8e5.98d0d8",
        "type": "ui_group",
        "z": "",
        "name": "Graph",
        "tab": "42fc193c.8683f8",
        "order": 1,
        "disp": true,
        "width": 20,
        "collapse": false
    },
    {
        "id": "ed4b9a8a.b9eb38",
        "type": "ui_group",
        "z": "",
        "name": "Detail",
        "tab": "42fc193c.8683f8",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": false
    },
    {
        "id": "34eb7bc9.9b5834",
        "type": "ui_group",
        "z": "",
        "name": "Alerte",
        "tab": "42fc193c.8683f8",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "12373f98.1d2cd",
        "type": "ui_group",
        "z": "",
        "name": "Group 1",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "4116e46.966171c",
        "type": "ui_group",
        "z": "",
        "name": "Group 3",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "3dc7cc58.856554",
        "type": "ui_group",
        "z": "",
        "name": "Group 4",
        "tab": "",
        "order": 6,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "baa59507.2bb248",
        "type": "ui_group",
        "z": "",
        "name": "Group 2",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "d384a6a9.f9f418",
        "type": "ui_group",
        "z": "",
        "name": "R",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "1",
        "collapse": false
    },
    {
        "id": "fbdf3019.3cf7d",
        "type": "ui_group",
        "z": "",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 22,
        "collapse": false
    },
    {
        "id": "42fc193c.8683f8",
        "type": "ui_tab",
        "z": "",
        "name": "Informations",
        "icon": "fa-table",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f4801218.6ea4a",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#35c8ff",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "true",
            "allowSwipe": "true",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "d52a08e4.4c26f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fbdf3019.3cf7d",
        "order": 3,
        "width": 21,
        "height": 1
    },
    {
        "id": "f5ac79fa.1c2f28",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "chirpstack-docker_mosquitto_1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "6870e87e.eb2608",
        "type": "ui_tab",
        "z": "",
        "name": "Cartographie",
        "icon": "map",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6230babe.5dfca4",
        "type": "ui_group",
        "z": "",
        "name": "map",
        "tab": "6870e87e.eb2608",
        "order": 1,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "9cb74307.16574",
        "type": "ui_tab",
        "z": "",
        "name": "Detail des mesures",
        "icon": "fa-list-alt",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "91fc922.8a36e7",
        "type": "ui_group",
        "z": "",
        "name": "Detail pav",
        "tab": "9cb74307.16574",
        "order": 1,
        "disp": true,
        "width": "19",
        "collapse": false
    },
    {
        "id": "5e67743f.147e4c",
        "type": "mui_tab",
        "z": "",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "693bd202.986a9c",
        "type": "mui_group",
        "z": "",
        "name": "Default",
        "tab": "5e67743f.147e4c",
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "205a3e3f.eb52b2",
        "type": "mui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "m-base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "m-page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "m-page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "m-page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "m-group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "m-group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "m-group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "m-widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "m-widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "m-widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "1bbea30b.cbc72d",
        "type": "ui_group",
        "z": "",
        "name": "Two dimension Array",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c69b85fc.c131f8",
        "type": "ui_group",
        "z": "",
        "name": "Map",
        "tab": "219bb5fc.ed05ea",
        "order": 9,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "4959e3f4.e4ae0c",
        "type": "ui_group",
        "z": "",
        "name": "Heure",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7c201bb4.478da4",
        "type": "ui_group",
        "name": "Demo",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "693fd694.b05f38",
        "type": "ui_group",
        "z": "",
        "name": "Clock",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4466bb5d.dbb324",
        "type": "ui_group",
        "z": "",
        "name": "Radial Gauges",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d488fdb8.aa17c",
        "type": "ui_group",
        "z": "",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e296a066.99767",
        "type": "ui_group",
        "z": "",
        "name": "Garage",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "10"
    },
    {
        "id": "ede27c63.ca99d",
        "type": "ui_group",
        "z": "",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "9aa1e070.8dcb7",
        "type": "ui_group",
        "z": "",
        "name": "VG",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "29",
        "collapse": false
    },
    {
        "id": "d34483dc.eddf1",
        "type": "ui_group",
        "z": "",
        "name": "VG",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "29",
        "collapse": false
    },
    {
        "id": "8f2c83a3.2e914",
        "type": "ui_group",
        "z": "",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "e8feebf.9f0be18",
        "type": "ui_group",
        "z": "",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "cbc13c66.46fd4",
        "type": "ui_group",
        "z": "",
        "name": "Map",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "d2f7c46e.fe6248",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6230babe.5dfca4",
        "order": 11,
        "width": 6,
        "height": 1
    },
    {
        "id": "65c50661.fabc58",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6230babe.5dfca4",
        "order": 12,
        "width": 6,
        "height": 1
    },
    {
        "id": "382df71f.06af28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6230babe.5dfca4",
        "order": 17,
        "width": 11,
        "height": 1
    },
    {
        "id": "59472e0a.069be",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6230babe.5dfca4",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "5db33e7a.55fc5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6230babe.5dfca4",
        "order": 21,
        "width": 15,
        "height": 1
    },
    {
        "id": "7c5314f1.d1babc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6230babe.5dfca4",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "331c5026.c5b83",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6230babe.5dfca4",
        "order": 24,
        "width": 30,
        "height": 1
    },
    {
        "id": "5d9b1a26.4b5794",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6230babe.5dfca4",
        "order": 26,
        "width": 19,
        "height": 1
    },
    {
        "id": "ba7e4c8f.a5eb4",
        "type": "ui_group",
        "z": "",
        "name": "Details information",
        "tab": "84081c8a.00d1f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "84081c8a.00d1f",
        "type": "ui_tab",
        "z": "",
        "name": "Menu",
        "icon": "fa-tachometer",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "27481590.994c0a",
        "type": "ui_group",
        "z": "",
        "name": "ui_control",
        "tab": "3408bbbc.df5f04",
        "order": 1,
        "disp": true,
        "width": "22",
        "collapse": false
    },
    {
        "id": "3408bbbc.df5f04",
        "type": "ui_tab",
        "z": "",
        "name": "Home",
        "icon": "track_changes",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7a227b7.bb88884",
        "type": "ui_group",
        "z": "",
        "name": "Table",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "14",
        "collapse": false
    },
    {
        "id": "d2f9805.900e68",
        "type": "ui_group",
        "name": "Control",
        "tab": "67ae9d7e.5b6644",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "8b88f078.53d28",
        "type": "ui_group",
        "name": "admin1",
        "tab": "67ae9d7e.5b6644",
        "order": 3,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "1b4a473c.bf8e29",
        "type": "ui_group",
        "name": "admin2",
        "tab": "67ae9d7e.5b6644",
        "order": 4,
        "disp": true,
        "width": "21",
        "collapse": false
    },
    {
        "id": "c2053ca5.cd81d",
        "type": "ui_group",
        "name": "Change Tabs",
        "tab": "67ae9d7e.5b6644",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "67ae9d7e.5b6644",
        "type": "ui_tab",
        "name": "Admin",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "219bb5fc.ed05ea",
        "type": "ui_tab",
        "z": "",
        "name": "Parking",
        "icon": "fa-car",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b63f84f6.260dc8",
        "type": "ui_group",
        "z": "",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c6aac3b5.40981",
        "type": "ui_group",
        "z": "",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "2af197ab.7d1198",
        "type": "ui_group",
        "z": "",
        "name": "forrage",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": true
    },
    {
        "id": "9bf529b0.76ff28",
        "type": "ui_group",
        "z": "",
        "name": "forrage",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": true
    },
    {
        "id": "e398cf7d.b1251",
        "type": "ui_group",
        "z": "",
        "name": "Default",
        "tab": "",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "91e075b1.05ceb8",
        "type": "ui_group",
        "name": "Conexão",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "18b3322e.b7403e",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 13,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d0f1dce8.a263",
        "type": "ui_group",
        "z": "",
        "name": "Cat-5",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "f8818c2e.f42eb",
        "type": "ui_group",
        "z": "",
        "name": "Test",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c3b2b430.f474d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 6,
        "width": 11,
        "height": 1
    },
    {
        "id": "f98a99b6.19c668",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 11,
        "width": 11,
        "height": 1
    },
    {
        "id": "cd17f1ee.926aa",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 15,
        "width": 11,
        "height": 1
    },
    {
        "id": "684aecba.46f244",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 16,
        "width": 30,
        "height": 1
    },
    {
        "id": "1c937574.7fe1ab",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 17,
        "width": 11,
        "height": 1
    },
    {
        "id": "cda88173.149d2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 20,
        "width": 3,
        "height": 1
    },
    {
        "id": "4b4ebf35.9ef87",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 23,
        "width": 2,
        "height": 1
    },
    {
        "id": "bef7a270.64c7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 24,
        "width": 11,
        "height": 1
    },
    {
        "id": "97da82c5.2ff06",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 26,
        "width": 2,
        "height": 1
    },
    {
        "id": "e5dc9f99.fd7a9",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 27,
        "width": 2,
        "height": 1
    },
    {
        "id": "26bc20aa.4d4d7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 28,
        "width": 11,
        "height": 1
    },
    {
        "id": "f91579a.d380c88",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 30,
        "width": 2,
        "height": 1
    },
    {
        "id": "d5416df9.02db4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 31,
        "width": 2,
        "height": 1
    },
    {
        "id": "b5b3b2df.12181",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 32,
        "width": 14,
        "height": 1
    },
    {
        "id": "6b426e17.f5c05",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 33,
        "width": 11,
        "height": 1
    },
    {
        "id": "dc51f005.64356",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 34,
        "width": 8,
        "height": 1
    },
    {
        "id": "9e0cd252.a0232",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 36,
        "width": 2,
        "height": 1
    },
    {
        "id": "2fc59adc.016d66",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 37,
        "width": 11,
        "height": 1
    },
    {
        "id": "dc5a34db.49ef38",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 38,
        "width": 30,
        "height": 1
    },
    {
        "id": "c3175261.4df3e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 39,
        "width": 30,
        "height": 1
    },
    {
        "id": "b5eae955.991608",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 40,
        "width": 30,
        "height": 1
    },
    {
        "id": "dcb24154.c2d02",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 41,
        "width": 30,
        "height": 1
    },
    {
        "id": "c23ab357.0224e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 42,
        "width": 30,
        "height": 1
    },
    {
        "id": "3a4e984a.527bd8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 44,
        "width": 19,
        "height": 1
    },
    {
        "id": "605304e1.9f2f3c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 45,
        "width": 10,
        "height": 1
    },
    {
        "id": "c85c2b7c.afbca8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c69b85fc.c131f8",
        "order": 47,
        "width": 9,
        "height": 1
    },
    {
        "id": "1aab8efb.46cc31",
        "type": "ui_tab",
        "z": "",
        "name": "  ",
        "icon": "fa-fw",
        "order": 7,
        "disabled": true,
        "hidden": false
    },
    {
        "id": "e53107cc.07f9a8",
        "type": "ui_group",
        "z": "",
        "name": "Group 1",
        "tab": "1aab8efb.46cc31",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "f13349af.191df8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "e53107cc.07f9a8",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "15d0f55d.bd776b",
        "type": "ui_tab",
        "z": "",
        "name": "Energie",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "555840c7.590ee",
        "type": "ui_group",
        "z": "",
        "name": "Energie",
        "tab": "15d0f55d.bd776b",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "c96ecfa0.0e549",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "5ff8d7a7.02c5a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "8bb6ae3a.b644",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "cd440232.46df5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 13,
        "width": 7,
        "height": 1
    },
    {
        "id": "f6e57360.3912d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 14,
        "width": 30,
        "height": 1
    },
    {
        "id": "707d0098.485b5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 15,
        "width": 8,
        "height": 1
    },
    {
        "id": "2b5da95c.5fd646",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 19,
        "width": 19,
        "height": 1
    },
    {
        "id": "db559101.0ed51",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 20,
        "width": 30,
        "height": 1
    },
    {
        "id": "b36e2487.195ba8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 21,
        "width": 30,
        "height": 1
    },
    {
        "id": "c0f59951.db3c28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 22,
        "width": 30,
        "height": 1
    },
    {
        "id": "a2d841a2.e4b2d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 23,
        "width": 30,
        "height": 1
    },
    {
        "id": "82c44fc2.5087c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 24,
        "width": 30,
        "height": 1
    },
    {
        "id": "2884836f.c895cc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 25,
        "width": 30,
        "height": 1
    },
    {
        "id": "83c66a48.7714f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 26,
        "width": 30,
        "height": 1
    },
    {
        "id": "158fb55.3336f4b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 27,
        "width": 30,
        "height": 1
    },
    {
        "id": "a134b247.b38f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 28,
        "width": 30,
        "height": 1
    },
    {
        "id": "552fa9eb.323218",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 29,
        "width": 30,
        "height": 1
    },
    {
        "id": "6b34eb3e.f3e024",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 30,
        "width": 30,
        "height": 1
    },
    {
        "id": "2d3e0a27.1d71b6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 31,
        "width": 30,
        "height": 1
    },
    {
        "id": "9f56dbb3.18dc68",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 32,
        "width": 30,
        "height": 1
    },
    {
        "id": "8626bc69.16431",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 33,
        "width": 30,
        "height": 1
    },
    {
        "id": "a8810164.3a534",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 38,
        "width": 8,
        "height": 1
    },
    {
        "id": "37660834.4bde78",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 40,
        "width": 8,
        "height": 1
    },
    {
        "id": "b8036450.104258",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 41,
        "width": 19,
        "height": 1
    },
    {
        "id": "705e7fff.0649b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 42,
        "width": 3,
        "height": 1
    },
    {
        "id": "eb5ae646.23d898",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 43,
        "width": 22,
        "height": 1
    },
    {
        "id": "a7a4523.f2a7fb",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 44,
        "width": 3,
        "height": 1
    },
    {
        "id": "fb322e34.2ac95",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "555840c7.590ee",
        "order": 45,
        "width": 22,
        "height": 1
    },
    {
        "id": "498750de.b3ff6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3dc8a8e5.98d0d8",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "2b34552.de9f6aa",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3dc8a8e5.98d0d8",
        "order": 11,
        "width": 8,
        "height": 1
    },
    {
        "id": "c04e3717.33bfc8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "34eb7bc9.9b5834",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "28a1f9d5.9133b6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "34eb7bc9.9b5834",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "7b61aa47.31c724",
        "type": "sqlitedb",
        "z": "",
        "db": "/data/datavolume1/db1",
        "mode": "RWC"
    },
    {
        "id": "eb1b180b.f41fc8",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "chirpstack-docker_mosquitto_1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "db7a25be.6df258",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "update table",
        "func": "var numberOfRows = msg.payload.length;\n\n//flow.set(\"lastId\",numberOfRows);\n\nvar newMsg = { payload: msg.payload };\nmsg.payload=[];\n\nfor (let i=0; i<numberOfRows; i++) {\n    var d = new Date(newMsg.payload[i].Time*1000);\n    var strdate =  (\"00\" + d.getDate()).slice(-2) + \"/\" + \n        (\"00\" + (d.getMonth() + 1)).slice(-2) + \"/\" + \n        (d.getFullYear()) + \" \" + \n        (\"00\" + d.getHours()).slice(-2) + \":\" + \n        (\"00\" + d.getMinutes()).slice(-2) + \":\" + \n        (\"00\" + d.getSeconds()).slice(-2);\n    \n    msg.payload.push({\n            \"Time\":strdate,\n            \"CodeSig\":newMsg.payload[i].CodeSig,\n            \"Name\":newMsg.payload[i].Name,\n            \"Niveau\":newMsg.payload[i].Niveau,\n            \"Temperature\":newMsg.payload[i].Temperature,\n            \"Batterie\":newMsg.payload[i].Battery\n            })\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 100,
        "wires": [
            [
                "f9915f63.a1998"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "9326cba0.c05808",
        "type": "ui_chart",
        "z": "ad99b549.c0c208",
        "name": "Chart",
        "group": "3dc8a8e5.98d0d8",
        "order": 2,
        "width": 20,
        "height": 9,
        "label": "Graphique : Niveau pav en pourcentage",
        "chartType": "line",
        "legend": "true",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 510,
        "y": 620,
        "wires": [
            [
                "18d13886.2b8ef7"
            ]
        ]
    },
    {
        "id": "f9915f63.a1998",
        "type": "change",
        "z": "ad99b549.c0c208",
        "name": "ui_control",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{\"tabulator\":{\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.field});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"groupHeader\":\"function (value, count, data, group) {return value + \\\"<span style='color:#d00; margin-left:10px;'>(\\\" + count + \\\" Termostat\\\"+((count>1) ? \\\"e\\\" : \\\"\\\") + \\\")</span>\\\";}\",\"layout\":\"fitColumns\",\"columns\":[{\"formatter\":\"function(cell, formatterParams, onRendered){ return \\\"<i class='fa fa-map'></i>\\\";}\",\"width\":10,\"align\":\"center\",\"cellClick\":\"function(e,cell){var change = {newValue:cell.getValue()};this.send({topic:this.config.topic,payload:'change',tab:3,name:'Cartographie'}); return change;}\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Time\",\"field\":\"Time\",\"frozen\":false,\"sorter\":\"date\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"CodeSig\",\"field\":\"CodeSig\",\"headerFilter\":\"input\",\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Name\",\"field\":\"Name\",\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Mesures\",\"columns\":[{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"gray\",\"orange\",\"red\"],\"legend\":\"function (value) {return (value>0)? '&nbsp;&nbsp;'+value+' %' : '-';}\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Niveau\",\"field\":\"Niveau\",\"formatter\":\"progress\"},{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"steelblue\",\"orange\",\"red\"],\"legend\":\"function (value) {return value+' °C';}\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Temperature\",\"field\":\"Temperature\",\"formatter\":\"progress\"},{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) {return value+' %';}\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Batterie\",\"field\":\"Batterie\",\"formatter\":\"progress\"}]}],\"movableColumns\":true},\"customHeight\":12}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 100,
        "wires": [
            [
                "8594bd9f.c9156"
            ]
        ]
    },
    {
        "id": "5284744f.ab2bfc",
        "type": "sqlite",
        "z": "ad99b549.c0c208",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Level",
        "x": 330,
        "y": 580,
        "wires": [
            [
                "c10c5440.060158"
            ]
        ]
    },
    {
        "id": "c10c5440.060158",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "fill chart",
        "func": "/* Get data chart in array */\nvar msg1 = {};\nmsg1.payload = flow.get(\"chartarray\");\n\n/* Get new data in array */\nvar series = msg.payload[0].CodeSig;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].Time*1000) + ', \"y\":' + msg.payload[i].Niveau + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\nif(msg1.payload === undefined)\n{\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n}\n/* else add new data into chart */\nelse \n{\n    for(var k=0; k < msg1.payload[0].series.length ; k++) {\n        if(series === msg1.payload[0].series[k]) {\n            return;\n        }\n    }\n    \n    var chart = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":[\"\"]\n    }];\n    for(var j=0; j < msg1.payload[0].data.length ; j++) {\n        chart[0].series.push(msg1.payload[0].series[j]);\n        chart[0].data.push(msg1.payload[0].data[j]);\n    }\n    msg.payload = chart;\n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 580,
        "wires": [
            [
                "9326cba0.c05808"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "cbd39cb0.ec16c",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT Time,CodeSig,Niveau FROM Level WHERE CodeSig = \" + \"\\'\" + msg.payload.CodeSig + \"\\'\"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 580,
        "wires": [
            [
                "5284744f.ab2bfc"
            ]
        ]
    },
    {
        "id": "18d13886.2b8ef7",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "save chart",
        "func": "flow.set(\"chartarray\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 660,
        "wires": [
            [
                "fa04a342.a252d"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "572525bd.529c3c",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "flush chart",
        "func": "msg.payload = [];\nmsg.ui_control = {\"options\":{\"scales\":{\"xAxes\":[{\"type\":\"time\",\"time\":{}}]}}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 620,
        "wires": [
            [
                "9326cba0.c05808"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "ef807b40.f902a8",
        "type": "ui_button",
        "z": "ad99b549.c0c208",
        "name": "reset",
        "group": "3dc8a8e5.98d0d8",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Reset graphique",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 620,
        "wires": [
            [
                "572525bd.529c3c"
            ]
        ]
    },
    {
        "id": "71b30992.ba62f8",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "Query",
        "func": "\n\n\nvar newMsg = {\n \"topic\": \"WITH group1 AS (SELECT CodeSig,Battery FROM capteurs), \\\n           group2 AS (SELECT tt.* FROM Level tt INNER JOIN (SELECT CodeSig, MAX(Time) AS MaxDateTime FROM Level GROUP BY CodeSig) groupedtt  ON tt.CodeSig = groupedtt.CodeSig AND tt.Time = groupedtt.MaxDateTime) \\\n           SELECT * FROM group1 JOIN group2 ON group1.CodeSig = group2.CodeSig\"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "42b3a3b9.be892c"
            ]
        ]
    },
    {
        "id": "42b3a3b9.be892c",
        "type": "sqlite",
        "z": "ad99b549.c0c208",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Level",
        "x": 430,
        "y": 100,
        "wires": [
            [
                "db7a25be.6df258"
            ]
        ]
    },
    {
        "id": "1ae2bc54.a93d14",
        "type": "ui_text",
        "z": "ad99b549.c0c208",
        "group": "ed4b9a8a.b9eb38",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "CodeSig",
        "label": "Niveau Pav : ",
        "format": "{{msg.payload[0].CodeSig}}",
        "layout": "row-center",
        "x": 380,
        "y": 300,
        "wires": []
    },
    {
        "id": "208744f2.8c671c",
        "type": "sqlite",
        "z": "ad99b549.c0c208",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Alert/Level",
        "x": 170,
        "y": 280,
        "wires": [
            [
                "1ae2bc54.a93d14",
                "61274458.bd7a3c",
                "6031d9c2.e7e9f8",
                "312aeb7d.560b14"
            ]
        ]
    },
    {
        "id": "c0f513f5.60f7c",
        "type": "ui_template",
        "z": "ad99b549.c0c208",
        "group": "ed4b9a8a.b9eb38",
        "name": "Gauge",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div id=\"thermostat\"></div>\n\n<style>\n\n@import url(http://fonts.googleapis.com/css?family=Open+Sans:300);\n\n#thermostat {\n margin: 0 auto;\n -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\n.dial {\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n.dial.away .dial__ico__leaf {\n    visibility: hidden;\n}\n.dial.away .dial__lbl--target {\n    visibility: hidden;\n}\n.dial.away .dial__lbl--target--half {\n    visibility: hidden;\n}\n.dial.away .dial__lbl--away {\n    opacity: 1;\n}\n.dial .dial__shape {\n    -webkit-transition: fill 0.5s;\n    transition: fill 0.5s;\n}\n.dial path.dial__ico__leaf {\n    fill: #13EB13;\n    opacity: 0;\n    -webkit-transition: opacity 0.5s;\n    transition: opacity 0.5s;\n    pointer-events: none;\n}\n.dial.has-leaf .dial__ico__leaf {\n    display: block;\n    opacity: 1;\n    pointer-events: initial;\n}\n.dial__editableIndicator {\n    fill-rule: evenodd;\n    opacity: 0;\n    -webkit-transition: opacity 0.5s;\n    transition: opacity 0.5s;\n}\n.dial--edit path.dial__editableIndicator {\n    fill: white;\n}\n.dial--edit .dial__editableIndicator {\n    opacity: 1;\n}\n.dial--state--off .dial__shape {\n    fill: #3d3c3c;\n}\n.dial--state--heating .dial__shape {\n    fill: #E36304;\n}\n.dial--state--cooling .dial__shape {\n    fill: #007AF1;\n}\n.dial .dial__ticks path {\n    fill: rgba(255, 255, 255, 0.3);\n}\n.dial .dial__ticks path.active {\n    fill: rgba(255, 255, 255, 0.8);\n}\n.dial text {\n    fill: white;\n    text-anchor: middle;\n    font-family: Helvetica, sans-serif;\n    alignment-baseline: central;\n}\n.dial__lbl--target {\n    font-size: 120px;\n    font-weight: bold;\n}\n.dial__lbl--target--half {\n    font-size: 40px;\n    font-weight: bold;\n    opacity: 0;\n    -webkit-transition: opacity 0.1s;\n    transition: opacity 0.1s;\n}\n.dial__lbl--target--half.shown {\n    opacity: 1;\n    -webkit-transition: opacity 0s;\n    transition: opacity 0s;\n}\n.dial__lbl--ambient {\n    font-size: 22px;\n    font-weight: bold;\n}\n.dial__lbl--away {\n    font-size: 72px;\n    font-weight: bold;\n    opacity: 0;\n    pointer-events: none;\n}\n#controls {\n    font-family: Open Sans;\n    background-color: rgba(255, 255, 255, 0.25);\n    padding: 20px;\n    border-radius: 5px;\n    position: absolute;\n    left: 50%;\n    -webkit-transform: translatex(-50%);\n    transform: translatex(-50%);\n    margin-top: 20px;\n}\n#controls label {\n    text-align: left;\n    display: block;\n}\n#controls label span {\n    display: inline-block;\n    width: 200px;\n    text-align: right;\n    font-size: 0.8em;\n    text-transform: uppercase;\n}\n#controls p {\n    margin: 0;\n    margin-bottom: 1em;\n    padding-bottom: 1em;\n    border-bottom: 2px solid #ccc;\n}\n</style>\n<script>\n    var thermostatDial = (function() {\n\t\n\t/*\n\t * Utility functions\n\t */\n\t\n\t// Create an element with proper SVG namespace, optionally setting its attributes and appending it to another element\n\tfunction createSVGElement(tag,attributes,appendTo) {\n\t\tvar element = document.createElementNS('http://www.w3.org/2000/svg',tag);\n\t\tattr(element,attributes);\n\t\tif (appendTo) {\n\t\t\tappendTo.appendChild(element);\n\t\t}\n\t\treturn element;\n\t}\n\t\n\t// Set attributes for an element\n\tfunction attr(element,attrs) {\n\t\tfor (var i in attrs) {\n\t\t\telement.setAttribute(i,attrs[i]);\n\t\t}\n\t}\n\t\n\t// Rotate a cartesian point about given origin by X degrees\n\tfunction rotatePoint(point, angle, origin) {\n\t\tvar radians = angle * Math.PI/180;\n\t\tvar x = point[0]-origin[0];\n\t\tvar y = point[1]-origin[1];\n\t\tvar x1 = x*Math.cos(radians) - y*Math.sin(radians) + origin[0];\n\t\tvar y1 = x*Math.sin(radians) + y*Math.cos(radians) + origin[1];\n\t\treturn [x1,y1];\n\t}\n\t\n\t// Rotate an array of cartesian points about a given origin by X degrees\n\tfunction rotatePoints(points, angle, origin) {\n\t\treturn points.map(function(point) {\n\t\t\treturn rotatePoint(point, angle, origin);\n\t\t});\n\t}\n\t\n\t// Given an array of points, return an SVG path string representing the shape they define\n\tfunction pointsToPath(points) {\n\t\treturn points.map(function(point, iPoint) {\n\t\t\treturn (iPoint>0?'L':'M') + point[0] + ' ' + point[1];\n\t\t}).join(' ')+'Z';\n\t}\n\t\n\tfunction circleToPath(cx, cy, r) {\n\t\treturn [\n\t\t\t\"M\",cx,\",\",cy,\n\t\t\t\"m\",0-r,\",\",0,\n\t\t\t\"a\",r,\",\",r,0,1,\",\",0,r*2,\",\",0,\n\t\t\t\"a\",r,\",\",r,0,1,\",\",0,0-r*2,\",\",0,\n\t\t\t\"z\"\n\t\t].join(' ').replace(/\\s,\\s/g,\",\");\n\t}\n\t\n\tfunction donutPath(cx,cy,rOuter,rInner) {\n\t\treturn circleToPath(cx,cy,rOuter) + \" \" + circleToPath(cx,cy,rInner);\n\t}\n\t\n\t// Restrict a number to a min + max range\n\tfunction restrictToRange(val,min,max) {\n\t\tif (val < min) return min;\n\t\tif (val > max) return max;\n\t\treturn val;\n\t}\n\t\n\t// Round a number to the nearest 0.5\n\tfunction roundHalf(num) {\n\t\treturn Math.round(num*2)/2;\n\t}\n\t\n\tfunction setClass(el, className, state) {\n\t\tel.classList[state ? 'add' : 'remove'](className);\n\t}\n\t\n\t/*\n\t * The \"MEAT\"\n\t */\n\n\treturn function(targetElement, options) {\n\t\tvar self = this;\n\t\t\n\t\t/*\n\t\t * Options\n\t\t */\n\t\toptions = options || {};\n\t\toptions = {\n\t\t\tdiameter: options.diameter || 400,\n\t\t\tminValue: options.minValue || 0, // Minimum value for target temperature\n\t\t\tmaxValue: options.maxValue || 100, // Maximum value for target temperature\n\t\t\tnumTicks: options.numTicks || 100, // Number of tick lines to display around the dial\n\t\t\tonSetTargetTemperature: options.onSetTargetTemperature || function() {}, // Function called when new target temperature set by the dial\n\t\t};\n\t\t\n\t\t/*\n\t\t * Properties - calculated from options in many cases\n\t\t */\n\t\tvar properties = {\n\t\t\ttickDegrees: 300, // Degrees of the dial that should be covered in tick lines\n\t\t\trangeValue: options.maxValue - options.minValue,\n\t\t\tradius: options.diameter/2,\n\t\t\tticksOuterRadius: options.diameter / 30,\n\t\t\tticksInnerRadius: options.diameter / 8,\n\t\t\thvac_states: ['off', 'heating', 'cooling'],\n\t\t\tdragLockAxisDistance: 15,\n\t\t}\n\t\tproperties.lblAmbientPosition = [properties.radius, properties.ticksOuterRadius-(properties.ticksOuterRadius-properties.ticksInnerRadius)/2]\n\t\tproperties.offsetDegrees = 180-(360-properties.tickDegrees)/2;\n\t\t\n\t\t/*\n\t\t * Object state\n\t\t */\n\t\tvar state = {\n\t\t\ttarget_temperature: options.minValue,\n\t\t\tambient_temperature: options.minValue,\n\t\t\thvac_state: properties.hvac_states[0],\n\t\t\thas_leaf: false,\n\t\t\taway: false\n\t\t};\n\t\t\n\t\t/*\n\t\t * Property getter / setters\n\t\t */\n\t\tObject.defineProperty(this,'target_temperature',{\n\t\t\tget: function() {\n\t\t\t\treturn state.target_temperature;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tstate.target_temperature = restrictTargetTemperature(+val);\n\t\t\t\trender();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(this,'ambient_temperature',{\n\t\t\tget: function() {\n\t\t\t\treturn state.ambient_temperature;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tstate.ambient_temperature = roundHalf(+val);\n\t\t\t\trender();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(this,'hvac_state',{\n\t\t\tget: function() {\n\t\t\t\treturn state.hvac_state;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tif (properties.hvac_states.indexOf(val)>=0) {\n\t\t\t\t\tstate.hvac_state = val;\n\t\t\t\t\trender();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tfunction str2bool(strvalue){\n          return (strvalue && typeof strvalue == 'string') ? (strvalue.toLowerCase() == 'true') : (strvalue == true);\n        }\n\t\tObject.defineProperty(this,'has_leaf',{\n\t\t\tget: function() {\n\t\t\t\treturn state.has_leaf;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tstate.has_leaf = !!str2bool(val);\n\t\t\t\trender();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(this,'away',{\n\t\t\tget: function() {\n\t\t\t\treturn state.away;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tstate.away = !!str2bool(val);\n\t\t\t\trender();\n\t\t\t}\n\t\t});\n\t\t\n\t\t/*\n\t\t * SVG\n\t\t */\n\t\tvar svg = createSVGElement('svg',{\n\t\t\twidth: '100%', //options.diameter+'px',\n\t\t\theight: '100%', //options.diameter+'px',\n\t\t\tviewBox: '0 0 '+options.diameter+' '+options.diameter,\n\t\t\tclass: 'dial'\n\t\t},targetElement);\n\t\t// CIRCULAR DIAL\n\t\tvar circle = createSVGElement('circle',{\n\t\t\tcx: properties.radius,\n\t\t\tcy: properties.radius,\n\t\t\tr: properties.radius,\n\t\t\tclass: 'dial__shape'\n\t\t},svg);\n\t\t// EDITABLE INDICATOR\n\t\tvar editCircle = createSVGElement('path',{\n\t\t\td: donutPath(properties.radius,properties.radius,properties.radius-4,properties.radius-8),\n\t\t\tclass: 'dial__editableIndicator',\n\t\t},svg);\n\t\t\n\t\t/*\n\t\t * Ticks\n\t\t */\n\t\tvar ticks = createSVGElement('g',{\n\t\t\tclass: 'dial__ticks'\t\n\t\t},svg);\n\t\tvar tickPoints = [\n\t\t\t[properties.radius-1, properties.ticksOuterRadius],\n\t\t\t[properties.radius+1, properties.ticksOuterRadius],\n\t\t\t[properties.radius+1, properties.ticksInnerRadius],\n\t\t\t[properties.radius-1, properties.ticksInnerRadius]\n\t\t];\n\t\tvar tickPointsLarge = [\n\t\t\t[properties.radius-1.5, properties.ticksOuterRadius],\n\t\t\t[properties.radius+1.5, properties.ticksOuterRadius],\n\t\t\t[properties.radius+1.5, properties.ticksInnerRadius+20],\n\t\t\t[properties.radius-1.5, properties.ticksInnerRadius+20]\n\t\t];\n\t\tvar theta = properties.tickDegrees/options.numTicks;\n\t\tvar tickArray = [];\n\t\tfor (var iTick=0; iTick<options.numTicks; iTick++) {\n\t\t\ttickArray.push(createSVGElement('path',{d:pointsToPath(tickPoints)},ticks));\n\t\t};\n\t\t\n\t\t/*\n\t\t * Labels\n\t\t */\n\t\tvar lblTarget = createSVGElement('text',{\n\t\t\tx: properties.radius,\n\t\t\ty: properties.radius,\n\t\t\tclass: 'dial__lbl dial__lbl--target'\n\t\t},svg);\n\t\tvar lblTarget_text = document.createTextNode('');\n\t\tlblTarget.appendChild(lblTarget_text);\n\t\t//\n\t\tvar lblTargetHalf = createSVGElement('text',{\n\t\t\tx: properties.radius + properties.radius/2.5,\n\t\t\ty: properties.radius - properties.radius/8,\n\t\t\tclass: 'dial__lbl dial__lbl--target--half'\n\t\t},svg);\n\t\tvar lblTargetHalf_text = document.createTextNode('5');\n\t\tlblTargetHalf.appendChild(lblTargetHalf_text);\n\t\t//\n\t\tvar lblAmbient = createSVGElement('text',{\n\t\t\tclass: 'dial__lbl dial__lbl--ambient'\n\t\t},svg);\n\t\tvar lblAmbient_text = document.createTextNode('');\n\t\tlblAmbient.appendChild(lblAmbient_text);\n\t\t//\n\t\tvar lblAway = createSVGElement('text',{\n\t\t\tx: properties.radius,\n\t\t\ty: properties.radius,\n\t\t\tclass: 'dial__lbl dial__lbl--away'\n\t\t},svg);\n\t\tvar lblAway_text = document.createTextNode('AWAY');\n\t\tlblAway.appendChild(lblAway_text);\n\t\t//\n\t\tvar icoLeaf = createSVGElement('path',{\n\t\t\tclass: 'dial__ico__leaf'\n\t\t},svg);\n\t\t\n\t\t/*\n\t\t * LEAF\n\t\t */\n\t\tvar leafScale = properties.radius/5/100;\n\t\tvar leafDef = [\"M\", 3, 84, \"c\", 24, 17, 51, 18, 73, -6, \"C\", 100, 52, 100, 22, 100, 4, \"c\", -13, 15, -37, 9, -70, 19, \"C\", 4, 32, 0, 63, 0, 76, \"c\", 6, -7, 18, -17, 33, -23, 24, -9, 34, -9, 48, -20, -9, 10, -20, 16, -43, 24, \"C\", 22, 63, 8, 78, 3, 84, \"z\"].map(function(x) {\n\t\t\treturn isNaN(x) ? x : x*leafScale;\n\t\t}).join(' ');\n\t\tvar translate = [properties.radius-(leafScale*100*0.5),properties.radius*1.5]\n\t\tvar icoLeaf = createSVGElement('path',{\n\t\t\tclass: 'dial__ico__leaf',\n\t\t\td: leafDef,\n\t\t\ttransform: 'translate('+translate[0]+','+translate[1]+')'\n\t\t},svg);\n\t\t\t\n\t\t/*\n\t\t * RENDER\n\t\t */\n\t\tfunction render() {\n\t\t\trenderAway();\n\t\t\trenderHvacState();\n\t\t\trenderTicks();\n\t\t\trenderTargetTemperature();\n\t\t\trenderAmbientTemperature();\n\t\t\trenderLeaf();\n\t\t}\n\t\trender();\n\n\t\t/*\n\t\t * RENDER - ticks\n\t\t */\n\t\tfunction renderTicks() {\n\t\t\tvar vMin, vMax;\n\t\t\tif (self.away) {\n\t\t\t\tvMin = self.ambient_temperature;\n\t\t\t\tvMax = vMin;\n\t\t\t} else {\n\t\t\t\tvMin = Math.min(self.ambient_temperature, self.target_temperature);\n\t\t\t\tvMax = Math.max(self.ambient_temperature, self.target_temperature);\n\t\t\t}\n\t\t\tvar min = restrictToRange(Math.round((vMin-options.minValue)/properties.rangeValue * options.numTicks),0,options.numTicks-1);\n\t\t\tvar max = restrictToRange(Math.round((vMax-options.minValue)/properties.rangeValue * options.numTicks),0,options.numTicks-1);\n\t\t\t//\n\t\t\ttickArray.forEach(function(tick,iTick) {\n\t\t\t\tvar isLarge = iTick==min || iTick==max;\n\t\t\t\tvar isActive = iTick >= min && iTick <= max;\n\t\t\t\tattr(tick,{\n\t\t\t\t\td: pointsToPath(rotatePoints(isLarge ? tickPointsLarge: tickPoints,iTick*theta-properties.offsetDegrees,[properties.radius, properties.radius])),\n\t\t\t\t\tclass: isActive ? 'active' : ''\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\n\t\t/*\n\t\t * RENDER - ambient temperature\n\t\t */\n\t\tfunction renderAmbientTemperature() {\n\t\t\tlblAmbient_text.nodeValue = Math.floor(self.ambient_temperature);\n\t\t\tif (self.ambient_temperature%1!=0) {\n\t\t\t\tlblAmbient_text.nodeValue += '⁵';\n\t\t\t}\n\t\t\tvar peggedValue = restrictToRange(self.ambient_temperature, options.minValue, options.maxValue);\n\t\t\tdegs = properties.tickDegrees * (peggedValue-options.minValue)/properties.rangeValue - properties.offsetDegrees;\n\t\t\tif (peggedValue > self.target_temperature) {\n\t\t\t\tdegs += 8;\n\t\t\t} else {\n\t\t\t\tdegs -= 8;\n\t\t\t}\n\t\t\tvar pos = rotatePoint(properties.lblAmbientPosition,degs,[properties.radius, properties.radius]);\n\t\t\tattr(lblAmbient,{\n\t\t\t\tx: pos[0],\n\t\t\t\ty: pos[1]\n\t\t\t});\n\t\t}\n\n\t\t/*\n\t\t * RENDER - target temperature\n\t\t */\n\t\tfunction renderTargetTemperature() {\n\t\t\tlblTarget_text.nodeValue = Math.floor(self.target_temperature);\n\t\t\tsetClass(lblTargetHalf,'shown',self.target_temperature%1!=0);\n\t\t}\n\t\t\n\t\t/*\n\t\t * RENDER - leaf\n\t\t */\n\t\tfunction renderLeaf() {\n\t\t\tsetClass(svg,'has-leaf',self.has_leaf);\n\t\t}\n\t\t\n\t\t/*\n\t\t * RENDER - HVAC state\n\t\t */\n\t\tfunction renderHvacState() {\n\t\t\tArray.prototype.slice.call(svg.classList).forEach(function(c) {\n\t\t\t\tif (c.match(/^dial--state--/)) {\n\t\t\t\t\tsvg.classList.remove(c);\n\t\t\t\t};\n\t\t\t});\n\t\t\tsvg.classList.add('dial--state--'+self.hvac_state);\n\t\t}\n\t\t\n\t\t/*\n\t\t * RENDER - away\n\t\t */\n\t\tfunction renderAway() {\n\t\t\tsvg.classList[self.away ? 'add' : 'remove']('away');\n\t\t}\n\t\t\n\t\t/*\n\t\t * Drag to control\n\t\t */\n\t\tvar _drag = {\n\t\t\tinProgress: false,\n\t\t\tstartPoint: null,\n\t\t\tstartTemperature: 0,\n\t\t\tlockAxis: undefined\n\t\t};\n\t\t\n\t\tfunction eventPosition(ev) {\n\t\t\tif (ev.targetTouches && ev.targetTouches.length) {\n\t\t\t\treturn [ev.targetTouches[0].clientX, ev.targetTouches[0].clientY];\n\t\t\t} else {\n\t\t\t\treturn [ev.x, ev.y];\n\t\t\t};\n\t\t}\n\t\t\n\t\tvar startDelay;\n\t\tfunction dragStart(ev) {\n\t\t\tstartDelay = setTimeout(function() {\n\t\t\t\tsetClass(svg, 'dial--edit', true);\n\t\t\t\t_drag.inProgress = true;\n\t\t\t\t_drag.startPoint = eventPosition(ev);\n\t\t\t\t_drag.startTemperature = self.target_temperature || options.minValue;\n\t\t\t\t_drag.lockAxis = undefined;\n\t\t\t},1000);\n\t\t};\n\t\t\n\t\tfunction dragEnd (ev) {\n\t\t\tclearTimeout(startDelay);\n\t\t\tsetClass(svg, 'dial--edit', false);\n\t\t\tif (!_drag.inProgress) return;\n\t\t\t_drag.inProgress = false;\n\t\t\tif (self.target_temperature != _drag.startTemperature) {\n\t\t\t\tif (typeof options.onSetTargetTemperature == 'function') {\n\t\t\t\t\toptions.onSetTargetTemperature(self.target_temperature);\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\t\n\t\tfunction dragMove(ev) {\n\t\t\tev.preventDefault();\n\t\t\tif (!_drag.inProgress) return;\n\t\t\tvar evPos = eventPosition(ev);\n\t\t\tvar dy = _drag.startPoint[1]-evPos[1];\n\t\t\tvar dx = evPos[0] - _drag.startPoint[0];\n\t\t\tvar dxy;\n\t\t\tif (_drag.lockAxis == 'x') {\n\t\t\t\tdxy = dx;\n\t\t\t} else if (_drag.lockAxis == 'y') {\n\t\t\t\tdxy = dy;\n\t\t\t} else if (Math.abs(dy) > properties.dragLockAxisDistance) {\n\t\t\t\t_drag.lockAxis = 'y';\n\t\t\t\tdxy = dy;\n\t\t\t} else if (Math.abs(dx) > properties.dragLockAxisDistance) {\n\t\t\t\t_drag.lockAxis = 'x';\n\t\t\t\tdxy = dx;\n\t\t\t} else {\n\t\t\t\tdxy = (Math.abs(dy) > Math.abs(dx)) ? dy : dx;\n\t\t\t};\n\t\t\tvar dValue = (dxy*getSizeRatio())/(options.diameter)*properties.rangeValue;\n\t\t\tself.target_temperature = roundHalf(_drag.startTemperature+dValue);\n\t\t}\n\t\t\n\t\tsvg.addEventListener('mousedown',dragStart);\n\t\tsvg.addEventListener('touchstart',dragStart);\n\t\t\n\t\tsvg.addEventListener('mouseup',dragEnd);\n\t\tsvg.addEventListener('mouseleave',dragEnd);\n\t\tsvg.addEventListener('touchend',dragEnd);\n\t\t\n\t\tsvg.addEventListener('mousemove',dragMove);\n\t\tsvg.addEventListener('touchmove',dragMove);\n\t\t//\n\t\t\n\t\t/*\n\t\t * Helper functions\n\t\t */\n\t\tfunction restrictTargetTemperature(t) {\n\t\t\treturn restrictToRange(roundHalf(t),options.minValue,options.maxValue);\n\t\t}\n\t\t\n\t\tfunction angle(point) {\n\t\t\tvar dx = point[0] - properties.radius;\n\t\t\tvar dy = point[1] - properties.radius;\n\t\t\tvar theta = Math.atan(dx/dy) / (Math.PI/180);\n\t\t\tif (point[0]>=properties.radius && point[1] < properties.radius) {\n\t\t\t\ttheta = 90-theta - 90;\n\t\t\t} else if (point[0]>=properties.radius && point[1] >= properties.radius) {\n\t\t\t\ttheta = 90-theta + 90;\n\t\t\t} else if (point[0]<properties.radius && point[1] >= properties.radius) {\n\t\t\t\ttheta = 90-theta + 90;\n\t\t\t} else if (point[0]<properties.radius && point[1] < properties.radius) {\n\t\t\t\ttheta = 90-theta+270;\n\t\t\t}\n\t\t\treturn theta;\n\t\t};\n\t\t\n\t\tfunction getSizeRatio() {\n\t\t\treturn options.diameter / targetElement.clientWidth;\n\t\t}\n\t\t\n\t};\n})();\n\n/* ==== */\nvar initializing = true;\n\n(function(scope) {\n    var nest = new thermostatDial(document.getElementById('thermostat'),{\n    \tonSetTargetTemperature: function(v) {\n    \t    var p = {\n    \t        \"ambient_temperature\":nest.ambient_temperature,\n    \t        \"target_temperature\":v,\n    \t        \"hvac_state\":nest.hvac_state,\n    \t        \"has_leaf\": nest.has_leaf,\n    \t        \"away\":nest.away\n    \t    };\n    \t\tscope.send({topic: \"target_temperature\", payload: p});\n    \t}\n    });\n    \n    scope.$watch('msg', function(data) {\n        if (initializing) {\n            initializing = false;\n            } else {\n            nest.ambient_temperature = data.payload.ambient_temperature || 0;\n            nest.target_temperature = data.payload.target_temperature || 0;\n            nest.hvac_state = data.payload.hvac_state || \"off\";\n            nest.has_leaf = data.payload.has_leaf || false;\n            nest.away = data.payload.away || false;\n        }\n        \n    });\n})(scope);\n\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 730,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "41e08743.e36008",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "alerte",
        "func": "msg.topic = 'ambient_temperature';\nglobal.set(\"nest1_ambient_temperature\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 340,
        "wires": [
            [
                "6df84498.e41d8c",
                "63b5f771.2e1638"
            ]
        ]
    },
    {
        "id": "6031d9c2.e7e9f8",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "target_temperature",
        "func": "msg.topic = 'target_temperature';\nglobal.set(\"nest1_target_temperature\",msg.payload[0].Niveau);\nglobal.set(\"nest1_ambient_temperature\",msg.payload[0].Alert);\nglobal.set(\"CodeSig_for_Alert\",msg.payload[0].CodeSig);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 340,
        "wires": [
            [
                "6df84498.e41d8c"
            ]
        ]
    },
    {
        "id": "6df84498.e41d8c",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "Data",
        "func": "if (msg.topic == \"target_temperature\") {\n    //global.set(\"nest1_target_temperature\",msg.payload);\n}\n\nif(global.get(\"nest1_ambient_temperature\") < global.get(\"nest1_target_temperature\")) {\n    global.set(\"nest1_hvac_state\",\"heating\");\n}\nelse {\n    global.set(\"nest1_hvac_state\",\"cooling\");\n}\n    \n    \nmsg.topic = \"update\";\nvar data = {\n    'ambient_temperature': global.get(\"nest1_ambient_temperature\"),\n    'target_temperature': global.get(\"nest1_target_temperature\"),\n    'hvac_state': global.get(\"nest1_hvac_state\") || 'off',\n    'has_leaf': global.get(\"nest1_has_leaf\") || 'false',\n    'away': global.get(\"nest1_away\") || 'false'\n}\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 380,
        "wires": [
            [
                "c0f513f5.60f7c"
            ]
        ]
    },
    {
        "id": "a004bd5b.fa493",
        "type": "ui_slider",
        "z": "ad99b549.c0c208",
        "name": "",
        "label": "Alerte",
        "tooltip": "",
        "group": "ed4b9a8a.b9eb38",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 590,
        "y": 220,
        "wires": [
            [
                "64a213da.f4f4ec"
            ]
        ]
    },
    {
        "id": "298a21c9.c3f38e",
        "type": "ui_button",
        "z": "ad99b549.c0c208",
        "name": "Valide",
        "group": "ed4b9a8a.b9eb38",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Valider le seuil d'alerte",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "textInput",
        "payloadType": "flow",
        "topic": "",
        "x": 590,
        "y": 300,
        "wires": [
            [
                "41e08743.e36008",
                "590bb0b9.c4c01"
            ]
        ]
    },
    {
        "id": "64a213da.f4f4ec",
        "type": "change",
        "z": "ad99b549.c0c208",
        "name": "Change",
        "rules": [
            {
                "t": "set",
                "p": "textInput",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 260,
        "wires": [
            [
                "298a21c9.c3f38e"
            ]
        ]
    },
    {
        "id": "61274458.bd7a3c",
        "type": "change",
        "z": "ad99b549.c0c208",
        "name": "set temp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 260,
        "wires": [
            [
                "623f13ac.f4971c"
            ]
        ]
    },
    {
        "id": "590bb0b9.c4c01",
        "type": "ui_toast",
        "z": "ad99b549.c0c208",
        "position": "top left",
        "displayTime": "2",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Sauvegarde de l'alerte en cours...",
        "name": "",
        "x": 770,
        "y": 300,
        "wires": []
    },
    {
        "id": "f681939d.64756",
        "type": "change",
        "z": "ad99b549.c0c208",
        "name": "ui_control",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{\"tabulator\":{\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.field});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"groupHeader\":\"function (value, count, data, group) {return value + \\\"<span style='color:#d00; margin-left:10px;'>(\\\" + count + \\\" Termostat\\\"+((count>1) ? \\\"e\\\" : \\\"\\\") + \\\")</span>\\\";}\",\"layout\":\"fitColumns\",\"columns\":[{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Time\",\"field\":\"Time\",\"frozen\":false},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"CodeSig\",\"field\":\"CodeSig\",\"headerFilter\":\"input\",\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Niveau\",\"field\":\"Niveau\",\"align\":\"center\"}],\"movableColumns\":true,\"groupBy\":\"\"},\"customHeight\":24}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 940,
        "wires": [
            [
                "291c859e.45942a"
            ]
        ]
    },
    {
        "id": "2d7cef06.bfbac",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "flush table",
        "func": "flow.set(\"Alerttable2\", undefined);\nglobal.set(\"Alerttable2\", undefined);\n\nmsg.payload = [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 900,
        "wires": [
            [
                "f681939d.64756"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "63b5f771.2e1638",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "Query",
        "func": "\n\n\n\nvar newMsg = {\n \"topic\": \n\"INSERT OR REPLACE INTO Alert (CodeSig, Alert) VALUES ('\" + global.get(\"CodeSig_for_Alert\") + \"',\" +\nglobal.get(\"nest1_ambient_temperature\") + \"); \" \n \n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 340,
        "wires": [
            [
                "7ee7be60.de1b1"
            ]
        ]
    },
    {
        "id": "7ee7be60.de1b1",
        "type": "sqlite",
        "z": "ad99b549.c0c208",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Alert",
        "x": 890,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "58f3fe8b.ea7e5",
        "type": "inject",
        "z": "ad99b549.c0c208",
        "name": "refresh",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "71b30992.ba62f8",
                "4e5ecf04.a50ce"
            ]
        ]
    },
    {
        "id": "f66829a1.028c78",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "Select",
        "func": "var newMsg = {\n  \"topic\": \"SELECT MAX(Time),Niveau,Temperature,Level.CodeSig, Alert FROM Level LEFT JOIN Alert ON (Alert.CodeSig = Level.CodeSig) WHERE Level.CodeSig = \" + \"\\'\" + msg.payload.CodeSig + \"\\'\" + \";\"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 320,
        "wires": [
            [
                "208744f2.8c671c"
            ]
        ]
    },
    {
        "id": "da21fce7.53324",
        "type": "ui_button",
        "z": "ad99b549.c0c208",
        "name": "reset",
        "group": "34eb7bc9.9b5834",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Reset liste d'alerte",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 310,
        "y": 940,
        "wires": [
            [
                "2d7cef06.bfbac"
            ]
        ]
    },
    {
        "id": "623f13ac.f4971c",
        "type": "ui_artlessgauge",
        "z": "ad99b549.c0c208",
        "group": "ed4b9a8a.b9eb38",
        "order": 5,
        "width": 4,
        "height": 4,
        "name": "",
        "icon": "fa-fire",
        "label": "Temperature",
        "unit": "°C",
        "layout": "radial",
        "decimals": 0,
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload",
        "sectors": [
            {
                "val": -10,
                "col": "#6d68d7",
                "t": "min",
                "dot": 0
            },
            {
                "val": 5,
                "col": "#ffc9ae",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 20,
                "col": "#ff9b9b",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 50,
                "col": "#ff4848",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 78,
                "col": "#cc0000",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#cc0000",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 400,
        "y": 220,
        "wires": []
    },
    {
        "id": "8594bd9f.c9156",
        "type": "ui_table",
        "z": "ad99b549.c0c208",
        "group": "3dc8a8e5.98d0d8",
        "name": "Table",
        "order": 1,
        "width": 20,
        "height": 5,
        "columns": [],
        "outputs": 1,
        "cts": true,
        "x": 870,
        "y": 100,
        "wires": [
            [
                "26844ec0.71a612"
            ]
        ]
    },
    {
        "id": "291c859e.45942a",
        "type": "ui_table",
        "z": "ad99b549.c0c208",
        "group": "34eb7bc9.9b5834",
        "name": "Alerte",
        "order": 1,
        "width": 6,
        "height": 14,
        "columns": [],
        "outputs": 1,
        "cts": true,
        "x": 690,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "4160ff7f.2509f",
        "type": "mqtt in",
        "z": "ad99b549.c0c208",
        "d": true,
        "name": "",
        "topic": "maj",
        "qos": "2",
        "datatype": "auto",
        "broker": "f5ac79fa.1c2f28",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "71b30992.ba62f8",
                "4e5ecf04.a50ce"
            ]
        ]
    },
    {
        "id": "f16d757c.173dd8",
        "type": "comment",
        "z": "ad99b549.c0c208",
        "name": "ALERTE",
        "info": "",
        "x": 100,
        "y": 780,
        "wires": []
    },
    {
        "id": "88251270.c95b8",
        "type": "comment",
        "z": "ad99b549.c0c208",
        "name": "CHART",
        "info": "",
        "x": 90,
        "y": 520,
        "wires": []
    },
    {
        "id": "26844ec0.71a612",
        "type": "link out",
        "z": "ad99b549.c0c208",
        "name": "for_chart",
        "links": [
            "ed343287.3d3df",
            "61ce46d7.beb838",
            "7da09d28.58d944",
            "fa101440.8632a8",
            "a3e743bb.cf67e",
            "2cc622fe.92a9ee"
        ],
        "x": 955,
        "y": 100,
        "wires": []
    },
    {
        "id": "ed343287.3d3df",
        "type": "link in",
        "z": "ad99b549.c0c208",
        "name": "for_chart_chart",
        "links": [
            "26844ec0.71a612",
            "25861aa.bde60e6",
            "13642056.c01d"
        ],
        "x": 75,
        "y": 580,
        "wires": [
            [
                "cbd39cb0.ec16c"
            ]
        ]
    },
    {
        "id": "625d0554.77dc0c",
        "type": "comment",
        "z": "ad99b549.c0c208",
        "name": "TABLE ",
        "info": "",
        "x": 90,
        "y": 20,
        "wires": []
    },
    {
        "id": "312aeb7d.560b14",
        "type": "debug",
        "z": "ad99b549.c0c208",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 390,
        "y": 380,
        "wires": []
    },
    {
        "id": "f0727b46.1b0738",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "Select",
        "func": "var newMsg = {\n  \"topic\": \"SELECT MAX(Time),Niveau,Temperature,Level.CodeSig, Alert FROM Level LEFT JOIN Alert ON (Alert.CodeSig = Level.CodeSig) WHERE Level.CodeSig = \" + \"\\'\" + msg.payload.CodeSig + \"\\'\" + \";\"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 130,
        "y": 940,
        "wires": [
            [
                "900f32a3.1f74e"
            ]
        ]
    },
    {
        "id": "900f32a3.1f74e",
        "type": "sqlite",
        "z": "ad99b549.c0c208",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Alert/Level",
        "x": 330,
        "y": 860,
        "wires": [
            [
                "5b5884c7.89b22c"
            ]
        ]
    },
    {
        "id": "672785d5.47b6dc",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "Update Array",
        "func": "var d = new Date((msg.payload[0][\"MAX(Time)\"])*1000);\nvar strdate =  (\"00\" + d.getDate()).slice(-2) + \"/\" + \n        (\"00\" + (d.getMonth() + 1)).slice(-2) + \"/\" + \n        (d.getFullYear()) + \" \" + \n        (\"00\" + d.getHours()).slice(-2) + \":\" + \n        (\"00\" + d.getMinutes()).slice(-2) + \":\" + \n        (\"00\" + d.getSeconds()).slice(-2);\n\n\nvar newMsg = { \n    \"Time\":strdate,\n    \"CodeSig\":msg.payload[0].CodeSig,\n    \"Niveau\":msg.payload[0].Niveau\n    \n}\n\nvar arr = flow.get(\"Alerttable2\") || [];\n\n// Position is the index of element in the array\n// If element is not in the table it will be add to the end \n\n//let pos = arr.indexOf(pay);\n//if (pos == -1) { arr.push(pay)} else {arr.splice(pos, 1);}\n\n\narr.push(newMsg);\nflow.set(\"Alerttable2\",arr);\nmsg.payload = [...arr];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 900,
        "wires": [
            [
                "f681939d.64756"
            ]
        ]
    },
    {
        "id": "5f0d984b.4c6f08",
        "type": "json",
        "z": "ad99b549.c0c208",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 130,
        "y": 900,
        "wires": [
            [
                "f0727b46.1b0738"
            ]
        ]
    },
    {
        "id": "5b5884c7.89b22c",
        "type": "switch",
        "z": "ad99b549.c0c208",
        "name": "",
        "property": "payload[0].Niveau",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "payload[0].Alert",
                "vt": "msg"
            },
            {
                "t": "gt",
                "v": "payload[0].Alert",
                "vt": "msg"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 860,
        "wires": [
            [],
            [
                "672785d5.47b6dc",
                "2f987dc8.aaf3f2"
            ]
        ]
    },
    {
        "id": "972dd927.5a6148",
        "type": "debug",
        "z": "ad99b549.c0c208",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 330,
        "y": 820,
        "wires": []
    },
    {
        "id": "2f987dc8.aaf3f2",
        "type": "debug",
        "z": "ad99b549.c0c208",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 710,
        "y": 880,
        "wires": []
    },
    {
        "id": "edc75aaa.f77cd8",
        "type": "delay",
        "z": "ad99b549.c0c208",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 120,
        "y": 860,
        "wires": [
            [
                "5f0d984b.4c6f08"
            ]
        ]
    },
    {
        "id": "1d5b36eb.96c5a9",
        "type": "comment",
        "z": "ad99b549.c0c208",
        "name": "download file",
        "info": "",
        "x": 750,
        "y": 500,
        "wires": []
    },
    {
        "id": "20367715.b97b68",
        "type": "sqlite",
        "z": "ad99b549.c0c208",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Level",
        "x": 970,
        "y": 700,
        "wires": [
            [
                "b6350916.fa7798"
            ]
        ]
    },
    {
        "id": "b6350916.fa7798",
        "type": "alafile out",
        "z": "ad99b549.c0c208",
        "name": "export_v2",
        "filename": "/data/export_file",
        "format": "xlsx",
        "columns": "*",
        "headers": true,
        "x": 1100,
        "y": 700,
        "wires": []
    },
    {
        "id": "e035130.f2c4df",
        "type": "ui_template",
        "z": "ad99b549.c0c208",
        "group": "3dc8a8e5.98d0d8",
        "name": "export",
        "order": 7,
        "width": 6,
        "height": 1,
        "format": "\n<style>\n/* instead of current */\n.my_button {\n    height: 70%;\n  width: 70%;\n}\n.link {\n      height: 100%;\n  width: 100%;\n}\n/* add wrapper */\n.my_div {     \n  height: 100%;\n  width: 100%;\n}\n</style>\n\n<div class=\"my_div\">\n    <a class =\"link\" href=\"/data/export_file.xlsx\">\n        <md-button class=\"my_button\" ng-click=\"send({topic:'clicked', payload:'button was clicked', 'data-action':'save'})\">Export</md-button>\n    </a>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 730,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "567a13dd.41b5ac",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "Set base path",
        "func": "//restrict to c:\\temp\\\nvar basePath = \"/data/\";\n//var filename = msg.req.params.fn;\nvar filename = \"export_file.xlsx\";\n/*\nif(filename.includes(\"..\\\\\")){\n    msg.payload = \"Illegal file path\";\n    msg.statusCode = 405;//not allowed\n    return [null, msg];//fire output 2\n} else if(filename.includes(\"../\")){\n    msg.payload = \"Illegal file path\";\n    msg.statusCode = 405;//not allowed\n    return [null, msg];//fire output 2\n} */\n//TODO: add more checks\n\nmsg.filename = basePath + filename ;\nreturn [msg, null];//fire output 1\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "x": 900,
        "y": 580,
        "wires": [
            [
                "664af0fe.bf387"
            ],
            [
                "4f222e2f.675fa"
            ]
        ]
    },
    {
        "id": "4f222e2f.675fa",
        "type": "http response",
        "z": "ad99b549.c0c208",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1110,
        "y": 620,
        "wires": []
    },
    {
        "id": "664af0fe.bf387",
        "type": "file in",
        "z": "ad99b549.c0c208",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 930,
        "y": 540,
        "wires": [
            [
                "4f222e2f.675fa"
            ]
        ]
    },
    {
        "id": "18c68a64.43b9a6",
        "type": "catch",
        "z": "ad99b549.c0c208",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 740,
        "y": 620,
        "wires": [
            [
                "4db4e267.239a8c",
                "a626a7e3.7ed2d8"
            ]
        ]
    },
    {
        "id": "4db4e267.239a8c",
        "type": "debug",
        "z": "ad99b549.c0c208",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 750,
        "y": 660,
        "wires": []
    },
    {
        "id": "1a00129f.caa04d",
        "type": "http in",
        "z": "ad99b549.c0c208",
        "name": "file",
        "url": "/data/:fn",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 730,
        "y": 580,
        "wires": [
            [
                "567a13dd.41b5ac"
            ]
        ]
    },
    {
        "id": "a626a7e3.7ed2d8",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "fd6c0282.98678",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "select export",
        "func": "/* Get data chart in array */\nvar msg1 = {};\nmsg1.payload = flow.get(\"chartarray\");\n\nif(msg1.payload === undefined)\n{\n    var newMsgNULL = {\n        \"topic\": \"SELECT 0; \"\n    }\n    return newMsgNULL;\n}\n\nvar STR = \"SELECT * FROM Level WHERE CodeSig IN (\";\n\nfor(var j=0; j < msg1.payload[0].data.length ; j++) {\n STR = STR + \"\\'\" + msg1.payload[0].series[j] + \"\\', \" ;\n}\nSTR = STR + \"\\'\" + msg1.payload[0].series[j] + \"\\');\";\n\nvar newMsg = {\n \"topic\": STR\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 700,
        "wires": [
            [
                "20367715.b97b68"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "fa04a342.a252d",
        "type": "link out",
        "z": "ad99b549.c0c208",
        "name": "export",
        "links": [
            "735166e9.0037d8"
        ],
        "x": 495,
        "y": 700,
        "wires": []
    },
    {
        "id": "735166e9.0037d8",
        "type": "link in",
        "z": "ad99b549.c0c208",
        "name": "export_file",
        "links": [
            "fa04a342.a252d",
            "b57119a8.e37c38"
        ],
        "x": 695,
        "y": 700,
        "wires": [
            [
                "fd6c0282.98678"
            ]
        ]
    },
    {
        "id": "7da09d28.58d944",
        "type": "link in",
        "z": "ad99b549.c0c208",
        "name": "for_chart_gauge",
        "links": [
            "26844ec0.71a612",
            "25861aa.bde60e6",
            "13642056.c01d"
        ],
        "x": 55,
        "y": 320,
        "wires": [
            [
                "f66829a1.028c78",
                "a27b672c.463068"
            ]
        ]
    },
    {
        "id": "c5797ec0.4b75a",
        "type": "comment",
        "z": "ad99b549.c0c208",
        "name": "GAUGE",
        "info": "",
        "x": 100,
        "y": 220,
        "wires": []
    },
    {
        "id": "a27b672c.463068",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "Count",
        "func": "var newMsg = {\n  \"topic\": \"SELECT COUNT(*) FROM Level WHERE CodeSig = \" + \"\\'\" + msg.payload.CodeSig + \"\\'\" + \";\"\n}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 360,
        "wires": [
            [
                "9e8e5094.b572b"
            ]
        ]
    },
    {
        "id": "9e8e5094.b572b",
        "type": "sqlite",
        "z": "ad99b549.c0c208",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Alert/Level",
        "x": 390,
        "y": 420,
        "wires": [
            [
                "d86ca59e.dff398"
            ]
        ]
    },
    {
        "id": "d86ca59e.dff398",
        "type": "ui_text",
        "z": "ad99b549.c0c208",
        "group": "ed4b9a8a.b9eb38",
        "order": 6,
        "width": 4,
        "height": 4,
        "name": "",
        "label": "Nombre de mesures",
        "format": "{{msg.payload[0][\"COUNT(*)\"]}}",
        "layout": "col-center",
        "x": 640,
        "y": 420,
        "wires": []
    },
    {
        "id": "d6ef2b5c.57a848",
        "type": "ui_date_picker",
        "z": "ad99b549.c0c208",
        "name": "",
        "label": "debut",
        "group": "3dc8a8e5.98d0d8",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "topic": "min",
        "x": 170,
        "y": 700,
        "wires": [
            [
                "b889e50e.00f158"
            ]
        ]
    },
    {
        "id": "ec1a44a2.47b638",
        "type": "ui_date_picker",
        "z": "ad99b549.c0c208",
        "name": "",
        "label": "fin",
        "group": "3dc8a8e5.98d0d8",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": true,
        "topic": "max",
        "x": 170,
        "y": 660,
        "wires": [
            [
                "b889e50e.00f158"
            ]
        ]
    },
    {
        "id": "e851d5af.537dd8",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "change date",
        "func": "//to change ymax\nif (msg.topic === \"max\") {\n    var max=msg.payload;\n    flow.set(\"maxdate\",max);\n    return msg;\n}\n//to change ymin\nif (msg.topic === \"min\") {\n    var min= msg.payload;\n    flow.set(\"chartarray\",min);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "b889e50e.00f158",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "change date",
        "func": "//to change ymax\nif (msg.topic === \"max\") {\n    flow.set(\"maxtime\",msg.payload);\n    var msg1 = {};\n    msg1.payload = flow.get(\"mintime\");\n    msg.ui_control = {\"options\":{\"scales\":{\"xAxes\":[{\"type\":\"time\",\"time\":{\"min\":msg1.payload,\"max\":msg.payload}}]}}}\n    delete msg.payload;\n    return msg;\n}\n//to change ymin\nif (msg.topic === \"min\") {\n    flow.set(\"mintime\",msg.payload);\n    var msg2 = {};\n    msg2.payload = flow.get(\"maxtime\");\n    msg.ui_control = {\"options\":{\"scales\":{\"xAxes\":[{\"type\":\"time\",\"time\":{\"min\":msg.payload,\"max\":msg2.payload}}]}}}\n    delete msg.payload;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 660,
        "wires": [
            [
                "9326cba0.c05808"
            ]
        ]
    },
    {
        "id": "92c12d24.d9b3a",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "update table",
        "func": "var numberOfRows = msg.payload.length;\n\n//flow.set(\"lastId\",numberOfRows);\n\nvar newMsg = { payload: msg.payload };\nmsg.payload=[];\n\nfor (let i=0; i<numberOfRows; i++) {\n    var d = new Date(newMsg.payload[i].Time*1000);\n    var strdate =  (\"00\" + d.getDate()).slice(-2) + \"/\" + \n        (\"00\" + (d.getMonth() + 1)).slice(-2) + \"/\" + \n        (d.getFullYear()) + \" \" + \n        (\"00\" + d.getHours()).slice(-2) + \":\" + \n        (\"00\" + d.getMinutes()).slice(-2) + \":\" + \n        (\"00\" + d.getSeconds()).slice(-2);\n    \n    msg.payload.push({\n            \"Time\":strdate,\n            \"CodeSig\":newMsg.payload[i].CodeSig,\n            \"Name\":newMsg.payload[i].Name,\n            \"Niveau\":newMsg.payload[i].Niveau,\n            \"Temperature\":newMsg.payload[i].Temperature\n            })\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 140,
        "wires": [
            [
                "5d66303f.56964"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "5d66303f.56964",
        "type": "change",
        "z": "ad99b549.c0c208",
        "name": "ui_control",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{\"tabulator\":{\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.field});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"groupHeader\":\"function (value, count, data, group) {return value + \\\"<span style='color:#d00; margin-left:10px;'>(\\\" + count + \\\" Termostat\\\"+((count>1) ? \\\"e\\\" : \\\"\\\") + \\\")</span>\\\";}\",\"layout\":\"fitColumns\",\"columns\":[{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Time\",\"field\":\"Time\",\"frozen\":false,\"sorter\":\"date\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"CodeSig\",\"field\":\"CodeSig\",\"headerFilter\":\"input\",\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Name\",\"field\":\"Name\",\"headerFilter\":\"input\",\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Mesures\",\"columns\":[{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"gray\",\"orange\",\"red\"],\"legend\":\"function (value) {return (value>0)? '&nbsp;&nbsp;'+value+' %' : '-';}\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Niveau\",\"field\":\"Niveau\",\"formatter\":\"progress\"},{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"steelblue\",\"orange\",\"red\"],\"legend\":\"function (value) {return value+' °C';}\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Temperature\",\"field\":\"Temperature\",\"formatter\":\"progress\"}]}],\"movableColumns\":true},\"customHeight\":36}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 140,
        "wires": [
            [
                "3128a687.f9aa9a"
            ]
        ]
    },
    {
        "id": "4e5ecf04.a50ce",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "Query",
        "func": "var newMsg = {\n \"topic\": \n \"SELECT tt.* FROM Level tt INNER JOIN   (SELECT CodeSig, MAX(Time) AS MaxDateTime FROM Level GROUP BY CodeSig) groupedtt  ON tt.CodeSig = groupedtt.CodeSig AND tt.Time = groupedtt.MaxDateTime\"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 140,
        "wires": [
            [
                "1f3b8818.e7c1c8"
            ]
        ]
    },
    {
        "id": "1f3b8818.e7c1c8",
        "type": "sqlite",
        "z": "ad99b549.c0c208",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Level",
        "x": 430,
        "y": 140,
        "wires": [
            [
                "92c12d24.d9b3a"
            ]
        ]
    },
    {
        "id": "3128a687.f9aa9a",
        "type": "ui_table",
        "z": "ad99b549.c0c208",
        "group": "91fc922.8a36e7",
        "name": "Table",
        "order": 1,
        "width": 19,
        "height": "20",
        "columns": [],
        "outputs": 1,
        "cts": true,
        "x": 870,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "5bd3bedc.7be97",
        "type": "ui_button",
        "z": "4906e0ea.6bc0f",
        "d": true,
        "name": "Map",
        "group": "3dc8a8e5.98d0d8",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Map",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "map",
        "payloadType": "str",
        "topic": "",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "53f2c169.94d38"
            ]
        ]
    },
    {
        "id": "53f2c169.94d38",
        "type": "ui_ui_control",
        "z": "4906e0ea.6bc0f",
        "name": "return map",
        "events": "change",
        "x": 190,
        "y": 180,
        "wires": [
            [
                "68be05e7.15954c"
            ]
        ]
    },
    {
        "id": "f5b133fb.2adf6",
        "type": "ui_button",
        "z": "4906e0ea.6bc0f",
        "d": true,
        "name": "R map",
        "group": "6230babe.5dfca4",
        "order": 16,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-arrow-left",
        "payload": "Administration Pav",
        "payloadType": "str",
        "topic": "",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "7d4cf44.2708c0c"
            ]
        ]
    },
    {
        "id": "7d4cf44.2708c0c",
        "type": "ui_ui_control",
        "z": "4906e0ea.6bc0f",
        "name": "return Admin",
        "events": "change",
        "x": 250,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "e4fe982d.513ca8",
        "type": "inject",
        "z": "4906e0ea.6bc0f",
        "name": "CREATE",
        "topic": "CREATE TABLE Capteur(CodeSig STRING PRIMARY KEY NOT NULL, Commune STRING, Adresse STRING, name STRING, Flux STRING, Commentary STRING, lat REAL NOT NULL, lon REAL NOT NULL, LastvalueD INT, LastvalueT INT)",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 500,
        "y": 260,
        "wires": [
            [
                "f34db620.dbd408"
            ]
        ]
    },
    {
        "id": "f34db620.dbd408",
        "type": "sqlite",
        "z": "4906e0ea.6bc0f",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "test/Level",
        "x": 680,
        "y": 200,
        "wires": [
            [
                "5af196ed.147778"
            ]
        ]
    },
    {
        "id": "3489a447.4079ac",
        "type": "inject",
        "z": "4906e0ea.6bc0f",
        "name": "DROP",
        "topic": "DROP table Capteur;",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 510,
        "y": 220,
        "wires": [
            [
                "f34db620.dbd408"
            ]
        ]
    },
    {
        "id": "d579f625.a59558",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "INSERT",
        "func": "\nvar newMsg = {\n \"topic\": \"INSERT INTO Capteur (CodeSig,Commune,Adresse,name,Flux,Commentary,lat,lon) VALUES ( \" + \"\\'\" + \n msg.payload.CODE_SIG + \"\\'\" + \",\" + \"\\'\" +  \n msg.payload.COMMUNE + \"\\'\" + \",\" + \"\\'\" +  \n msg.payload.ADRESSE + \"\\'\" + \",\" + \"\\'\" + \n msg.payload.NAME + \"\\'\" + \",\" + \"\\'\" + \n msg.payload.FLUX + \"\\'\" + \",\" + \"\\'\" + \n msg.payload.TYPE + \"\\'\" + \",\" + \n msg.payload.Lat + \",\" + \n msg.payload.Long + \")\"\n}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 100,
        "wires": [
            [
                "f34db620.dbd408"
            ]
        ]
    },
    {
        "id": "316ec5f4.4dddba",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "Pav",
        "func": "msg.payload.layer = \"Pav\";\nmsg.payload.icon = \"trash\";\n\nif(msg.payload.Niveau < 45){\n    msg.payload.iconColor = \"green\";\n}\nelse if(msg.payload.Niveau >= 45 && msg.payload.Niveau < 70) {\n    msg.payload.iconColor = \"orange\";\n}\nelse if(msg.payload.Niveau >= 70) {\n    msg.payload.iconColor = \"red\";\n}\nelse{\n    msg.payload.iconColor = \"gray\";\n}\n\nmsg.payload.command = { \"button\": { \"name\":\"My Fancy Button\" } };\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 240,
        "wires": [
            [
                "87388ff5.acbae"
            ]
        ]
    },
    {
        "id": "5af196ed.147778",
        "type": "split",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 830,
        "y": 200,
        "wires": [
            [
                "316ec5f4.4dddba"
            ]
        ]
    },
    {
        "id": "c170f756.1db228",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "SELECT",
        "func": "var newMsg = {\n \"topic\": \"WITH group1 AS (SELECT * FROM capteurs), \\\n           group2 AS (SELECT tt.* FROM Level tt INNER JOIN (SELECT CodeSig, MAX(Time) AS MaxDateTime FROM Level GROUP BY CodeSig) groupedtt  ON tt.CodeSig = groupedtt.CodeSig AND tt.Time = groupedtt.MaxDateTime) \\\n           SELECT * FROM group1 JOIN group2 ON group1.name = group2.name\"\n}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 180,
        "wires": [
            [
                "f34db620.dbd408"
            ]
        ]
    },
    {
        "id": "68be05e7.15954c",
        "type": "delay",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 340,
        "y": 180,
        "wires": [
            [
                "c170f756.1db228"
            ]
        ]
    },
    {
        "id": "151f4d7a.8eb713",
        "type": "comment",
        "z": "4906e0ea.6bc0f",
        "name": "MAP",
        "info": "",
        "x": 90,
        "y": 60,
        "wires": []
    },
    {
        "id": "87388ff5.acbae",
        "type": "worldmap",
        "z": "4906e0ea.6bc0f",
        "name": "map",
        "lat": "42.7757",
        "lon": "2.8455",
        "zoom": "11",
        "layer": "OSM",
        "cluster": "0",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "hiderightclick": "false",
        "coords": "deg",
        "path": "worldmap",
        "x": 870,
        "y": 280,
        "wires": []
    },
    {
        "id": "2fc4051b.e2354a",
        "type": "ui_worldmap",
        "z": "4906e0ea.6bc0f",
        "group": "6230babe.5dfca4",
        "order": 1,
        "width": 19,
        "height": 15,
        "name": "",
        "lat": "42.7757",
        "lon": "2.8455",
        "zoom": "11",
        "layer": "OSM",
        "cluster": "11",
        "maxage": "",
        "usermenu": "hide",
        "layers": "hide",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "deg",
        "showgrid": "false",
        "path": "/worldmap",
        "x": 880,
        "y": 320,
        "wires": []
    },
    {
        "id": "3d617e70.655112",
        "type": "worldmap in",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "path": "/worldmap",
        "events": "all",
        "x": 160,
        "y": 360,
        "wires": [
            [
                "399f7257.3a617e",
                "d28a7b1b.5addb8"
            ]
        ]
    },
    {
        "id": "399f7257.3a617e",
        "type": "debug",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 330,
        "y": 400,
        "wires": []
    },
    {
        "id": "88636b19.b26738",
        "type": "ui_text",
        "z": "4906e0ea.6bc0f",
        "group": "6230babe.5dfca4",
        "order": 2,
        "width": 11,
        "height": 1,
        "name": "CodeSig",
        "label": "Code Sig : ",
        "format": "{{msg.payload[0].CodeSig}}",
        "layout": "row-center",
        "x": 400,
        "y": 520,
        "wires": []
    },
    {
        "id": "305aed04.1cfe32",
        "type": "sqlite",
        "z": "4906e0ea.6bc0f",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Alert/Level",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "88636b19.b26738",
                "1614a0ab.1fd99f",
                "fb76302d.af4d5"
            ]
        ]
    },
    {
        "id": "9f1b7ae7.0abef8",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "alerte",
        "func": "msg.topic = 'ambient_temperature';\nglobal.set(\"nest1_ambient_temperature\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 500,
        "wires": [
            [
                "32a52378.22d64c",
                "9352c01f.e6f51"
            ]
        ]
    },
    {
        "id": "1614a0ab.1fd99f",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "target_temperature",
        "func": "msg.topic = 'target_temperature';\nglobal.set(\"nest1_target_temperature\",msg.payload[0].Niveau);\nglobal.set(\"nest1_ambient_temperature\",msg.payload[0].Alert);\nglobal.set(\"CodeSig_for_Alert\",msg.payload[0].CodeSig);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 560,
        "wires": [
            [
                "32a52378.22d64c",
                "90052fbb.48f24",
                "95074276.f3d76"
            ]
        ]
    },
    {
        "id": "32a52378.22d64c",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "Data",
        "func": "if (msg.topic == \"target_temperature\") {\n    //global.set(\"nest1_target_temperature\",msg.payload);\n}\n\nif(global.get(\"nest1_ambient_temperature\") < global.get(\"nest1_target_temperature\")) {\n    global.set(\"nest1_hvac_state\",\"heating\");\n}\nelse {\n    global.set(\"nest1_hvac_state\",\"cooling\");\n}\n    \n    \nmsg.topic = \"update\";\nvar data = {\n    'ambient_temperature': global.get(\"nest1_ambient_temperature\"),\n    'target_temperature': global.get(\"nest1_target_temperature\"),\n    'hvac_state': global.get(\"nest1_hvac_state\") || 'off',\n    'has_leaf': global.get(\"nest1_has_leaf\") || 'false',\n    'away': global.get(\"nest1_away\") || 'false'\n}\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 540,
        "wires": [
            [
                "3033304e.e8ed2"
            ]
        ]
    },
    {
        "id": "b9b29d3a.4c66c",
        "type": "ui_slider",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "label": "Alerte",
        "tooltip": "",
        "group": "6230babe.5dfca4",
        "order": 3,
        "width": 11,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 630,
        "y": 380,
        "wires": [
            [
                "e95aa6c2.8c5eb8"
            ]
        ]
    },
    {
        "id": "31d2a376.58de8c",
        "type": "ui_button",
        "z": "4906e0ea.6bc0f",
        "name": "Valide",
        "group": "6230babe.5dfca4",
        "order": 25,
        "width": 11,
        "height": 1,
        "passthru": false,
        "label": "Valider le seuil d'alerte",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "textInput",
        "payloadType": "flow",
        "topic": "",
        "x": 630,
        "y": 460,
        "wires": [
            [
                "9f1b7ae7.0abef8",
                "75b50b5b.051014"
            ]
        ]
    },
    {
        "id": "e95aa6c2.8c5eb8",
        "type": "change",
        "z": "4906e0ea.6bc0f",
        "name": "Change",
        "rules": [
            {
                "t": "set",
                "p": "textInput",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 420,
        "wires": [
            [
                "31d2a376.58de8c"
            ]
        ]
    },
    {
        "id": "75b50b5b.051014",
        "type": "ui_toast",
        "z": "4906e0ea.6bc0f",
        "position": "top left",
        "displayTime": "2",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Sauvegarde de l'alerte en cours...",
        "name": "",
        "x": 830,
        "y": 520,
        "wires": []
    },
    {
        "id": "9352c01f.e6f51",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "Query",
        "func": "\n\n\n\nvar newMsg = {\n \"topic\": \n\"INSERT OR REPLACE INTO Alert (CodeSig, Alert) VALUES ('\" + global.get(\"CodeSig_for_Alert\") + \"',\" +\nglobal.get(\"nest1_ambient_temperature\") + \"); \" \n \n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 560,
        "wires": [
            [
                "101465ee.d7a78a"
            ]
        ]
    },
    {
        "id": "101465ee.d7a78a",
        "type": "sqlite",
        "z": "4906e0ea.6bc0f",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Alert",
        "x": 930,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "fb76302d.af4d5",
        "type": "debug",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 410,
        "y": 600,
        "wires": []
    },
    {
        "id": "968a0037.62891",
        "type": "comment",
        "z": "4906e0ea.6bc0f",
        "name": "GAUGE",
        "info": "",
        "x": 480,
        "y": 380,
        "wires": []
    },
    {
        "id": "34851eb3.bdabc2",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),Niveau,Temperature,Level.CodeSig, Alert FROM Level LEFT JOIN Alert ON (Alert.CodeSig = Level.CodeSig) WHERE Level.Name = \" + \"\\'\" + msg.payload.name + \"\\'\" + \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 500,
        "wires": [
            [
                "305aed04.1cfe32"
            ]
        ]
    },
    {
        "id": "311ba840.bbdb08",
        "type": "ui_chart",
        "z": "4906e0ea.6bc0f",
        "name": "Chart",
        "group": "6230babe.5dfca4",
        "order": 13,
        "width": 11,
        "height": 7,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 550,
        "y": 860,
        "wires": [
            [
                "e5902ff.d988fd"
            ]
        ]
    },
    {
        "id": "7b51798a.97d7c8",
        "type": "debug",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 730,
        "y": 800,
        "wires": []
    },
    {
        "id": "a3d757d3.976f58",
        "type": "sqlite",
        "z": "4906e0ea.6bc0f",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Level",
        "x": 350,
        "y": 800,
        "wires": [
            [
                "1d65d38c.a9bd9c"
            ]
        ]
    },
    {
        "id": "1d65d38c.a9bd9c",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "fill chart",
        "func": "/* Get data chart in array */\nvar msg1 = {};\nmsg1.payload = flow.get(\"chartarray\");\n\n/* Get new data in array */\nvar series = msg.payload[0].CodeSig;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].Time*1000) + ', \"y\":' + msg.payload[i].Niveau + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 800,
        "wires": [
            [
                "7b51798a.97d7c8",
                "311ba840.bbdb08"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "ae501222.17423",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT Time,CodeSig,Niveau FROM Level WHERE Name = \" + \"\\'\" + msg.payload.name + \"\\'\" + \" order by Level.Time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 800,
        "wires": [
            [
                "a3d757d3.976f58"
            ]
        ]
    },
    {
        "id": "b8c8c418.41ef48",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "save chart",
        "func": "flow.set(\"chartarray\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 840,
        "wires": [
            []
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "e47605e5.f93b58",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "flush chart",
        "func": "msg.payload = [];\nmsg.ui_control = {\"options\":{\"scales\":{\"xAxes\":[{\"type\":\"time\",\"time\":{}}]}}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 840,
        "wires": [
            [
                "311ba840.bbdb08"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "1fe2ce87.985f51",
        "type": "ui_button",
        "z": "4906e0ea.6bc0f",
        "d": true,
        "name": "reset",
        "group": "6230babe.5dfca4",
        "order": 18,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Reset graphique",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 190,
        "y": 840,
        "wires": [
            [
                "e47605e5.f93b58"
            ]
        ]
    },
    {
        "id": "4dfb7d6d.919c04",
        "type": "comment",
        "z": "4906e0ea.6bc0f",
        "name": "CHART",
        "info": "",
        "x": 110,
        "y": 740,
        "wires": []
    },
    {
        "id": "f8d532c2.cbb59",
        "type": "ui_date_picker",
        "z": "4906e0ea.6bc0f",
        "d": true,
        "name": "",
        "label": "debut",
        "group": "6230babe.5dfca4",
        "order": 22,
        "width": 4,
        "height": 1,
        "passthru": true,
        "topic": "min",
        "x": 190,
        "y": 920,
        "wires": [
            [
                "30e58174.616fde"
            ]
        ]
    },
    {
        "id": "89fff989.2de818",
        "type": "ui_date_picker",
        "z": "4906e0ea.6bc0f",
        "d": true,
        "name": "",
        "label": "fin",
        "group": "6230babe.5dfca4",
        "order": 19,
        "width": 4,
        "height": 1,
        "passthru": true,
        "topic": "max",
        "x": 190,
        "y": 880,
        "wires": [
            [
                "30e58174.616fde"
            ]
        ]
    },
    {
        "id": "e5902ff.d988fd",
        "type": "debug",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "aee3b452.db3628",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "change date",
        "func": "//to change ymax\nif (msg.topic === \"max\") {\n    var max=msg.payload;\n    flow.set(\"maxdate\",max);\n    return msg;\n}\n//to change ymin\nif (msg.topic === \"min\") {\n    var min= msg.payload;\n    flow.set(\"chartarray\",min);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "27cf5b0f.c3ac44",
        "type": "debug",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 510,
        "y": 940,
        "wires": []
    },
    {
        "id": "30e58174.616fde",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "change date",
        "func": "//to change ymax\nif (msg.topic === \"max\") {\n    flow.set(\"maxtime2\",msg.payload);\n    var msg1 = {};\n    msg1.payload = flow.get(\"mintime2\");\n    msg.ui_control = {\"options\":{\"scales\":{\"xAxes\":[{\"type\":\"time\",\"time\":{\"min\":msg1.payload,\"max\":msg.payload}}]}}}\n    delete msg.payload;\n    return msg;\n}\n//to change ymin\nif (msg.topic === \"min\") {\n    flow.set(\"mintime2\",msg.payload);\n    var msg2 = {};\n    msg2.payload = flow.get(\"maxtime2\");\n    msg.ui_control = {\"options\":{\"scales\":{\"xAxes\":[{\"type\":\"time\",\"time\":{\"min\":msg.payload,\"max\":msg2.payload}}]}}}\n    delete msg.payload;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 900,
        "wires": [
            [
                "27cf5b0f.c3ac44",
                "311ba840.bbdb08"
            ]
        ]
    },
    {
        "id": "d28a7b1b.5addb8",
        "type": "link out",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "links": [
            "510713b7.c4625c",
            "b1698a8a.8a20b8"
        ],
        "x": 275,
        "y": 360,
        "wires": []
    },
    {
        "id": "510713b7.c4625c",
        "type": "link in",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "links": [
            "d28a7b1b.5addb8"
        ],
        "x": 75,
        "y": 500,
        "wires": [
            [
                "34851eb3.bdabc2",
                "6905553e.97080c"
            ]
        ]
    },
    {
        "id": "b1698a8a.8a20b8",
        "type": "link in",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "links": [
            "d28a7b1b.5addb8"
        ],
        "x": 80,
        "y": 800,
        "wires": [
            [
                "ae501222.17423"
            ]
        ]
    },
    {
        "id": "3033304e.e8ed2",
        "type": "debug",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 830,
        "y": 620,
        "wires": []
    },
    {
        "id": "95074276.f3d76",
        "type": "ui_artlessgauge",
        "z": "4906e0ea.6bc0f",
        "group": "6230babe.5dfca4",
        "order": 8,
        "width": 5,
        "height": 5,
        "name": "Niveau",
        "icon": "",
        "label": "Pourcentage de remplissage",
        "unit": "",
        "layout": "radial",
        "decimals": 0,
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].Niveau",
        "sectors": [
            {
                "val": 0,
                "col": "#bbb9bb",
                "t": "min",
                "dot": 0
            },
            {
                "val": 1,
                "col": "#18d100",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 20,
                "col": "#fbff1f",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 60,
                "col": "#dbbe00",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 75,
                "col": "#ff0d00",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#ff0d00",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 620,
        "y": 620,
        "wires": []
    },
    {
        "id": "90052fbb.48f24",
        "type": "ui_artlessgauge",
        "z": "4906e0ea.6bc0f",
        "group": "6230babe.5dfca4",
        "order": 9,
        "width": 3,
        "height": 3,
        "name": "temperature",
        "icon": "",
        "label": "Temperature",
        "unit": "",
        "layout": "radial",
        "decimals": 0,
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].Temperature",
        "sectors": [
            {
                "val": -20,
                "col": "#8c8b8d",
                "t": "min",
                "dot": 0
            },
            {
                "val": 15,
                "col": "#7301fe",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 17,
                "col": "#e7ff33",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 25,
                "col": "#fdd512",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 35,
                "col": "#ff0a0a",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#ff0a0a",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "3",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 630,
        "y": 580,
        "wires": []
    },
    {
        "id": "9f8b81e3.5f096",
        "type": "ui_artlessgauge",
        "z": "4906e0ea.6bc0f",
        "group": "6230babe.5dfca4",
        "order": 10,
        "width": 3,
        "height": 3,
        "name": "Battery",
        "icon": "",
        "label": "Batterie",
        "unit": "",
        "layout": "radial",
        "decimals": 0,
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].Battery",
        "sectors": [
            {
                "val": 0,
                "col": "#f90101",
                "t": "min",
                "dot": 0
            },
            {
                "val": 25,
                "col": "#f64c4c",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 50,
                "col": "#ffad1f",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 75,
                "col": "#f7f022",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#11ff00",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#11ff00",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 620,
        "y": 660,
        "wires": []
    },
    {
        "id": "55a1044c.f199ec",
        "type": "sqlite",
        "z": "4906e0ea.6bc0f",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Capteurs",
        "x": 200,
        "y": 620,
        "wires": [
            [
                "f6a356a0.f2fdc8",
                "9f8b81e3.5f096"
            ]
        ]
    },
    {
        "id": "6905553e.97080c",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT Capteurs.Battery FROM Capteurs WHERE Capteurs.Name = \" + \"\\'\" + msg.payload.name + \"\\'\" + \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 580,
        "wires": [
            [
                "55a1044c.f199ec"
            ]
        ]
    },
    {
        "id": "f6a356a0.f2fdc8",
        "type": "debug",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 370,
        "y": 660,
        "wires": []
    },
    {
        "id": "e8983f5.318dbc",
        "type": "ui_template",
        "z": "ad99b549.c0c208",
        "group": "3dc8a8e5.98d0d8",
        "name": "Dashboard stylesheet",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1140,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7fffae5f.e8a8d",
        "type": "ui_template",
        "z": "ad99b549.c0c208",
        "group": "ed4b9a8a.b9eb38",
        "name": "Dashboard stylesheet",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1140,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "193c7cd1.7b9733",
        "type": "ui_template",
        "z": "ad99b549.c0c208",
        "group": "34eb7bc9.9b5834",
        "name": "Dashboard stylesheet",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1140,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "55a300ef.074c6",
        "type": "ui_template",
        "z": "ad99b549.c0c208",
        "group": "c69b85fc.c131f8",
        "name": "Logo / Clock",
        "order": 29,
        "width": 4,
        "height": 1,
        "format": "<script id=\"clockScript1\" type=\"text/javascript\">\n    var clockInterval;\n    $(function () {\n        if (clockInterval) return;\n\n        //add logo\n        var div1 = $('<div/>');\n        var logo = new Image();\n\n        logo.src = '/logo.png'\n        logo.height = 100;\n        div1[0].style.margin = '30px auto';\n\n        div1.append(logo);\n\n        //add clock\n        var div2 = $('<div/>');\n        var p = $('<p/>');\n\n        div2.append(p);\n        div2[0].style.margin = '5px';\n\n        function displayTime() {\n            p.text(new Date().toLocaleString());\n        }\n        \n        clockInterval = setInterval(displayTime, 1000);\n\n        //add to toolbar when it's available\n        var addToToolbarTimer;\n        \n        function addToToolbar() {\n            \n            var toolbar = $('#nr-dashboard > md-content > section > md-sidenav');\n            //var toolbar = $('.md-toolbar-tools');\n            \n            if(!toolbar.length) return;\n            \n            toolbar.append(div1);\n            //toolbar.append(div2);\n            clearInterval(addToToolbarTimer);\n        }\n        addToToolbarTimer = setInterval(addToToolbar, 100);\n    });\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "x": 1110,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "f05cde7a.b24d1",
        "type": "ui_button",
        "z": "4906e0ea.6bc0f",
        "name": "full",
        "group": "6230babe.5dfca4",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "red",
        "bgcolor": "",
        "icon": "fa-battery-full",
        "payload": "high",
        "payloadType": "str",
        "topic": "",
        "x": 990,
        "y": 80,
        "wires": [
            [
                "84ad140f.736f08"
            ]
        ]
    },
    {
        "id": "7af9f7b8.6c7628",
        "type": "ui_button",
        "z": "4906e0ea.6bc0f",
        "name": "empty",
        "group": "6230babe.5dfca4",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "green",
        "bgcolor": "",
        "icon": "fa-battery-empty",
        "payload": "low",
        "payloadType": "str",
        "topic": "",
        "x": 990,
        "y": 160,
        "wires": [
            [
                "84ad140f.736f08"
            ]
        ]
    },
    {
        "id": "2e3458.02008ba8",
        "type": "ui_button",
        "z": "4906e0ea.6bc0f",
        "name": "half",
        "group": "6230babe.5dfca4",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "yellow",
        "bgcolor": "",
        "icon": "fa-battery-half",
        "payload": "mid",
        "payloadType": "str",
        "topic": "",
        "x": 990,
        "y": 120,
        "wires": [
            [
                "84ad140f.736f08"
            ]
        ]
    },
    {
        "id": "2244fce0.eff334",
        "type": "ui_button",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "group": "6230babe.5dfca4",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "all",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "all",
        "payloadType": "str",
        "topic": "",
        "x": 990,
        "y": 40,
        "wires": [
            [
                "84ad140f.736f08"
            ]
        ]
    },
    {
        "id": "bf7e4199.304ba",
        "type": "link out",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "links": [
            "a44b4984.7228d8",
            "dcded743.102448"
        ],
        "x": 1295,
        "y": 100,
        "wires": []
    },
    {
        "id": "a44b4984.7228d8",
        "type": "link in",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "links": [
            "bf7e4199.304ba"
        ],
        "x": 375,
        "y": 140,
        "wires": [
            [
                "f6c5c3d6.2fa9f"
            ]
        ]
    },
    {
        "id": "f6c5c3d6.2fa9f",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "SELECT",
        "func": "var val1, val2;\n\nif(msg.payload.command.level === \"low\") {\n    val1 = 0;\n    val2 = 45;\n}\nelse if(msg.payload.command.level === \"mid\") {\n    val1 = 45;\n    val2 = 70;\n}\nelse if(msg.payload.command.level === \"high\") {\n    val1 = 70;\n    val2 = 100;\n}\nelse if(msg.payload.command.level === \"all\") {\n    val1 = 0;\n    val2 = 100;\n}\nelse {\n    return;\n}\n\n\n\n\nvar newMsg = {\n \"topic\": \"WITH group1 AS (SELECT * FROM capteurs), \\\n           group2 AS (SELECT tt.* FROM Level tt INNER JOIN (SELECT CodeSig, MAX(Time) AS MaxDateTime FROM Level GROUP BY CodeSig) groupedtt  ON tt.CodeSig = groupedtt.CodeSig AND tt.Time = groupedtt.MaxDateTime) \\\n           SELECT * FROM group1 JOIN group2 ON group1.name = group2.name AND group2.Niveau > \" + val1 + \" AND group2.Niveau < \" + val2 + \";\"\n}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 140,
        "wires": [
            [
                "f34db620.dbd408"
            ]
        ]
    },
    {
        "id": "84ad140f.736f08",
        "type": "function",
        "z": "4906e0ea.6bc0f",
        "name": "Remove layer",
        "func": "var niveau = msg.payload;\nmsg.payload = {command:{clear:\"Pav\", \"level\":niveau}};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 100,
        "wires": [
            [
                "bf7e4199.304ba"
            ]
        ]
    },
    {
        "id": "dcded743.102448",
        "type": "link in",
        "z": "4906e0ea.6bc0f",
        "name": "",
        "links": [
            "bf7e4199.304ba"
        ],
        "x": 735,
        "y": 280,
        "wires": [
            [
                "87388ff5.acbae"
            ]
        ]
    },
    {
        "id": "b9785608.557c58",
        "type": "ui_dropdown",
        "z": "4906e0ea.6bc0f",
        "name": "Demonstrateur",
        "label": "Demonstrateur",
        "tooltip": "",
        "place": "",
        "group": "6230babe.5dfca4",
        "order": 15,
        "width": "20",
        "height": "1",
        "passthru": true,
        "options": [
            {
                "label": "Point d'apport volontaire",
                "value": "Pav",
                "type": "str"
            },
            {
                "label": "place de parking",
                "value": "Parking",
                "type": "str"
            },
            {
                "label": "consommation electrique",
                "value": "Energie",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 1100,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "cbbc1421.32ee08",
        "type": "function",
        "z": "2fc0c269.45440e",
        "name": "handle tableData",
        "func": "var status = {fill:\"red\",shape:\"dot\",text: \"payload \"};\nvar tableIndex = env.get(\"tableIndex\") || \"$topic\";\nvar tableDataProp = env.get(\"tableDataProp\") || \"row\";\nvar tableContext = env.get(\"tableContext\");\nvar dashboard = env.get(\"dashboard\");\nvar maxRows = env.get(\"maxRows\") || 0;\nvar maxStore = env.get(\"maxStore\") || 0;\n\nif (!tableContext.hasOwnProperty(\"tableData\") || !tableContext.hasOwnProperty(\"tableConfig\")) {\n    status.text=\"tableContext not defined\";\n    node.error(status.text);\n    return [{payload:status},null];\n}\n\n// context store to cache table data (memoryOnly prefered)\nvar tableData = flow.get(\"$parent.\"+tableContext.tableData.name,tableContext.tableData.storage);\nif (tableData===undefined) {\n    node.warn(\"[ui-table handler] tableData initialized!\");\n    tableData={};\n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n}\n\n// context Store to save table configuration (file)\nvar tableConfig = flow.get(\"$parent.\"+tableContext.tableConfig.name,tableContext.tableConfig.storage);\nif (tableConfig===undefined) {\n    node.warn(\"[ui-table handler] tableConfig initialized!\");\n    tableConfig={ResponsiveLayout:true};\n    flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n}\n\nif (tableConfig.hasOwnProperty(\"maxStore\")) maxStore=tableConfig.maxStore;\nif (tableConfig.hasOwnProperty(\"maxRows\")) maxRows=tableConfig.maxRows;\n\n// context Store to save table configuration (file)\nvar tableEdit;\nif (tableContext.hasOwnProperty(\"tableEdit\")) {\n    tableEdit = flow.get(\"$parent.\"+tableContext.tableEdit.name,tableContext.tableEdit.storage);\n    if (tableEdit===undefined) {\n        node.warn(\"[ui-table handler] tableEdit initialized!\");\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n}\n\n// function to merge partial data into existing table row\nvar mergeObject = function (destination, source, filter) {\n    for (let currentSource in source) {\n        if (source.hasOwnProperty(currentSource)) {\n            if (filter!==undefined && tableEdit && tableEdit.hasOwnProperty(filter) && tableEdit[filter].hasOwnProperty(currentSource)) {\n                destination[currentSource]= tableEdit[filter][currentSource];\n                source[currentSource]=tableEdit[filter][currentSource];\n            } else {\n                destination[currentSource]= source[currentSource];\n            }\n        }    \n    }\n    return source;\n};\n\n// merge edits into a destination object respecting _children\nvar mergeEdits = function(destination) {\n    \n    var mergeChildEdits = function(children) {\n        children.forEach(child => {\n            if (child.hasOwnProperty(tableIndex) && tableEdit.hasOwnProperty(child[tableIndex])) {\n//                node.warn([\"mergeChild\",child])\n                Object.keys(tableEdit[child[tableIndex]]).forEach(edit => {\n                    if (child.hasOwnProperty(edit)) {\n                        child[edit]=tableEdit[child[tableIndex]][edit];\n//                        node.warn([\"mergeChild edit \",edit,child[edit]])\n                    }\n                });\n            }\n            if (child.hasOwnProperty(\"_children\")) {\n                mergeChildEdits(child._children);\n            }\n        })\n    }\n    \n\n    Object.keys(destination).forEach(row => {\n        if (destination[row].hasOwnProperty(tableIndex)) {\n            if (tableEdit.hasOwnProperty(row)) {\n                Object.keys(tableEdit[row]).forEach(edit => {\n                    destination[row][edit]=tableEdit[row][edit];\n                });\n            }\n            if (destination[row].hasOwnProperty(\"_children\")) {\n                mergeChildEdits(destination[row]._children);\n            }\n       }\n    });\n}\n\n// deep search for a column including nested columns\nvar searchTabulatorColumn = function (columns,key,match) {\n    var result;\n    for (let column of columns) {\n        if (column.hasOwnProperty(\"columns\")) {\n            result = searchTabulatorColumn(column.columns,key,match);\n            if (result!==undefined) return result;\n        } else if (column.hasOwnProperty(key) && column[key]===match) {\n            return column;\n        }\n    }\n};\n\n// command message to update add or update data on ui-table\nvar msgToTable={};\nmsgToTable.payload={\n    \"command\":msg.tabulatorCommand || \"updateOrAddData\",\n    \"arguments\": [],\n    \"returnPromise\": false\n};\n\n// store data in tableData\nif (msg.hasOwnProperty(tableDataProp)) {\n    // store data for later recover\n    if (!msg.hasOwnProperty(\"topic\")) { // check if index existst\n        status.text=\"msg.topic not defined!\";\n        return [{payload:status},null];\n    }\n    if (!tableData.hasOwnProperty(msg.topic)){ // first seen\n        if (maxRows>0 && Object.keys(tableData).lenght===0) {\n            tableConfig.currentFirstRow=msg.topic;\n        }\n        tableData[msg.topic]={};\n        if (tableEdit && tableEdit.hasOwnProperty(msg.topic)) { // table edits available!\n            Object.keys(tableEdit[msg.topic]).forEach((key) => {\n                msg[tableDataProp][key]=tableEdit[msg.topic][key];\n                tableData[msg.topic][key]=tableEdit[msg.topic][key];\n            })\n        }\n        if (maxStore>0 && typeof msg.topic === \"number\") { // limit rows in tableData\n            let rowKeys = Object.keys(tableData);\n            if (rowKeys.length>maxStore) {\n                for (let i=0; i<(rowKeys.length-maxStore); i++) {\n                    delete tableData[rowKeys[i]];\n                }\n            }\n        }\n    }\n    if (!tableData[msg.topic].hasOwnProperty(tableIndex)) tableData[msg.topic][tableIndex]=msg.topic;\n    msg[tableDataProp]=mergeObject(tableData[msg.topic],msg[tableDataProp],msg.topic);\n    msg[tableDataProp][tableIndex]=msg.topic;\n    msgToTable.payload.arguments=[[msg[tableDataProp]]];\n    // add aditional parameters\n    if (msg.hasOwnProperty(\"tabulatorParameter\") && Array.isArray(msg.tabulatorParameter)) {\n        for (let arg in msg.tabulatorParameter) msgToTable.payload.arguments.push(arg);\n    }\n    // delete rows if rows exceed maxRows\n    /*\n    if (maxRows>0 && tableConfig.hasOwnProperty(\"currentFirstRow\") && typeof tableData[msg.topic][tableIndex]===\"number\") {\n        //node.warn([maxRows,tableConfig.hasOwnProperty(\"currentFirstRow\"),typeof tableData[msg.topic][tableIndex],tableConfig.currentFirstRow,tableData[msg.topic][tableIndex]-maxRows])\n        if (tableConfig.currentFirstRow<tableData[msg.topic][tableIndex]-maxRows) {\n            node.warn([\"maxRowExeeded\",tableConfig.currentFirstRow]);\n            node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [tableConfig.currentFirstRow],\"returnPromise\": false}},null]);\n            tableConfig.currentFirstRow++;\n        }\n    }*/\n    if (maxRows>0 && typeof tableData[msg.topic][tableIndex]===\"number\" && msg.topic-maxRows>0) {\n        node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [msg.topic-maxRows],\"returnPromise\": false}},null]);\n    }\n    status.fill=\"green\";\n    status.text=msg.topic+\" updated\";\n    return [{payload:status},msgToTable,null];\n} if (msg.payload===\"connect\" || (msg.payload===\"change\" && msg.name===dashboard) || (msg.hasOwnProperty(\"payload\") && msg.payload.hasOwnProperty(\"command\"))) { \n    if (!msg.hasOwnProperty(\"ui_control\")) {\n        msg.ui_control = env.get('tabulator');\n        status.text+=\" ui_control added\";\n    }\n    //process commands\n    //node.warn({\"command\":msg.payload.command,\"msg\":msg,\"object\":msg.payload.object})\n    if (msg.payload.hasOwnProperty(\"command\") && msg.payload.command!=='getTable') {\n        status.fill=\"blue\";\n        switch(msg.payload.command) {\n            case 'deleteTable':\n                flow.set(\"$parent.\"+tableContext.tableData.name,undefined,tableContext.tableData.storage);\n                tableData={};\n                status.text=\"tabledata deleted\";\n                node.warn(\"[ui-table handler] \"+\"tabledata deleted\");\n                break;\n            case 'deleteRow':\n            case 'deleteDevice':\n                var deleteRow = function(id) {\n                    // check if row is in root\n                    if (tableData.hasOwnProperty(id)) {\n                        delete tableData[id]\n                        return true;\n                    }\n                    // check if row is a child\n                    let deleteChildRow = function(children, id) {\n                        for(let i = 0; i < children.length; i++){\n                            if (children[i].hasOwnProperty(tableIndex) && children[i][tableIndex]===id) {\n                                children.splice(i, 1); \n                                return true; \n                            }\n                            if (children[i].hasOwnProperty(\"_children\")) {\n                                if (deleteChildRow(children[i]._children,id)) {\n                                    if (children[i]._children.length === 0) {\n                                        delete children[i]._children;\n                                    }\n                                    return true;\n                                }\n                            }\n                        }\n                        return false;\n                    };\n                    \n                    for (let row in tableData) {\n                        if (tableData[row].hasOwnProperty(\"_children\")) {\n                            if (deleteChildRow(tableData[row]._children,id)) return true;\n                        }\n                    }\n                    return false;\n                }\n                \n                if (deleteRow(msg.payload.object)) {\n                    status.text=msg.payload.object+\" deleted\";\n                } else {\n                    status.fill=\"yellow\";\n                    status.text=msg.payload.object+\" undefined\";\n                }\n                break;\n            case 'ignoreRow':\n            case 'ignoreDevice':\n                if (tableData.hasOwnProperty(msg.payload.object)) {\n                    delete tableData[msg.payload.object];\n                    status.text=msg.payload.object+\" will be ignored\";\n                    if (!tableConfig.hasOwnProperty('ignoreDevice')) tableConfig.ignoreDevice={};\n                    tableConfig.ignoreDevice[msg.payload.object]=true;\n                }\n                break;\n            case 'unIgnoreRow':\n            case 'unIgnoreDevice':\n                if (tableConfig.hasOwnProperty('ignoreDevice')) {\n                    delete tableConfig.ignoreDevice[msg.payload.object];\n                }\n                break;\n            case 'unIgnoreRows':\n            case 'unIgnoreDevices':\n                delete tableConfig.ignoreDevice;\n                break;\n            case 'updateData':\n                status.text=\"column \"+msg.payload.column+\" updated\";\n                delete msg.ui_control;\n                return [{payload:status},msg];\n            case 'updateTable':\n                status.text=msg.payload.command+\": \";\n                break;\n            case 'columnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=false;\n                break;\n            case 'columnUnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=true;\n                break;\n            case 'columnsUnHide':\n                for (let column in tableConfig.columnVisible) {\n                    if (tableConfig.columnVisible.hasOwnProperty(column)) tableConfig.columnVisible[column]=true;\n                }\n                break;\n            case 'refreshTable':\n                break;\n            case 'deleteColumnOrder':\n            case 'restoreColumnOrder':\n                delete tableConfig.columns;\n                break;\n            case 'deleteColumnWidth':\n            case 'resetColumnWidth':\n                delete tableConfig.columnWidths;\n                break;\n            case 'setResponsiveLayout':\n                tableConfig.ResponsiveLayout=!tableConfig.ResponsiveLayout;\n                break;\n            case 'deleteRowOrder':\n                delete tableConfig.rowOrder;\n                break;\n            case 'setMaxStore':\n                tableConfig.maxStore=msg.payload.object;\n                maxStore=msg.payload.object;\n                break;\n            case 'setMaxRows':\n                tableConfig.maxRows=msg.payload.object;\n                maxRows=msg.payload.object;\n                break;\n            default:\n                status.fill=\"red\";\n                status.text=\"unknown command \"+msg.payload.command;\n                node.warn(\"[ui-table handler] \"+status.text);\n                break;\n        }\n        flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n        node.send([{payload:status},null,null]);\n    }\n\n    // crawl through tabulator arrays and updated user defined values\n    var crawlTabulator = function (columns,match,config,property) {\n        for (let column of columns) {\n            if (column.hasOwnProperty(\"columns\")) {\n                crawlTabulator(column.columns,match,config,property);\n            } else if (config.hasOwnProperty(column[match])) column[property]=config[column.field];\n        }\n    };\n    \n    // restore custom column width\n    if (tableConfig.hasOwnProperty(\"columnWidths\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnWidths,\"width\");\n    }\n    \n    // restore custom column hide/show\n    if (tableConfig.hasOwnProperty(\"columnVisible\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnVisible,\"visible\");\n    }\n    \n    // restore custom responsive / standard view\n    if (tableConfig.hasOwnProperty(\"ResponsiveLayout\")) {\n        if (!tableConfig.ResponsiveLayout) {\n            msg.ui_control.tabulator.responsiveLayout=false;\n        }\n        msg.ui_control.tabulator.columns.forEach((column,index) => {\n            if (column.formatter===\"responsiveCollapse\") { // hide expand column on any position\n                column.visible=tableConfig.ResponsiveLayout;\n                return;\n            }\n        });\n    }\n\n    // sort columns\n    if (tableConfig.hasOwnProperty(\"columns\") && msg.hasOwnProperty(\"ui_control\") && msg.ui_control.hasOwnProperty(\"tabulator\")) {\n        var addedColumns = 0;\n        var sortColumnsByLayout = function (sortColumns, columnsLayout, targetColumns) {\n            for (var layoutColumn=0;  layoutColumn<columnsLayout.length; layoutColumn++) {\n                for (var sortColumn in sortColumns) {\n                    if (sortColumns[sortColumn].hasOwnProperty(\"columns\")) {\n                        targetColumns.push({\"title\":sortColumns[sortColumn].title, \"columns\":[]});\n                        sortColumnsByLayout(sortColumns[sortColumn].columns,columnsLayout,targetColumns[targetColumns.length-1].columns);\n                        layoutColumn=addedColumns; // jump forward after childes added\n                    } else {\n                        if (columnsLayout[layoutColumn].field===sortColumns[sortColumn].field){\n                            targetColumns.push(sortColumns[sortColumn]);\n                            addedColumns++;\n                            break;\n                        }\n                    }\n                }\n            }\n        };                 \n        var newColumns=[];\n        sortColumnsByLayout(msg.ui_control.tabulator.columns,tableConfig.columns,newColumns);\n        msg.ui_control.tabulator.columns=newColumns;\n    }\n\n    // restore stored lines after connect\n\n    let command = msg.payload.command;\n    var tableArray;\n    if (command===\"getTable\") {\n        msg.payload.tableArray=[];\n        tableArray=msg.payload.tableArray\n    } else {\n        msg.payload=[];\n        tableArray=msg.payload;\n    }\n    \n    var pushRowData = function(rowData) {\n        // ignore rows in ignoreRows array\n        if (tableConfig && tableConfig.hasOwnProperty(\"ignoreDevice\") && tableConfig.ignoreDevice[rowData]) {\n            // do nothing\n        } else {\n            // merge edits into table\n            if (tableEdit && tableEdit.hasOwnProperty(rowData)) {\n                let tableRow = RED.util.cloneMessage(tableData[rowData]);\n                Object.keys(tableEdit[rowData]).forEach((field) => {\n                    tableRow[field]=tableEdit[rowData][field];\n                });\n                tableArray.push(tableRow);\n            } else {\n                tableArray.push(tableData[rowData]);\n            }\n        }\n    }\n    \n    if (tableConfig.hasOwnProperty(\"rowOrder\")) {\n        // first check if new rows exits which are not in rowOrder\n        Object.keys(tableData).forEach((key) => {\n            if (tableConfig.rowOrder.indexOf(tableData[key][tableIndex])<0) {\n                tableConfig.rowOrder.push(tableData[key][tableIndex]); // add row to the end of rowOrder\n            }\n        });\n        tableConfig.rowOrder.forEach((value,index) => {\n            node.warn([\"pushRowOrder\",value,tableData.hasOwnProperty(value),tableData[value]]);\n            if (tableData.hasOwnProperty(value)) { // push rows in rowOrder sequence\n                pushRowData(value);\n            } else { // delete not existing rows from rowOrder\n                tableConfig.rowOrder.splice(index,1)\n            }\n       });\n    } else {\n        for (let rowData in tableData) {\n            pushRowData(rowData);\n        }\n    }\n    // store the first index if maxRows limits amount of displayed lines\n    if (maxRows>0 && tableData) {\n        let tableKeys=Object.keys(tableData);\n        if (tableKeys.length>0 && typeof tableData[tableKeys[0]][tableIndex] === \"number\") {\n            tableConfig.currentFirstRow=tableData[tableKeys[0]][tableIndex];\n        }\n    }\n    \n    if (command=='getTable'){\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows emitted\";\n        return [{payload:status},null,msg];\n    } else {\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows restored\";\n        return [{payload:status},msg,[{topic:\"maxRows\",payload:maxRows},{topic:\"maxStore\",payload:maxStore}]];\n    }\n} if (msg.hasOwnProperty(\"ui_control\")) {\n    // callback from tabulator\n    status.fill=\"blue\";\n    status.text=\"callback \"+msg.ui_control.callback;\n    switch(msg.ui_control.callback) {\n        case \"columnResized\": // save new column width\n            if (tableConfig.columnWidths===undefined) tableConfig.columnWidths={};\n            tableConfig.columnWidths[msg.ui_control.columnWidths.field]=msg.ui_control.columnWidths.width;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=msg.ui_control.columnWidths.field+\"=\"+msg.ui_control.columnWidths.width+\"px\";\n            break;\n        case \"columnMoved\": // save new column order\n            if (tableConfig.columns===undefined) tableConfig.columns=[];\n            tableConfig.columns=msg.ui_control.columns;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new column order\";\n            break;\n        case \"cellEdited\":\n            if (tableEdit) {\n                if (!tableEdit.hasOwnProperty(msg[tableIndex])) tableEdit[msg[tableIndex]]={};\n                tableEdit[msg[tableIndex]][msg.field] = msg.payload; // save data and mark as edited field\n                flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n                mergeEdits(tableData);\n                flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n                status.text=msg[tableIndex]+\" \"+msg.field+\" edited to \"+msg.payload;\n                msg[tableDataProp]={};\n                msg[tableDataProp][tableIndex]=msg[tableIndex];\n                msg[tableDataProp][msg.field]=msg.payload;\n                msgToTable.payload.arguments=[[msg[tableDataProp]]];\n                node.send([{payload:status},null,msg]); // was node.send([{payload:status},msgToTable,msg]);\n            } else {\n                node.error(\"[ui-table handler] no tableEdit store defined!\")\n            }\n            break;\n        case \"rowContext\":\n            msg.ignoredDevices=[];\n            for (let rowData in tableConfig.ignoreDevice) {\n                if (tableConfig.ignoreDevice.hasOwnProperty(rowData)) {\n                    msg.ignoredDevices.push({\"text\":rowData,\"icon\":\"fa fa-plug\",\"topic\":\"unIgnoreDevice\",\"payload\":rowData})  \n                }\n            }\n            break;\n        case \"headerContext\":\n            msg.hiddenColumns=[];\n            let tabulatorConfig = env.get('tabulator');\n            for (let column in tableConfig.columnVisible) {\n                if (tableConfig.columnVisible.hasOwnProperty(column) &&\n                    !tableConfig.columnVisible[column]) {\n                    let configColumn=searchTabulatorColumn(tabulatorConfig.tabulator.columns,\"field\",column);\n                    let icon;\n                    if (configColumn.hasOwnProperty('title') && configColumn.title.toLowerCase().includes('</i>')) {\n                        // <i class='fa fa-star-half-o'></i> State\n                        let start=configColumn.title.indexOf(\"'fa \");\n                        let end=configColumn.title.indexOf(\"'\",start+1);\n                        icon=configColumn.title.substring(start+4,end);\n                    }\n                    msg.hiddenColumns.push({\"text\":column,\"icon\":icon,\"topic\":\"columnUnHide\",\"payload\":configColumn.field})  \n                }\n            }\n            break;\n        case \"rowMoved\":\n            if (tableConfig.rowOrder===undefined) tableConfig.rowOrder={};\n            tableConfig.rowOrder=msg.ui_control.rowOrder;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new row order\";\n            break;\n        default:\n            // if rowIndex exists pass complete object\n            if (msg.hasOwnProperty(tableIndex)) {\n                msg.rowData=tableData[msg[tableIndex]];\n            }\n            status.text=\"pass message\";\n    }\n    return [{payload:status},null,msg];\n} \nif (Array.isArray(msg.payload)) {\n    tableData={};\n    \n    msg.payload.forEach((row) => {\n        if (row.hasOwnProperty(tableIndex)) {\n            tableData[row[tableIndex]]=row;\n        }\n    });\n    if (msg.keepEdits) {\n        mergeEdits(tableData);\n    }\n\n    \n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n    if (tableContext.hasOwnProperty(\"tableEdit\") && !msg.keepEdits) {\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n    status.fill=\"blue\"\n    status.text=\"table replaced \"+msg.payload.length+\" rows\";\n    return [{payload:status},msg,null];\n}    \n    \n// nothing to do bejond this point\nstatus.text+=\" [\"+msg.payload+\"]\";\nreturn [{payload:status},null];\n",
        "outputs": 3,
        "noerr": 0,
        "x": 192,
        "y": 85,
        "wires": [
            [],
            [],
            []
        ],
        "icon": "font-awesome/fa-table"
    },
    {
        "id": "9a7d39a2.92b6e8",
        "type": "function",
        "z": "ad99b549.c0c208",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "2c0975c6.a6f75a",
        "type": "ui_button",
        "z": "b1aaf5f5.0d31a8",
        "d": true,
        "name": "Map",
        "group": "3dc8a8e5.98d0d8",
        "order": 9,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Map",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "map",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "cdf67037.84ff6"
            ]
        ]
    },
    {
        "id": "cdf67037.84ff6",
        "type": "ui_ui_control",
        "z": "b1aaf5f5.0d31a8",
        "name": "return map",
        "events": "change",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "1718681a.379eb8"
            ]
        ]
    },
    {
        "id": "b2979459.0ebfc8",
        "type": "inject",
        "z": "b1aaf5f5.0d31a8",
        "name": "CREATE",
        "topic": "CREATE TABLE Capteur(CodeSig STRING PRIMARY KEY NOT NULL, Commune STRING, Adresse STRING, name STRING, Flux STRING, Commentary STRING, lat REAL NOT NULL, lon REAL NOT NULL, LastvalueD INT, LastvalueT INT)",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 460,
        "y": 260,
        "wires": [
            [
                "238b49f1.d69266"
            ]
        ]
    },
    {
        "id": "238b49f1.d69266",
        "type": "sqlite",
        "z": "b1aaf5f5.0d31a8",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "test/Level",
        "x": 640,
        "y": 200,
        "wires": [
            [
                "9a26c274.e4f28"
            ]
        ]
    },
    {
        "id": "fe0f12de.2900d",
        "type": "inject",
        "z": "b1aaf5f5.0d31a8",
        "name": "DROP",
        "topic": "DROP table Capteur;",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "238b49f1.d69266"
            ]
        ]
    },
    {
        "id": "e5c62a70.9e7918",
        "type": "function",
        "z": "b1aaf5f5.0d31a8",
        "name": "INSERT",
        "func": "\nvar newMsg = {\n \"topic\": \"INSERT INTO Capteur (CodeSig,Commune,Adresse,name,Flux,Commentary,lat,lon) VALUES ( \" + \"\\'\" + \n msg.payload.CODE_SIG + \"\\'\" + \",\" + \"\\'\" +  \n msg.payload.COMMUNE + \"\\'\" + \",\" + \"\\'\" +  \n msg.payload.ADRESSE + \"\\'\" + \",\" + \"\\'\" + \n msg.payload.NAME + \"\\'\" + \",\" + \"\\'\" + \n msg.payload.FLUX + \"\\'\" + \",\" + \"\\'\" + \n msg.payload.TYPE + \"\\'\" + \",\" + \n msg.payload.Lat + \",\" + \n msg.payload.Long + \")\"\n}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 140,
        "wires": [
            [
                "238b49f1.d69266"
            ]
        ]
    },
    {
        "id": "45df34bc.e6245c",
        "type": "function",
        "z": "b1aaf5f5.0d31a8",
        "name": "Pav",
        "func": "msg.payload.layer = \"Pav\";\nmsg.payload.icon = \"trash\";\n\nif(msg.payload.Niveau < 45){\n    msg.payload.iconColor = \"green\";\n}\nelse if(msg.payload.Niveau >= 45 && msg.payload.Niveau < 70) {\n    msg.payload.iconColor = \"orange\";\n}\nelse if(msg.payload.Niveau >= 70) {\n    msg.payload.iconColor = \"red\";\n}\nelse{\n    msg.payload.iconColor = \"gray\";\n}\n\nmsg.payload.command = { \"button\": { \"name\":\"My Fancy Button\" } };\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 240,
        "wires": [
            [
                "955b645d.0ec838"
            ]
        ]
    },
    {
        "id": "9a26c274.e4f28",
        "type": "split",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 790,
        "y": 200,
        "wires": [
            [
                "45df34bc.e6245c"
            ]
        ]
    },
    {
        "id": "8640c8b3.ec6278",
        "type": "function",
        "z": "b1aaf5f5.0d31a8",
        "name": "SELECT",
        "func": "var newMsg = {\n \"topic\": \"WITH group1 AS (SELECT * FROM capteurs), \\\n           group2 AS (SELECT tt.* FROM Level tt INNER JOIN (SELECT CodeSig, MAX(Time) AS MaxDateTime FROM Level GROUP BY CodeSig) groupedtt  ON tt.CodeSig = groupedtt.CodeSig AND tt.Time = groupedtt.MaxDateTime) \\\n           SELECT * FROM group1 JOIN group2 ON group1.name = group2.name\"\n}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 180,
        "wires": [
            [
                "238b49f1.d69266"
            ]
        ]
    },
    {
        "id": "1718681a.379eb8",
        "type": "delay",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 280,
        "y": 160,
        "wires": [
            [
                "8640c8b3.ec6278"
            ]
        ]
    },
    {
        "id": "ac11403c.97709",
        "type": "comment",
        "z": "b1aaf5f5.0d31a8",
        "name": "MAP",
        "info": "",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "955b645d.0ec838",
        "type": "worldmap",
        "z": "b1aaf5f5.0d31a8",
        "name": "parkingmap",
        "lat": "42.7757",
        "lon": "2.8455",
        "zoom": "11",
        "layer": "OSM",
        "cluster": "0",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "hiderightclick": "false",
        "coords": "deg",
        "path": "parkingmap",
        "x": 850,
        "y": 280,
        "wires": []
    },
    {
        "id": "86f87d7f.dd92b",
        "type": "ui_worldmap",
        "z": "b1aaf5f5.0d31a8",
        "group": "c69b85fc.c131f8",
        "order": 1,
        "width": 19,
        "height": 15,
        "name": "parkingmap",
        "lat": "42.7757",
        "lon": "2.8455",
        "zoom": "11",
        "layer": "OSM",
        "cluster": "11",
        "maxage": "",
        "usermenu": "hide",
        "layers": "hide",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "deg",
        "showgrid": "false",
        "path": "/parkingmap",
        "x": 850,
        "y": 340,
        "wires": []
    },
    {
        "id": "f79affc8.7c433",
        "type": "worldmap in",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "path": "/parkingmap",
        "events": "all",
        "x": 230,
        "y": 620,
        "wires": [
            [
                "a78b41ae.2c6be",
                "6b827cb6.538314"
            ]
        ]
    },
    {
        "id": "a78b41ae.2c6be",
        "type": "debug",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 390,
        "y": 620,
        "wires": []
    },
    {
        "id": "bf4e3bdf.000cf8",
        "type": "ui_text",
        "z": "b1aaf5f5.0d31a8",
        "group": "c69b85fc.c131f8",
        "order": 7,
        "width": 11,
        "height": 1,
        "name": "Numéro de place",
        "label": "Numéro de place : ",
        "format": "{{msg.payload[0].CodeSig}}",
        "layout": "row-center",
        "x": 490,
        "y": 740,
        "wires": []
    },
    {
        "id": "7c8fe8c9.18adf8",
        "type": "sqlite",
        "z": "b1aaf5f5.0d31a8",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Alert/Level",
        "x": 270,
        "y": 760,
        "wires": [
            [
                "bf4e3bdf.000cf8",
                "ba1206e3.2d88a8",
                "82c38c90.606d7"
            ]
        ]
    },
    {
        "id": "b7ee46e8.a7f9b8",
        "type": "function",
        "z": "b1aaf5f5.0d31a8",
        "name": "alerte",
        "func": "msg.topic = 'ambient_temperature';\nglobal.set(\"nest1_ambient_temperature\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 720,
        "wires": [
            [
                "e27009df.362df8",
                "39c2d204.cfc75e"
            ]
        ]
    },
    {
        "id": "ba1206e3.2d88a8",
        "type": "function",
        "z": "b1aaf5f5.0d31a8",
        "name": "target_temperature",
        "func": "msg.topic = 'target_temperature';\nglobal.set(\"nest1_target_temperature\",msg.payload[0].Niveau);\nglobal.set(\"nest1_ambient_temperature\",msg.payload[0].Alert);\nglobal.set(\"CodeSig_for_Alert\",msg.payload[0].CodeSig);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 780,
        "wires": [
            [
                "e27009df.362df8",
                "9422c48.bb48938",
                "238f1933.9c5616"
            ]
        ]
    },
    {
        "id": "e27009df.362df8",
        "type": "function",
        "z": "b1aaf5f5.0d31a8",
        "name": "Data",
        "func": "if (msg.topic == \"target_temperature\") {\n    //global.set(\"nest1_target_temperature\",msg.payload);\n}\n\nif(global.get(\"nest1_ambient_temperature\") < global.get(\"nest1_target_temperature\")) {\n    global.set(\"nest1_hvac_state\",\"heating\");\n}\nelse {\n    global.set(\"nest1_hvac_state\",\"cooling\");\n}\n    \n    \nmsg.topic = \"update\";\nvar data = {\n    'ambient_temperature': global.get(\"nest1_ambient_temperature\"),\n    'target_temperature': global.get(\"nest1_target_temperature\"),\n    'hvac_state': global.get(\"nest1_hvac_state\") || 'off',\n    'has_leaf': global.get(\"nest1_has_leaf\") || 'false',\n    'away': global.get(\"nest1_away\") || 'false'\n}\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 760,
        "wires": [
            [
                "92f654e.ee0b0a8"
            ]
        ]
    },
    {
        "id": "fce36d49.05b98",
        "type": "ui_slider",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "label": "Alerte",
        "tooltip": "",
        "group": "c69b85fc.c131f8",
        "order": 46,
        "width": 11,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 690,
        "y": 600,
        "wires": [
            [
                "ab5d6386.a52e2"
            ]
        ]
    },
    {
        "id": "94967f14.75936",
        "type": "ui_button",
        "z": "b1aaf5f5.0d31a8",
        "name": "Valide",
        "group": "c69b85fc.c131f8",
        "order": 43,
        "width": 11,
        "height": 1,
        "passthru": false,
        "label": "Valider le seuil d'alerte",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "textInput",
        "payloadType": "flow",
        "topic": "",
        "x": 690,
        "y": 680,
        "wires": [
            [
                "b7ee46e8.a7f9b8",
                "909b695f.103898"
            ]
        ]
    },
    {
        "id": "ab5d6386.a52e2",
        "type": "change",
        "z": "b1aaf5f5.0d31a8",
        "name": "Change",
        "rules": [
            {
                "t": "set",
                "p": "textInput",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 640,
        "wires": [
            [
                "94967f14.75936"
            ]
        ]
    },
    {
        "id": "909b695f.103898",
        "type": "ui_toast",
        "z": "b1aaf5f5.0d31a8",
        "position": "top left",
        "displayTime": "2",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Sauvegarde de l'alerte en cours...",
        "name": "",
        "x": 890,
        "y": 740,
        "wires": []
    },
    {
        "id": "39c2d204.cfc75e",
        "type": "function",
        "z": "b1aaf5f5.0d31a8",
        "name": "Query",
        "func": "\n\n\n\nvar newMsg = {\n \"topic\": \n\"INSERT OR REPLACE INTO Alert (CodeSig, Alert) VALUES ('\" + global.get(\"CodeSig_for_Alert\") + \"',\" +\nglobal.get(\"nest1_ambient_temperature\") + \"); \" \n \n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 850,
        "y": 780,
        "wires": [
            [
                "fcf0a4ab.55a5f8"
            ]
        ]
    },
    {
        "id": "fcf0a4ab.55a5f8",
        "type": "sqlite",
        "z": "b1aaf5f5.0d31a8",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Alert",
        "x": 990,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "82c38c90.606d7",
        "type": "debug",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 470,
        "y": 820,
        "wires": []
    },
    {
        "id": "63a8723b.d321cc",
        "type": "comment",
        "z": "b1aaf5f5.0d31a8",
        "name": "GAUGE",
        "info": "",
        "x": 540,
        "y": 600,
        "wires": []
    },
    {
        "id": "2120fb81.75ca34",
        "type": "function",
        "z": "b1aaf5f5.0d31a8",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),Niveau,Temperature,Level.CodeSig, Alert FROM Level LEFT JOIN Alert ON (Alert.CodeSig = Level.CodeSig) WHERE Level.Name = \" + \"\\'\" + msg.payload.name + \"\\'\" + \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 230,
        "y": 720,
        "wires": [
            [
                "7c8fe8c9.18adf8"
            ]
        ]
    },
    {
        "id": "293a5ad8.3ca9e6",
        "type": "ui_chart",
        "z": "b1aaf5f5.0d31a8",
        "name": "Chart",
        "group": "c69b85fc.c131f8",
        "order": 8,
        "width": 11,
        "height": 7,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 630,
        "y": 1080,
        "wires": [
            [
                "d570798.50c1688"
            ]
        ]
    },
    {
        "id": "cc26bd88.ac0af",
        "type": "debug",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 1020,
        "wires": []
    },
    {
        "id": "fb42503c.c2496",
        "type": "sqlite",
        "z": "b1aaf5f5.0d31a8",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Level",
        "x": 410,
        "y": 1020,
        "wires": [
            [
                "a6646f22.5acdc"
            ]
        ]
    },
    {
        "id": "a6646f22.5acdc",
        "type": "function",
        "z": "b1aaf5f5.0d31a8",
        "name": "fill chart",
        "func": "/* Get data chart in array */\nvar msg1 = {};\nmsg1.payload = flow.get(\"chartarray\");\n\n/* Get new data in array */\nvar series = msg.payload[0].CodeSig;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].Time*1000) + ', \"y\":' + msg.payload[i].Niveau + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 1020,
        "wires": [
            [
                "cc26bd88.ac0af",
                "293a5ad8.3ca9e6"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "9af8a990.2277a8",
        "type": "function",
        "z": "b1aaf5f5.0d31a8",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT Time,CodeSig,Niveau FROM Level WHERE Name = \" + \"\\'\" + msg.payload.name + \"\\'\" + \" order by Level.Time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 1020,
        "wires": [
            [
                "fb42503c.c2496"
            ]
        ]
    },
    {
        "id": "f3eedd9e.f01bd",
        "type": "function",
        "z": "b1aaf5f5.0d31a8",
        "name": "save chart",
        "func": "flow.set(\"chartarray\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 1060,
        "wires": [
            []
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "8be78fc6.57b73",
        "type": "function",
        "z": "b1aaf5f5.0d31a8",
        "name": "flush chart",
        "func": "msg.payload = [];\nmsg.ui_control = {\"options\":{\"scales\":{\"xAxes\":[{\"type\":\"time\",\"time\":{}}]}}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 1060,
        "wires": [
            [
                "293a5ad8.3ca9e6"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "faf4af0.3c99d5",
        "type": "ui_button",
        "z": "b1aaf5f5.0d31a8",
        "d": true,
        "name": "reset",
        "group": "6230babe.5dfca4",
        "order": 18,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Reset graphique",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 250,
        "y": 1060,
        "wires": [
            [
                "8be78fc6.57b73"
            ]
        ]
    },
    {
        "id": "f47dc6e0.760608",
        "type": "comment",
        "z": "b1aaf5f5.0d31a8",
        "name": "CHART",
        "info": "",
        "x": 170,
        "y": 960,
        "wires": []
    },
    {
        "id": "afea1aa8.c1ecc8",
        "type": "ui_date_picker",
        "z": "b1aaf5f5.0d31a8",
        "d": true,
        "name": "",
        "label": "debut",
        "group": "6230babe.5dfca4",
        "order": 22,
        "width": 4,
        "height": 1,
        "passthru": true,
        "topic": "min",
        "x": 250,
        "y": 1140,
        "wires": [
            [
                "685f1293.5b75dc"
            ]
        ]
    },
    {
        "id": "69127265.a1f51c",
        "type": "ui_date_picker",
        "z": "b1aaf5f5.0d31a8",
        "d": true,
        "name": "",
        "label": "fin",
        "group": "6230babe.5dfca4",
        "order": 19,
        "width": 4,
        "height": 1,
        "passthru": true,
        "topic": "max",
        "x": 250,
        "y": 1100,
        "wires": [
            [
                "685f1293.5b75dc"
            ]
        ]
    },
    {
        "id": "d570798.50c1688",
        "type": "debug",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 1100,
        "wires": []
    },
    {
        "id": "783c1c39.7a7bb4",
        "type": "function",
        "z": "b1aaf5f5.0d31a8",
        "name": "change date",
        "func": "//to change ymax\nif (msg.topic === \"max\") {\n    var max=msg.payload;\n    flow.set(\"maxdate\",max);\n    return msg;\n}\n//to change ymin\nif (msg.topic === \"min\") {\n    var min= msg.payload;\n    flow.set(\"chartarray\",min);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "5902f459.7aa7bc",
        "type": "debug",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 1160,
        "wires": []
    },
    {
        "id": "685f1293.5b75dc",
        "type": "function",
        "z": "b1aaf5f5.0d31a8",
        "name": "change date",
        "func": "//to change ymax\nif (msg.topic === \"max\") {\n    flow.set(\"maxtime2\",msg.payload);\n    var msg1 = {};\n    msg1.payload = flow.get(\"mintime2\");\n    msg.ui_control = {\"options\":{\"scales\":{\"xAxes\":[{\"type\":\"time\",\"time\":{\"min\":msg1.payload,\"max\":msg.payload}}]}}}\n    delete msg.payload;\n    return msg;\n}\n//to change ymin\nif (msg.topic === \"min\") {\n    flow.set(\"mintime2\",msg.payload);\n    var msg2 = {};\n    msg2.payload = flow.get(\"maxtime2\");\n    msg.ui_control = {\"options\":{\"scales\":{\"xAxes\":[{\"type\":\"time\",\"time\":{\"min\":msg.payload,\"max\":msg2.payload}}]}}}\n    delete msg.payload;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 1120,
        "wires": [
            [
                "5902f459.7aa7bc",
                "293a5ad8.3ca9e6"
            ]
        ]
    },
    {
        "id": "6b827cb6.538314",
        "type": "link out",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "links": [
            "1c2b7c40.cffc54",
            "b3ffd388.f9d1d",
            "d95ecb7d.0332a8"
        ],
        "x": 335,
        "y": 580,
        "wires": []
    },
    {
        "id": "1c2b7c40.cffc54",
        "type": "link in",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "links": [
            "6b827cb6.538314",
            "bbe2d06d.9b4d2"
        ],
        "x": 135,
        "y": 720,
        "wires": [
            [
                "2120fb81.75ca34",
                "2e6523d.0a685dc"
            ]
        ]
    },
    {
        "id": "b3ffd388.f9d1d",
        "type": "link in",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "links": [
            "6b827cb6.538314",
            "bbe2d06d.9b4d2"
        ],
        "x": 140,
        "y": 1020,
        "wires": [
            [
                "9af8a990.2277a8"
            ]
        ]
    },
    {
        "id": "92f654e.ee0b0a8",
        "type": "debug",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 890,
        "y": 840,
        "wires": []
    },
    {
        "id": "238f1933.9c5616",
        "type": "ui_artlessgauge",
        "z": "b1aaf5f5.0d31a8",
        "group": "c69b85fc.c131f8",
        "order": 19,
        "width": 5,
        "height": 5,
        "name": "Niveau",
        "icon": "",
        "label": "Pourcentage de remplissage",
        "unit": "",
        "layout": "radial",
        "decimals": 0,
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].Niveau",
        "sectors": [
            {
                "val": 0,
                "col": "#bbb9bb",
                "t": "min",
                "dot": 0
            },
            {
                "val": 1,
                "col": "#18d100",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 20,
                "col": "#fbff1f",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 60,
                "col": "#dbbe00",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 75,
                "col": "#ff0d00",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#ff0d00",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 680,
        "y": 840,
        "wires": []
    },
    {
        "id": "9422c48.bb48938",
        "type": "ui_artlessgauge",
        "z": "b1aaf5f5.0d31a8",
        "group": "c69b85fc.c131f8",
        "order": 18,
        "width": 3,
        "height": 3,
        "name": "temperature",
        "icon": "",
        "label": "Temperature",
        "unit": "",
        "layout": "radial",
        "decimals": 0,
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].Temperature",
        "sectors": [
            {
                "val": -20,
                "col": "#8c8b8d",
                "t": "min",
                "dot": 0
            },
            {
                "val": 15,
                "col": "#7301fe",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 17,
                "col": "#e7ff33",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 25,
                "col": "#fdd512",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 35,
                "col": "#ff0a0a",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#ff0a0a",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "3",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 690,
        "y": 800,
        "wires": []
    },
    {
        "id": "8f967b52.7b0e38",
        "type": "ui_artlessgauge",
        "z": "b1aaf5f5.0d31a8",
        "group": "c69b85fc.c131f8",
        "order": 22,
        "width": 3,
        "height": 3,
        "name": "Battery",
        "icon": "",
        "label": "Batterie",
        "unit": "",
        "layout": "radial",
        "decimals": 0,
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].Battery",
        "sectors": [
            {
                "val": 0,
                "col": "#f90101",
                "t": "min",
                "dot": 0
            },
            {
                "val": 25,
                "col": "#f64c4c",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 50,
                "col": "#ffad1f",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 75,
                "col": "#f7f022",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#11ff00",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#11ff00",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 680,
        "y": 880,
        "wires": []
    },
    {
        "id": "93768066.d003f",
        "type": "sqlite",
        "z": "b1aaf5f5.0d31a8",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Capteurs",
        "x": 260,
        "y": 840,
        "wires": [
            [
                "9934ae11.af345",
                "8f967b52.7b0e38"
            ]
        ]
    },
    {
        "id": "2e6523d.0a685dc",
        "type": "function",
        "z": "b1aaf5f5.0d31a8",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT Capteurs.Battery FROM Capteurs WHERE Capteurs.Name = \" + \"\\'\" + msg.payload.name + \"\\'\" + \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 230,
        "y": 800,
        "wires": [
            [
                "93768066.d003f"
            ]
        ]
    },
    {
        "id": "9934ae11.af345",
        "type": "debug",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 430,
        "y": 880,
        "wires": []
    },
    {
        "id": "8e13dbb6.c20dc8",
        "type": "link in",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "links": [
            "863fc342.88dbb"
        ],
        "x": 695,
        "y": 280,
        "wires": [
            [
                "955b645d.0ec838"
            ]
        ]
    },
    {
        "id": "76a394dd.1c80fc",
        "type": "ui_template",
        "z": "b1aaf5f5.0d31a8",
        "group": "c69b85fc.c131f8",
        "name": "Dashboard stylesheet",
        "order": 25,
        "width": 4,
        "height": 1,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n.coloredIcon.red{\n    color :red;\n}\n    .coloredIcon.blue{\n    color :blue;\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 300,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "6961bea6.98d9a",
        "type": "ui_ui_control",
        "z": "b1aaf5f5.0d31a8",
        "name": "return Admin",
        "events": "change",
        "x": 190,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "f796ce2c.dbdf5",
        "type": "ui_button",
        "z": "b1aaf5f5.0d31a8",
        "d": true,
        "name": "R map",
        "group": "6230babe.5dfca4",
        "order": 16,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-arrow-left",
        "payload": "Administration Pav",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "6961bea6.98d9a"
            ]
        ]
    },
    {
        "id": "fe712a39.53f078",
        "type": "ui_text",
        "z": "b1aaf5f5.0d31a8",
        "group": "c69b85fc.c131f8",
        "order": 4,
        "width": 6,
        "height": 2,
        "name": "Place disponibles",
        "label": "Place disponibles",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1350,
        "y": 80,
        "wires": []
    },
    {
        "id": "aae7efb2.e483b",
        "type": "inject",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1160,
        "y": 80,
        "wires": [
            [
                "fe712a39.53f078"
            ]
        ]
    },
    {
        "id": "26370151.502f8e",
        "type": "ui_text",
        "z": "b1aaf5f5.0d31a8",
        "group": "c69b85fc.c131f8",
        "order": 5,
        "width": 5,
        "height": 2,
        "name": "Place totales",
        "label": "Place totales",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1330,
        "y": 120,
        "wires": []
    },
    {
        "id": "e1855bf5.3ee568",
        "type": "inject",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1150,
        "y": 120,
        "wires": [
            [
                "26370151.502f8e"
            ]
        ]
    },
    {
        "id": "1dd4bc37.1cffc4",
        "type": "ui_text",
        "z": "b1aaf5f5.0d31a8",
        "group": "c69b85fc.c131f8",
        "order": 2,
        "width": 11,
        "height": 1,
        "name": "disponibilité",
        "label": "<font color=lightgreen><i class=\"fa fa-circle fa-2x\"></i></font>Disponibilité",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "x": 1330,
        "y": 160,
        "wires": []
    },
    {
        "id": "a2149a9e.d039a8",
        "type": "inject",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1160,
        "y": 160,
        "wires": [
            [
                "1dd4bc37.1cffc4"
            ]
        ]
    },
    {
        "id": "2ec5410d.861c1e",
        "type": "ui_text",
        "z": "b1aaf5f5.0d31a8",
        "group": "c69b85fc.c131f8",
        "order": 3,
        "width": 11,
        "height": 1,
        "name": "occupation",
        "label": "<font color=#E53935><i class=\"fa fa-circle fa-2x\"></i></font>Occupation",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "x": 1330,
        "y": 200,
        "wires": []
    },
    {
        "id": "16f26066.62a5f",
        "type": "inject",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "topic": "",
        "payload": "80",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1150,
        "y": 200,
        "wires": [
            [
                "2ec5410d.861c1e"
            ]
        ]
    },
    {
        "id": "d95ecb7d.0332a8",
        "type": "link in",
        "z": "b1aaf5f5.0d31a8",
        "name": "",
        "links": [
            "6b827cb6.538314",
            "bbe2d06d.9b4d2"
        ],
        "x": 1095,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "7d3ea6e7.9201e8",
        "type": "ui_text",
        "z": "b1aaf5f5.0d31a8",
        "group": "c69b85fc.c131f8",
        "order": 10,
        "width": 5,
        "height": 2,
        "name": "disponibilité2",
        "label": "<font color=lightgreen><i class=\"fa fa-circle fa-2x\"></i></font>Disponibilité",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "x": 1330,
        "y": 240,
        "wires": []
    },
    {
        "id": "8ff93ca2.7eaab",
        "type": "ui_text",
        "z": "b1aaf5f5.0d31a8",
        "group": "c69b85fc.c131f8",
        "order": 9,
        "width": 6,
        "height": 2,
        "name": "occupation2",
        "label": "<font color=#E53935><i class=\"fa fa-circle fa-2x\"></i></font>Occupation",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "x": 1330,
        "y": 280,
        "wires": []
    },
    {
        "id": "1965ff13.b94de1",
        "type": "ui_button",
        "z": "b31a2ba7.4795e8",
        "d": true,
        "name": "Map",
        "group": "3dc8a8e5.98d0d8",
        "order": 10,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Map",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "map",
        "payloadType": "str",
        "topic": "",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "d57a9cfe.34c04"
            ]
        ]
    },
    {
        "id": "d57a9cfe.34c04",
        "type": "ui_ui_control",
        "z": "b31a2ba7.4795e8",
        "d": true,
        "name": "return map",
        "events": "change",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "a31898c8.0e30b8"
            ]
        ]
    },
    {
        "id": "6b48274f.42fd08",
        "type": "inject",
        "z": "b31a2ba7.4795e8",
        "name": "CREATE",
        "topic": "CREATE TABLE Capteur(CodeSig STRING PRIMARY KEY NOT NULL, Commune STRING, Adresse STRING, name STRING, Flux STRING, Commentary STRING, lat REAL NOT NULL, lon REAL NOT NULL, LastvalueD INT, LastvalueT INT)",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 440,
        "y": 260,
        "wires": [
            [
                "2591ea41.462926"
            ]
        ]
    },
    {
        "id": "2591ea41.462926",
        "type": "sqlite",
        "z": "b31a2ba7.4795e8",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "test/Level",
        "x": 620,
        "y": 200,
        "wires": [
            [
                "ab7d7cc3.72439"
            ]
        ]
    },
    {
        "id": "1b831df7.c5c9c2",
        "type": "inject",
        "z": "b31a2ba7.4795e8",
        "name": "DROP",
        "topic": "DROP table Capteur;",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 450,
        "y": 220,
        "wires": [
            [
                "2591ea41.462926"
            ]
        ]
    },
    {
        "id": "62731eb9.6178e",
        "type": "function",
        "z": "b31a2ba7.4795e8",
        "name": "INSERT",
        "func": "\nvar newMsg = {\n \"topic\": \"INSERT INTO Capteur (CodeSig,Commune,Adresse,name,Flux,Commentary,lat,lon) VALUES ( \" + \"\\'\" + \n msg.payload.CODE_SIG + \"\\'\" + \",\" + \"\\'\" +  \n msg.payload.COMMUNE + \"\\'\" + \",\" + \"\\'\" +  \n msg.payload.ADRESSE + \"\\'\" + \",\" + \"\\'\" + \n msg.payload.NAME + \"\\'\" + \",\" + \"\\'\" + \n msg.payload.FLUX + \"\\'\" + \",\" + \"\\'\" + \n msg.payload.TYPE + \"\\'\" + \",\" + \n msg.payload.Lat + \",\" + \n msg.payload.Long + \")\"\n}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 140,
        "wires": [
            [
                "2591ea41.462926"
            ]
        ]
    },
    {
        "id": "a880e7a3.392f28",
        "type": "function",
        "z": "b31a2ba7.4795e8",
        "name": "Pav",
        "func": "msg.payload.layer = \"Pav\";\nmsg.payload.icon = \"trash\";\n\nif(msg.payload.Niveau < 45){\n    msg.payload.iconColor = \"green\";\n}\nelse if(msg.payload.Niveau >= 45 && msg.payload.Niveau < 70) {\n    msg.payload.iconColor = \"orange\";\n}\nelse if(msg.payload.Niveau >= 70) {\n    msg.payload.iconColor = \"red\";\n}\nelse{\n    msg.payload.iconColor = \"gray\";\n}\n\nmsg.payload.command = { \"button\": { \"name\":\"My Fancy Button\" } };\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 240,
        "wires": [
            [
                "702b4cd0.0a7ed4"
            ]
        ]
    },
    {
        "id": "ab7d7cc3.72439",
        "type": "split",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 200,
        "wires": [
            [
                "a880e7a3.392f28"
            ]
        ]
    },
    {
        "id": "6bbd20d1.15b7a",
        "type": "function",
        "z": "b31a2ba7.4795e8",
        "name": "SELECT",
        "func": "var newMsg = {\n \"topic\": \"WITH group1 AS (SELECT * FROM capteurs), \\\n           group2 AS (SELECT tt.* FROM Level tt INNER JOIN (SELECT CodeSig, MAX(Time) AS MaxDateTime FROM Level GROUP BY CodeSig) groupedtt  ON tt.CodeSig = groupedtt.CodeSig AND tt.Time = groupedtt.MaxDateTime) \\\n           SELECT * FROM group1 JOIN group2 ON group1.name = group2.name\"\n}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 180,
        "wires": [
            [
                "2591ea41.462926"
            ]
        ]
    },
    {
        "id": "a31898c8.0e30b8",
        "type": "delay",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 260,
        "y": 160,
        "wires": [
            [
                "6bbd20d1.15b7a"
            ]
        ]
    },
    {
        "id": "b48e8af8.a21e98",
        "type": "comment",
        "z": "b31a2ba7.4795e8",
        "name": "MAP conso",
        "info": "",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "702b4cd0.0a7ed4",
        "type": "worldmap",
        "z": "b31a2ba7.4795e8",
        "name": "parkingmap",
        "lat": "42.7757",
        "lon": "2.8455",
        "zoom": "11",
        "layer": "OSM",
        "cluster": "0",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "hiderightclick": "false",
        "coords": "deg",
        "path": "parkingmap",
        "x": 830,
        "y": 280,
        "wires": []
    },
    {
        "id": "cbcb101f.119db",
        "type": "ui_worldmap",
        "z": "b31a2ba7.4795e8",
        "group": "555840c7.590ee",
        "order": 1,
        "width": 19,
        "height": 15,
        "name": "parkingmap",
        "lat": "42.7757",
        "lon": "2.8455",
        "zoom": "11",
        "layer": "OSM",
        "cluster": "11",
        "maxage": "",
        "usermenu": "hide",
        "layers": "hide",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "deg",
        "showgrid": "false",
        "path": "/parkingmap",
        "x": 830,
        "y": 340,
        "wires": []
    },
    {
        "id": "e1db06b4.943438",
        "type": "worldmap in",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "path": "/parkingmap",
        "events": "all",
        "x": 210,
        "y": 620,
        "wires": [
            [
                "37b1363c.0aba0a",
                "8918b781.532688"
            ]
        ]
    },
    {
        "id": "37b1363c.0aba0a",
        "type": "debug",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 370,
        "y": 620,
        "wires": []
    },
    {
        "id": "93c4228b.c92e5",
        "type": "ui_text",
        "z": "b31a2ba7.4795e8",
        "group": "555840c7.590ee",
        "order": 8,
        "width": 11,
        "height": 1,
        "name": "Numéro de place",
        "label": "Numéro de place : ",
        "format": "{{msg.payload[0].CodeSig}}",
        "layout": "row-center",
        "x": 470,
        "y": 740,
        "wires": []
    },
    {
        "id": "5ce5a5f1.c4e10c",
        "type": "sqlite",
        "z": "b31a2ba7.4795e8",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Alert/Level",
        "x": 250,
        "y": 760,
        "wires": [
            [
                "93c4228b.c92e5",
                "3cc1ce14.1abe32",
                "5e6ccdb4.b44984"
            ]
        ]
    },
    {
        "id": "698fb14d.f313b",
        "type": "function",
        "z": "b31a2ba7.4795e8",
        "name": "alerte",
        "func": "msg.topic = 'ambient_temperature';\nglobal.set(\"nest1_ambient_temperature\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 720,
        "wires": [
            [
                "5515c001.62162",
                "4c2781b6.1200e"
            ]
        ]
    },
    {
        "id": "3cc1ce14.1abe32",
        "type": "function",
        "z": "b31a2ba7.4795e8",
        "name": "target_temperature",
        "func": "msg.topic = 'target_temperature';\nglobal.set(\"nest1_target_temperature\",msg.payload[0].Niveau);\nglobal.set(\"nest1_ambient_temperature\",msg.payload[0].Alert);\nglobal.set(\"CodeSig_for_Alert\",msg.payload[0].CodeSig);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 780,
        "wires": [
            [
                "5515c001.62162",
                "5345d159.6951a",
                "4cf696f6.6588d8"
            ]
        ]
    },
    {
        "id": "5515c001.62162",
        "type": "function",
        "z": "b31a2ba7.4795e8",
        "name": "Data",
        "func": "if (msg.topic == \"target_temperature\") {\n    //global.set(\"nest1_target_temperature\",msg.payload);\n}\n\nif(global.get(\"nest1_ambient_temperature\") < global.get(\"nest1_target_temperature\")) {\n    global.set(\"nest1_hvac_state\",\"heating\");\n}\nelse {\n    global.set(\"nest1_hvac_state\",\"cooling\");\n}\n    \n    \nmsg.topic = \"update\";\nvar data = {\n    'ambient_temperature': global.get(\"nest1_ambient_temperature\"),\n    'target_temperature': global.get(\"nest1_target_temperature\"),\n    'hvac_state': global.get(\"nest1_hvac_state\") || 'off',\n    'has_leaf': global.get(\"nest1_has_leaf\") || 'false',\n    'away': global.get(\"nest1_away\") || 'false'\n}\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 760,
        "wires": [
            [
                "b3ed738b.c2d03"
            ]
        ]
    },
    {
        "id": "73e2ec34.f9cac4",
        "type": "ui_slider",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "label": "Alerte",
        "tooltip": "",
        "group": "555840c7.590ee",
        "order": 39,
        "width": 11,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 670,
        "y": 600,
        "wires": [
            [
                "84cb06b8.171568"
            ]
        ]
    },
    {
        "id": "ace47514.79b008",
        "type": "ui_button",
        "z": "b31a2ba7.4795e8",
        "name": "Valide",
        "group": "555840c7.590ee",
        "order": 37,
        "width": 11,
        "height": 1,
        "passthru": false,
        "label": "Valider le seuil d'alerte",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "textInput",
        "payloadType": "flow",
        "topic": "",
        "x": 670,
        "y": 680,
        "wires": [
            [
                "698fb14d.f313b",
                "1243d875.c73be8"
            ]
        ]
    },
    {
        "id": "84cb06b8.171568",
        "type": "change",
        "z": "b31a2ba7.4795e8",
        "name": "Change",
        "rules": [
            {
                "t": "set",
                "p": "textInput",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 640,
        "wires": [
            [
                "ace47514.79b008"
            ]
        ]
    },
    {
        "id": "1243d875.c73be8",
        "type": "ui_toast",
        "z": "b31a2ba7.4795e8",
        "position": "top left",
        "displayTime": "2",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Sauvegarde de l'alerte en cours...",
        "name": "",
        "x": 870,
        "y": 740,
        "wires": []
    },
    {
        "id": "4c2781b6.1200e",
        "type": "function",
        "z": "b31a2ba7.4795e8",
        "name": "Query",
        "func": "\n\n\n\nvar newMsg = {\n \"topic\": \n\"INSERT OR REPLACE INTO Alert (CodeSig, Alert) VALUES ('\" + global.get(\"CodeSig_for_Alert\") + \"',\" +\nglobal.get(\"nest1_ambient_temperature\") + \"); \" \n \n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 780,
        "wires": [
            [
                "c842552c.840538"
            ]
        ]
    },
    {
        "id": "c842552c.840538",
        "type": "sqlite",
        "z": "b31a2ba7.4795e8",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Alert",
        "x": 970,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "5e6ccdb4.b44984",
        "type": "debug",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 450,
        "y": 820,
        "wires": []
    },
    {
        "id": "e42954e4.2ae598",
        "type": "comment",
        "z": "b31a2ba7.4795e8",
        "name": "GAUGE",
        "info": "",
        "x": 520,
        "y": 600,
        "wires": []
    },
    {
        "id": "87fae07b.f64d8",
        "type": "function",
        "z": "b31a2ba7.4795e8",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT MAX(Time),Niveau,Temperature,Level.CodeSig, Alert FROM Level LEFT JOIN Alert ON (Alert.CodeSig = Level.CodeSig) WHERE Level.Name = \" + \"\\'\" + msg.payload.name + \"\\'\" + \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 720,
        "wires": [
            [
                "5ce5a5f1.c4e10c"
            ]
        ]
    },
    {
        "id": "807c2fc7.ded8f",
        "type": "ui_chart",
        "z": "b31a2ba7.4795e8",
        "name": "Chart",
        "group": "555840c7.590ee",
        "order": 9,
        "width": 11,
        "height": 7,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "D/MM/Y HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#a05ddf",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 610,
        "y": 1080,
        "wires": [
            [
                "f5a6664f.bc2508"
            ]
        ]
    },
    {
        "id": "6f14d0d1.b5244",
        "type": "debug",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 770,
        "y": 1020,
        "wires": []
    },
    {
        "id": "8ef04ac3.a294a8",
        "type": "sqlite",
        "z": "b31a2ba7.4795e8",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Level",
        "x": 390,
        "y": 1020,
        "wires": [
            [
                "2dfb8d99.10d322"
            ]
        ]
    },
    {
        "id": "2dfb8d99.10d322",
        "type": "function",
        "z": "b31a2ba7.4795e8",
        "name": "fill chart",
        "func": "/* Get data chart in array */\nvar msg1 = {};\nmsg1.payload = flow.get(\"chartarray\");\n\n/* Get new data in array */\nvar series = msg.payload[0].CodeSig;\n\nvar data = \"[\";  \nfor (var i=0; i < msg.payload.length; i++) {  \n    data += '{ \"x\":' + (msg.payload[i].Time*1000) + ', \"y\":' + msg.payload[i].Niveau + '}';  \n    if (i < (msg.payload.length - 1)) {  \n        data += \",\"  \n    } else {  \n        data += \"]\"  \n    }  \n}\nvar jsondata = JSON.parse(data);\n\n/* if new chart add only new data */\n\n    var chart2 = [{\n    \"series\":[series],\n    \"data\": [jsondata],\n    \"labels\":\"\"\n    }];\n    msg.payload = chart2;\n\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 1020,
        "wires": [
            [
                "6f14d0d1.b5244",
                "807c2fc7.ded8f"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "3799b729.ecaa38",
        "type": "function",
        "z": "b31a2ba7.4795e8",
        "name": "Select",
        "func": "var newMsg = {\n \"topic\": \"SELECT Time,CodeSig,Niveau FROM Level WHERE Name = \" + \"\\'\" + msg.payload.name + \"\\'\" + \" order by Level.Time desc limit 50 \"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 230,
        "y": 1020,
        "wires": [
            [
                "8ef04ac3.a294a8"
            ]
        ]
    },
    {
        "id": "415964b7.354d0c",
        "type": "function",
        "z": "b31a2ba7.4795e8",
        "name": "save chart",
        "func": "flow.set(\"chartarray\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 1060,
        "wires": [
            []
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "c7810d62.bc4a",
        "type": "function",
        "z": "b31a2ba7.4795e8",
        "name": "flush chart",
        "func": "msg.payload = [];\nmsg.ui_control = {\"options\":{\"scales\":{\"xAxes\":[{\"type\":\"time\",\"time\":{}}]}}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 1060,
        "wires": [
            [
                "807c2fc7.ded8f"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "6f4c1fd3.b91e9",
        "type": "ui_button",
        "z": "b31a2ba7.4795e8",
        "d": true,
        "name": "reset",
        "group": "6230babe.5dfca4",
        "order": 18,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Reset graphique",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 230,
        "y": 1060,
        "wires": [
            [
                "c7810d62.bc4a"
            ]
        ]
    },
    {
        "id": "c307a6d7.d2b888",
        "type": "comment",
        "z": "b31a2ba7.4795e8",
        "name": "CHART",
        "info": "",
        "x": 150,
        "y": 960,
        "wires": []
    },
    {
        "id": "d83d0ae9.158ee8",
        "type": "ui_date_picker",
        "z": "b31a2ba7.4795e8",
        "d": true,
        "name": "",
        "label": "debut",
        "group": "6230babe.5dfca4",
        "order": 22,
        "width": 4,
        "height": 1,
        "passthru": true,
        "topic": "min",
        "x": 230,
        "y": 1140,
        "wires": [
            [
                "ad6c3ebd.7f2d"
            ]
        ]
    },
    {
        "id": "a43e023.e83f8",
        "type": "ui_date_picker",
        "z": "b31a2ba7.4795e8",
        "d": true,
        "name": "",
        "label": "fin",
        "group": "6230babe.5dfca4",
        "order": 19,
        "width": 4,
        "height": 1,
        "passthru": true,
        "topic": "max",
        "x": 230,
        "y": 1100,
        "wires": [
            [
                "ad6c3ebd.7f2d"
            ]
        ]
    },
    {
        "id": "f5a6664f.bc2508",
        "type": "debug",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 770,
        "y": 1100,
        "wires": []
    },
    {
        "id": "17e0b9d0.f2a026",
        "type": "function",
        "z": "b31a2ba7.4795e8",
        "name": "change date",
        "func": "//to change ymax\nif (msg.topic === \"max\") {\n    var max=msg.payload;\n    flow.set(\"maxdate\",max);\n    return msg;\n}\n//to change ymin\nif (msg.topic === \"min\") {\n    var min= msg.payload;\n    flow.set(\"chartarray\",min);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "e41ab20c.d41eb",
        "type": "debug",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 550,
        "y": 1160,
        "wires": []
    },
    {
        "id": "ad6c3ebd.7f2d",
        "type": "function",
        "z": "b31a2ba7.4795e8",
        "name": "change date",
        "func": "//to change ymax\nif (msg.topic === \"max\") {\n    flow.set(\"maxtime2\",msg.payload);\n    var msg1 = {};\n    msg1.payload = flow.get(\"mintime2\");\n    msg.ui_control = {\"options\":{\"scales\":{\"xAxes\":[{\"type\":\"time\",\"time\":{\"min\":msg1.payload,\"max\":msg.payload}}]}}}\n    delete msg.payload;\n    return msg;\n}\n//to change ymin\nif (msg.topic === \"min\") {\n    flow.set(\"mintime2\",msg.payload);\n    var msg2 = {};\n    msg2.payload = flow.get(\"maxtime2\");\n    msg.ui_control = {\"options\":{\"scales\":{\"xAxes\":[{\"type\":\"time\",\"time\":{\"min\":msg.payload,\"max\":msg2.payload}}]}}}\n    delete msg.payload;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 1120,
        "wires": [
            [
                "e41ab20c.d41eb",
                "807c2fc7.ded8f"
            ]
        ]
    },
    {
        "id": "8918b781.532688",
        "type": "link out",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "links": [
            "f394d7af.cd0438",
            "85c2c1ff.17769",
            "d2f171bb.921c3"
        ],
        "x": 315,
        "y": 580,
        "wires": []
    },
    {
        "id": "f394d7af.cd0438",
        "type": "link in",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "links": [
            "8918b781.532688",
            "bbe2d06d.9b4d2"
        ],
        "x": 115,
        "y": 720,
        "wires": [
            [
                "87fae07b.f64d8",
                "a9f600e2.27bc2"
            ]
        ]
    },
    {
        "id": "85c2c1ff.17769",
        "type": "link in",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "links": [
            "8918b781.532688",
            "bbe2d06d.9b4d2"
        ],
        "x": 120,
        "y": 1020,
        "wires": [
            [
                "3799b729.ecaa38"
            ]
        ]
    },
    {
        "id": "b3ed738b.c2d03",
        "type": "debug",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 870,
        "y": 840,
        "wires": []
    },
    {
        "id": "4cf696f6.6588d8",
        "type": "ui_artlessgauge",
        "z": "b31a2ba7.4795e8",
        "group": "555840c7.590ee",
        "order": 35,
        "width": 5,
        "height": 5,
        "name": "Niveau",
        "icon": "",
        "label": "Pourcentage de remplissage",
        "unit": "",
        "layout": "radial",
        "decimals": 0,
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].Niveau",
        "sectors": [
            {
                "val": 0,
                "col": "#bbb9bb",
                "t": "min",
                "dot": 0
            },
            {
                "val": 1,
                "col": "#18d100",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 20,
                "col": "#fbff1f",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 60,
                "col": "#dbbe00",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 75,
                "col": "#ff0d00",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#ff0d00",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 660,
        "y": 840,
        "wires": []
    },
    {
        "id": "5345d159.6951a",
        "type": "ui_artlessgauge",
        "z": "b31a2ba7.4795e8",
        "group": "555840c7.590ee",
        "order": 34,
        "width": 3,
        "height": 3,
        "name": "temperature",
        "icon": "",
        "label": "Temperature",
        "unit": "",
        "layout": "radial",
        "decimals": 0,
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].Temperature",
        "sectors": [
            {
                "val": -20,
                "col": "#8c8b8d",
                "t": "min",
                "dot": 0
            },
            {
                "val": 15,
                "col": "#7301fe",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 17,
                "col": "#e7ff33",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 25,
                "col": "#fdd512",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 35,
                "col": "#ff0a0a",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#ff0a0a",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "3",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 670,
        "y": 800,
        "wires": []
    },
    {
        "id": "348f9e57.451cc2",
        "type": "ui_artlessgauge",
        "z": "b31a2ba7.4795e8",
        "group": "555840c7.590ee",
        "order": 36,
        "width": 3,
        "height": 3,
        "name": "Battery",
        "icon": "",
        "label": "Batterie",
        "unit": "",
        "layout": "radial",
        "decimals": 0,
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "colorFromTheme": true,
        "property": "payload[0].Battery",
        "sectors": [
            {
                "val": 0,
                "col": "#f90101",
                "t": "min",
                "dot": 0
            },
            {
                "val": 25,
                "col": "#f64c4c",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 50,
                "col": "#ffad1f",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 75,
                "col": "#f7f022",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#11ff00",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#11ff00",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 660,
        "y": 880,
        "wires": []
    },
    {
        "id": "ed912b14.c91eb8",
        "type": "sqlite",
        "z": "b31a2ba7.4795e8",
        "mydb": "95d0fd03.24a6e",
        "sqlquery": "msg.topic",
        "sql": "SELECT tt.* FROM Level tt INNER JOIN   (SELECT Name, MAX(Time) AS MaxDateTime FROM Level GROUP BY Name) groupedtt  ON tt.Name = groupedtt.Name AND tt.Time = groupedtt.MaxDateTime",
        "name": "Capteurs",
        "x": 240,
        "y": 840,
        "wires": [
            [
                "5d447c32.e9a734",
                "348f9e57.451cc2"
            ]
        ]
    },
    {
        "id": "a9f600e2.27bc2",
        "type": "function",
        "z": "b31a2ba7.4795e8",
        "name": "Select",
        "func": "if (msg.payload.action == \"click\") {\n    var newMsg = {\n  \"topic\": \"SELECT Capteurs.Battery FROM Capteurs WHERE Capteurs.Name = \" + \"\\'\" + msg.payload.name + \"\\'\" + \";\"\n}\nreturn newMsg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 800,
        "wires": [
            [
                "ed912b14.c91eb8"
            ]
        ]
    },
    {
        "id": "5d447c32.e9a734",
        "type": "debug",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 410,
        "y": 880,
        "wires": []
    },
    {
        "id": "a53282a3.5bd5f",
        "type": "link in",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "links": [
            "863fc342.88dbb"
        ],
        "x": 675,
        "y": 280,
        "wires": [
            [
                "702b4cd0.0a7ed4"
            ]
        ]
    },
    {
        "id": "aad83e6.ab553c",
        "type": "ui_template",
        "z": "b31a2ba7.4795e8",
        "group": "555840c7.590ee",
        "name": "Dashboard stylesheet",
        "order": 12,
        "width": 4,
        "height": 1,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n.coloredIcon.red{\n    color :red;\n}\n    .coloredIcon.blue{\n    color :blue;\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 300,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ee64143.e3494e8",
        "type": "ui_ui_control",
        "z": "b31a2ba7.4795e8",
        "d": true,
        "name": "return Admin",
        "events": "change",
        "x": 170,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "24893e42.617442",
        "type": "ui_button",
        "z": "b31a2ba7.4795e8",
        "d": true,
        "name": "R map",
        "group": "6230babe.5dfca4",
        "order": 16,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-arrow-left",
        "payload": "Administration Pav",
        "payloadType": "str",
        "topic": "",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "ee64143.e3494e8"
            ]
        ]
    },
    {
        "id": "e879ab84.4509c8",
        "type": "ui_text",
        "z": "b31a2ba7.4795e8",
        "group": "555840c7.590ee",
        "order": 17,
        "width": 6,
        "height": 2,
        "name": "Place disponibles",
        "label": "Place disponibles",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1330,
        "y": 80,
        "wires": []
    },
    {
        "id": "f205987d.f8d258",
        "type": "inject",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1140,
        "y": 80,
        "wires": [
            [
                "e879ab84.4509c8"
            ]
        ]
    },
    {
        "id": "aad3d961.b4fb58",
        "type": "ui_text",
        "z": "b31a2ba7.4795e8",
        "group": "555840c7.590ee",
        "order": 18,
        "width": 5,
        "height": 2,
        "name": "Place totales",
        "label": "Place totales",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1310,
        "y": 120,
        "wires": []
    },
    {
        "id": "f6a1cd5c.f89e3",
        "type": "inject",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1130,
        "y": 120,
        "wires": [
            [
                "aad3d961.b4fb58"
            ]
        ]
    },
    {
        "id": "786d4a48.c67394",
        "type": "ui_text",
        "z": "b31a2ba7.4795e8",
        "group": "555840c7.590ee",
        "order": 2,
        "width": 11,
        "height": 1,
        "name": "disponibilité",
        "label": "<font color=lightgreen><i class=\"fa fa-circle fa-2x\"></i></font>Disponibilité",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "x": 1310,
        "y": 160,
        "wires": []
    },
    {
        "id": "b1336280.4e10c",
        "type": "inject",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1140,
        "y": 160,
        "wires": [
            [
                "786d4a48.c67394"
            ]
        ]
    },
    {
        "id": "10a79fb4.e2fe6",
        "type": "ui_text",
        "z": "b31a2ba7.4795e8",
        "group": "555840c7.590ee",
        "order": 16,
        "width": 11,
        "height": 1,
        "name": "occupation",
        "label": "<font color=#E53935><i class=\"fa fa-circle fa-2x\"></i></font>Occupation",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "x": 1310,
        "y": 200,
        "wires": []
    },
    {
        "id": "1fe46f7d.c1a081",
        "type": "inject",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "topic": "",
        "payload": "80",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1130,
        "y": 200,
        "wires": [
            [
                "10a79fb4.e2fe6"
            ]
        ]
    },
    {
        "id": "d2f171bb.921c3",
        "type": "link in",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "links": [
            "8918b781.532688",
            "bbe2d06d.9b4d2"
        ],
        "x": 1075,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "6392633a.2af7fc",
        "type": "ui_text",
        "z": "b31a2ba7.4795e8",
        "group": "555840c7.590ee",
        "order": 11,
        "width": 5,
        "height": 2,
        "name": "disponibilité2",
        "label": "<font color=lightgreen><i class=\"fa fa-circle fa-2x\"></i></font>Disponibilité",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "x": 1310,
        "y": 240,
        "wires": []
    },
    {
        "id": "6484deae.7fdcb",
        "type": "ui_text",
        "z": "b31a2ba7.4795e8",
        "group": "555840c7.590ee",
        "order": 10,
        "width": 6,
        "height": 2,
        "name": "occupation2",
        "label": "<font color=#E53935><i class=\"fa fa-circle fa-2x\"></i></font>Occupation",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "x": 1310,
        "y": 280,
        "wires": []
    },
    {
        "id": "1a460c70.1c2494",
        "type": "ui_gauge",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "group": "555840c7.590ee",
        "order": 3,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1220,
        "y": 480,
        "wires": []
    },
    {
        "id": "a6d020f.a7a38e",
        "type": "ui_gauge",
        "z": "b31a2ba7.4795e8",
        "name": "",
        "group": "555840c7.590ee",
        "order": 3,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1230,
        "y": 520,
        "wires": []
    },
    {
        "id": "2ecbd507.9ec0ba",
        "type": "ui_template",
        "z": "4906e0ea.6bc0f",
        "group": "6230babe.5dfca4",
        "name": "Dashboard stylesheet",
        "order": 14,
        "width": 0,
        "height": 0,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 280,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "41d1f754.fb1db8",
        "type": "ui_template",
        "z": "b1aaf5f5.0d31a8",
        "group": "c69b85fc.c131f8",
        "name": "Node-Red Dashboard Custom CSS",
        "order": 35,
        "width": 4,
        "height": 1,
        "format": "<style>\n/* ------------------------------------ */\n/* MODIFICATIONS du THÈME DARK NODE-RED */\n/* ------------------------------------ */\n\n/* ----------------------------- */\n/* On évite les clics non voulus */\n/* ----------------------------- */\nroot, a, button, p, div {\n    -webkit-user-select: none !important;\n}\n\n/* --------------------- */\n/* Dégradé du BACKGROUND */\n/* --------------------- */\nbody {\n    background: -webkit-linear-gradient(\n    55deg,\n    #009785 0%,\n    #245aa5 50%,\n    #b800e9 100%\n    );\n    -webkit-touch-callout: none !important;\n}\n\n\n/* ------------------------------------- */\n/* Modification du background par DÉFAUT */\n/* ------------------------------------- */\nbody.nr-dashboard-theme md-toolbar,\nbody.nr-dashboard-theme md-content md-card {\n    background-color: transparent !important;\n    color: #FFFFFF;\n}\n\nui-card-panel {\n    background-color: rgba(255,255,255,0.1) !important;\n    border-radius: 10px !important;\n}\n    \n/* -------------------- */\n/* ARRONDIS des GROUPES */\n/* -------------------- */\n#Homey_Dashboard_Navigation {\n    background-color: transparent !important;\n    border-radius: 10px !important;\n}\n\n/* -------------------------- */\n/* PERSONNALISATIONS diverses */\n/* -------------------------- */\n.md-card.md-default-theme, md-card {\n    border-radius: 10px;\n}\n\n.nr-dashboard-switch.ng-scope {\n    background-color: rgba(255,255,255,.2) !important;\n}\n\n.nr-dashboard-switch.ng-scope:hover {\n    background-color: rgba(255,255,255,.5) !important;\n}\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: rgba(255,255,255,.2);\n}\n\n.md-button {\n    border-radius: 10px;\n}\n\n.nr-dashboard-cardpanel layout-column {\n    background-color: rgba(255,255,255,0.2) !important;\n    background-color: transparent !important;\n    border-radius: 10px !important;\n}\n\n.nr-dashboard-theme ui-card-panel {\n    border: none;\n}\n\n.nr-dashboard-template {\n    overflow-y: visible;\n}\n.nr-dashboard-theme md-content md-card {\n    background-color: transparent !important;\n}\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: rgba(255, 255, 255, 0.5);\n}\n\n\n\n/* -------------------------------------------- */\n/* FIN DES MODIFICATIONS du THÈME DARK NODE-RED */\n/* -------------------------------------------- */\n\n</style>\n\n<script>\ndocument.ontouchmove = function (e) {\n    e.preventDefault();\n}\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 600,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "32a7f807.b89dc8",
        "type": "ui_template",
        "z": "ad99b549.c0c208",
        "group": "91fc922.8a36e7",
        "name": "Dashboard stylesheet",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n\nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1140,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "e0be82e1.a832d",
        "type": "function",
        "z": "95955858.b23038",
        "name": "Parse",
        "func": "var msgError = { payload:\"error\" };\nif(!msg.payload.Distance)\n return [msgError]\n \nif(!msg.payload.CodeSig)\n return [msgError]\n \nvar Time = msg.payload.time;\nvar Time2 = new Date(msg.payload.time*1000).toLocaleString('en-GB', { hour12: false }).replace(',','');\nvar CodeSig = msg.payload.CodeSig;\nvar Name = msg.payload.name;\nvar Niveau = parseInt(((245 - parseFloat(msg.payload.Distance))*100)/245);\nif(Niveau > -10 && Niveau < 0)\n    Niveau = 0;\nif(Niveau <= -10)\n    Niveau = \"\";\nif(Niveau > 100)\n    Niveau = \"\";\nif(isNaN(Niveau))\n    Niveau = \"\";\nvar Temperature = msg.payload.Temperature;\n\n\nif(msg.payload.Battery)\n{\n    var Battery = msg.payload.Battery;\n    var m = { payload: {'Time':Time, 'CodeSig':CodeSig, 'Name':Name, 'Niveau':Niveau, 'Temperature':Temperature, 'Battery':Battery} };\n    return [0,m];\n}\n    \nvar m = { payload: {'Time':Time, 'CodeSig':CodeSig, 'Name':Name, 'Niveau':Niveau, 'Temperature':Temperature} };\nvar m2 = { payload: {'Time':Time2, 'CodeSig':CodeSig, 'Name':Name, 'Niveau':Niveau, 'Temperature':Temperature} };\n//var m2 = {'Time':Time, 'CodeSig':CodeSig, 'Name':Name, 'Distance':Distance, 'Temperature':Temperature};\n//return [{payload:m}];\nreturn [0,m];",
        "outputs": 2,
        "noerr": 0,
        "x": 810,
        "y": 60,
        "wires": [
            [],
            [
                "9941624f.8ce99",
                "a7adb2c1.58857"
            ]
        ]
    },
    {
        "id": "5e6caaac.33fea4",
        "type": "function",
        "z": "95955858.b23038",
        "d": true,
        "name": "Tekelek Payload",
        "func": "if (msg.payload.DevEUI == \"244E7B000000294D\") {\n    msg.payload[\"CodeSig\"]=\"66118EMR0009\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B0000003901\") { //244E7B000000296F\n    msg.payload[\"CodeSig\"]=\"66042EMR0008\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B00000029D1\") {\n    msg.payload[\"CodeSig\"]=\"66042EMR0011\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B00000029B7\") {\n    msg.payload[\"CodeSig\"]=\"66037EMR0164\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B0000002999\") {\n    msg.payload[\"CodeSig\"]=\"66037EMR0047\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B00000029A4\") {\n    msg.payload[\"CodeSig\"]=\"66182EMR0021\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B000000287C\") {\n    msg.payload[\"CodeSig\"]=\"66182EMR0079\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B000000299D\") {\n    msg.payload[\"CodeSig\"]=\"66212EMR0014\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B0000002876\") {\n    msg.payload[\"CodeSig\"]=\"66136CAPE0410\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B00000029EC\") {\n    msg.payload[\"CodeSig\"]=\"66231OM0001\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B0000002995\") {\n    msg.payload[\"CodeSig\"]=\"66231EMR0009\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B0000002973\") {\n    msg.payload[\"CodeSig\"]=\"66205EMR0007\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B0000002945\") {\n    msg.payload[\"CodeSig\"]=\"66205EMR0015\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B00000029AC\") {\n    msg.payload[\"CodeSig\"]=\"66118EMR0011\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B00000029F3\") {\n    msg.payload[\"CodeSig\"]=\"66117EMR0267\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B0000002919\") {\n    msg.payload[\"CodeSig\"]=\"66017EMR0262\";\n    return msg;  \n}\nelse {}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "9941624f.8ce99",
        "type": "debug",
        "z": "95955858.b23038",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 970,
        "y": 100,
        "wires": []
    },
    {
        "id": "a7adb2c1.58857",
        "type": "link out",
        "z": "95955858.b23038",
        "name": "1",
        "links": [
            "71928890.c8c808",
            "63e693cf.34722c",
            "4a5b3817.591bb8",
            "ffad9caa.7a34",
            "f3cd1575.bdef78",
            "db562ebb.5c338",
            "eb1f0a38.69b8f8",
            "4faac385.f7aecc",
            "c25a4b25.ca1b38"
        ],
        "x": 915,
        "y": 60,
        "wires": []
    },
    {
        "id": "b82cc10d.c7f0f",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "CREATE",
        "topic": "CREATE TABLE Alert(CodeSig STRING PRIMARY KEY NOT NULL, Alert INT NOT NULL)",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 600,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "fc6fbbc7.e12008",
        "type": "sqlite",
        "z": "95955858.b23038",
        "mydb": "7b61aa47.31c724",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Alert",
        "x": 770,
        "y": 380,
        "wires": [
            [
                "82eed934.32b8c8"
            ]
        ]
    },
    {
        "id": "93e853af.c22ea",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "DROP",
        "topic": "DROP table Alert;",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 610,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "2e5eba84.846b56",
        "type": "function",
        "z": "95955858.b23038",
        "name": "INSERT",
        "func": "if(msg.payload)\nvar newMsg = {\n \"topic\": \"INSERT OR IGNORE INTO Alert (CodeSig,Alert) VALUES ( \" + \"\\'\" + \n msg.payload.CodeSig + \"\\'\" + \",\" +  \n \"50\" + \");\" \n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 340,
        "wires": [
            [
                "fc6fbbc7.e12008",
                "984b61c7.1362b"
            ]
        ]
    },
    {
        "id": "554031d2.97cc2",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "SELECT",
        "topic": "SELECT * FROM Alert;",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 600,
        "y": 380,
        "wires": [
            [
                "fc6fbbc7.e12008"
            ]
        ]
    },
    {
        "id": "984b61c7.1362b",
        "type": "debug",
        "z": "95955858.b23038",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "x": 780,
        "y": 340,
        "wires": []
    },
    {
        "id": "837f669d.6520e8",
        "type": "function",
        "z": "95955858.b23038",
        "d": true,
        "name": "Green Payload",
        "func": "if (msg.payload.DevEUI == \"0004A30B00213FA7\") {\n    msg.payload[\"CodeSig\"]=\"66212OM0015\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B00000038B5\") { //0004A30B00E7A81F\n    msg.payload[\"CodeSig\"]=\"66117OM0268\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B0000003A22\") { //0004A30B00E8171A\n    msg.payload[\"CodeSig\"]=\"66118OM0008\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"0004A30B0021B582\") {\n    msg.payload[\"CodeSig\"]=\"66118OM0010\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"0004A30B00ED55E7\") {\n    msg.payload[\"CodeSig\"]=\"66042OM0007\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B00000038B2\") { //0004A30B00E860C8\n    msg.payload[\"CodeSig\"]=\"66042OM0010\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B0000003AD2\") { //0004A30B00E8F761\n    msg.payload[\"CodeSig\"]=\"66042OM0015\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B000000388E\") { //0004A30B00E8AA40\n    msg.payload[\"CodeSig\"]=\"66182OM0081\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B0000003885\") { //0004A30B00E7F129\n    msg.payload[\"CodeSig\"]=\"66182OM0078\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B0000003939\") { //0004A30B00215C0E \n    msg.payload[\"CodeSig\"]=\"66037OM0163\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B00000038A8\") { //0004A30B0021B4E4\n    msg.payload[\"CodeSig\"]=\"66231EMR0001\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B00000038B6\") { //0004A30B002197E0\n    msg.payload[\"CodeSig\"]=\"66037OM0046\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"0004A30B00E89FD0\") {\n    msg.payload[\"CodeSig\"]=\"66017OM0261\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B0000003942\") { //0004A30B00E8BFB9\n    msg.payload[\"CodeSig\"]=\"66231OM0003\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B0000003981\") { //0004A30B00E8FC5F\n    msg.payload[\"CodeSig\"]=\"66205OM0006\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"244E7B0000003997\") { //0004A30B00214AC9\n    msg.payload[\"CodeSig\"]=\"66205OM0014\";\n    return msg;  \n}\nelse {}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "82eed934.32b8c8",
        "type": "debug",
        "z": "95955858.b23038",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 790,
        "y": 420,
        "wires": []
    },
    {
        "id": "2b91f654.d5002a",
        "type": "mqtt out",
        "z": "95955858.b23038",
        "d": true,
        "name": "mqttclient",
        "topic": "alert",
        "qos": "",
        "retain": "",
        "broker": "eb1b180b.f41fc8",
        "x": 600,
        "y": 280,
        "wires": []
    },
    {
        "id": "18d7eb64.384975",
        "type": "mqtt in",
        "z": "95955858.b23038",
        "name": "",
        "topic": "application/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "eb1b180b.f41fc8",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "5011fa49.7f5fd4"
            ]
        ]
    },
    {
        "id": "51c204c5.b63e9c",
        "type": "function",
        "z": "95955858.b23038",
        "name": "decodage",
        "func": "msg.payload.DevEUI = msg.payload.devEUI.toUpperCase();\n//msg.payload.time = new Date(msg.payload.rxInfo[0].time).getTime();\nmsg.payload.time = new Date() / 1000;\nmsg.payload.name = msg.payload.deviceName;\n\nif(msg.payload.deviceName.charAt(0) == \"Z\")\n{\n    const buffer = Buffer.from(msg.payload.data, 'base64');\n    var RawBuffer = Buffer.from(buffer, 'hex');\n    //node.warn(\"EXTENDER : \" + msg.payload.DevEUI);\n    msg.Code = RawBuffer.readInt8(0);\n    //node.warn(\"RawBuffer : \" + msg.Code);\n    \n    var DevEUI=\"\";\n    if (msg.Code==18) {\n        // Préparation DevEUI\n        for (i=3;i<5;i++) {\n            DevEUI=DevEUI+ buffer[i].toString(16);\n        }\n        var DevEUI_mini=DevEUI.toUpperCase();\n        DevEUI=\"70B3D56371D4\"+ DevEUI_mini;\n        msg.payload.DevEUI=DevEUI;\n        // Préparation Seuil \n        var Seuil=RawBuffer.readInt8(10);\n        Seuil=(Seuil & 15);\n        switch (Seuil) {\n            case 4:\n                Seuil=conteneur*0.25\n                break;\n            case 3:\n                Seuil=conteneur*0.5\n                break;\n            case 2:\n                Seuil=conteneur*0.75\n                break;\n            case 1:\n                Seuil=conteneur*0.9\n                break;\n            default: // Cas non conforme\n                Seuil=conteneur*0.99\n                break;\n        }\n        //Temperature\n        var Temperature=RawBuffer.readInt8(9);\n        //Usure batterie\n        var Batterie=RawBuffer.readInt8(16);\n        Batterie=100-Batterie;\n        //node.warn(\"Seuil : \" + Seuil);\n        //node.warn(\"Temperature : \" + Temperature);\n        //node.warn(\"Batterie : \" + Batterie);\n        // Modification du deviceName\n        switch (DevEUI_mini) {\n            case \"AF1A\":\n                msg.payload.name=\"I-\"+DevEUI_mini+\"-BARCARES-2\";\n                break;\n            case \"B2F0\":\n                msg.payload.name=\"I-\"+DevEUI_mini+\"-BARCARES-2\";\n                break;\n        }\n        msg.payload.Distance =Seuil;\n        msg.payload.Temperature=Temperature;\n        msg.payload.Battery=Batterie;\n    }\n    \n}\nelse if(msg.payload.deviceName.charAt(0) == \"I\")\n{\n    const buffer = Buffer.from(msg.payload.data, 'base64');\n    var RawBuffer_ineo = Buffer.from(buffer, 'hex');\n    msg.Code = RawBuffer_ineo.readInt8(0);\n    //node.warn(\"RawBuffer_ineo : \" + msg.Code);\n    \n    var DevEUI=\"\";\n    if (msg.Code==18) {\n        // Préparation DevEUI\n        for (i=3;i<5;i++) {\n            DevEUI=DevEUI+(buffer[i].toString(16)).padStart(2,'0');\n        }\n        var DevEUI_mini=DevEUI.toUpperCase();\n        DevEUI= msg.payload.devEUI.substring(0, 12) + DevEUI_mini;\n        msg.payload.DevEUI=DevEUI;\n        // Préparation Seuil \n        var Seuil=RawBuffer_ineo.readInt16BE(33);\n\n        //Temperature\n        var Temperature=RawBuffer_ineo.readInt8(9);\n        //Usure batterie\n        var Batterie=RawBuffer_ineo.readInt8(16);\n        Batterie=100-Batterie;\n        //node.warn(\"Seuil : \" + Seuil);\n        //node.warn(\"Temperature : \" + Temperature);\n        //node.warn(\"Batterie : \" + Batterie);\n        // Modification du deviceName\n        //msg.payload.name= msg.payload.name +\"-\"+ DevEUI_mini;\n        \n        msg.payload.name = msg.payload.name.substring(0, 6) + \"-\" + DevEUI_mini + msg.payload.name.substring(6);\n        \n        msg.payload.Distance = Seuil * 0.1;\n        msg.payload.Temperature = Temperature;\n        msg.payload.Battery = Batterie;\n    }\n    \n}\nelse if(msg.payload.deviceName.charAt(0) == \"G\")\n{\n    const buffer = Buffer.from(msg.payload.data, 'base64');\n    var RawBuffer = Buffer.from(buffer, 'hex');\n    msg.Code = RawBuffer.readInt8(0);\n    \n    switch (RawBuffer[0]){\n      case 16:\n          if (msg.payload.deviceName===\"G-55E7-MONTNER-2\") {\n            var tmps_MSB=buffer[4].toString(16);\n            var tmps_LSB=buffer[3].toString(16);\n            var tmps=\"0x\"+tmps_MSB+tmps_LSB;\n            //node.warn(\"tmps : \" + tmps);\n            //var tmps_hex=tmps.from(tmps,\"hex\");\n            tmps= parseInt(tmps);\n            //node.warn(\"tmps/59 : \" + tmps/59);\n            msg.payload.Distance = parseInt(tmps/59);\n            msg.payload.Temperature = RawBuffer.readInt8(6);\n            msg.payload.Battery = RawBuffer.readInt8(7);\n          }\n          else {\n              msg.payload.Distance = RawBuffer.readInt16LE(1);\n              msg.payload.Temperature = RawBuffer.readInt8(3);\n              msg.payload.Battery = RawBuffer[4] !== undefined ? RawBuffer.readInt8(4) : null;\n          }\n          break;\n      case 18:\n          msg.payload.Distance = RawBuffer.readInt16LE(1);\n          msg.payload.Temperature = RawBuffer.readInt8(3);\n           msg.payload.Battery = RawBuffer[4] !== undefined ? RawBuffer.readInt8(4) : null;\n          break;\n      default:\n          msg.payload.Error = \"Unknow Frame\";\n          break;\n    }\n}\n\nelse if(msg.payload.deviceName.charAt(0) == \"T\")\n{\n    const buffer = Buffer.from(msg.payload.data, 'base64');\n    var distance1,distance2,distance3,distance4;\n    var RawBuffer = Buffer.from(buffer, 'hex');\n    \n    msg.Code = RawBuffer.readInt8(0);\n    \n    switch (RawBuffer[0]){\n      case 16:\n          distance1 = RawBuffer.readInt16BE(4);\n          distance2 = RawBuffer.readInt16BE(8);\n          distance3 = RawBuffer.readInt16BE(12);\n          distance4 = RawBuffer.readInt16BE(16);\n          msg.payload.Distance = (distance1+distance2+distance3+distance4) / 4;\n          msg.payload.Temperature = RawBuffer.readInt8(6);\n          break;\n      case 48:\n          msg.payload.Distance = RawBuffer.readInt16BE(14);\n          msg.payload.Temperature = RawBuffer.readInt8(16);\n          msg.payload.Battery = RawBuffer.readInt8(10);\n          break;\n      default:\n          msg.payload.Error = \"Unknow Frame\";\n          break;\n    }\n}\nelse {\n    return;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 60,
        "wires": [
            [
                "a5d3e956.3b78b8",
                "8dd92f5a.8bbfd",
                "5696ab6a.948394"
            ]
        ]
    },
    {
        "id": "f3cd1575.bdef78",
        "type": "link in",
        "z": "95955858.b23038",
        "name": "1.1",
        "links": [
            "a7adb2c1.58857",
            "f2ba296c.d81748",
            "9eaa747c.8cbef8",
            "993a6276.76809",
            "767dc9a0.252178"
        ],
        "x": 495,
        "y": 340,
        "wires": [
            [
                "2b91f654.d5002a",
                "2e5eba84.846b56"
            ]
        ]
    },
    {
        "id": "c0ff5ec6.1f3d3",
        "type": "debug",
        "z": "95955858.b23038",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 330,
        "y": 300,
        "wires": []
    },
    {
        "id": "fa9f3f93.603bd",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "CREATE",
        "topic": "CREATE TABLE Level( Time TIMESTAMP PRIMARY KEY NOT NULL, CodeSig STRING NOT NULL, Name STRING NOT NULL, Niveau INT NOT NULL, Temperature INT NOT NULL)",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "92f7e67.94d4f18",
        "type": "sqlite",
        "z": "95955858.b23038",
        "mydb": "7b61aa47.31c724",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Level",
        "x": 290,
        "y": 340,
        "wires": [
            [
                "c0ff5ec6.1f3d3",
                "d19bf4d0.7e2058",
                "9fa8fc5c.d1eee"
            ]
        ]
    },
    {
        "id": "59ddc40c.db38fc",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "SELECT",
        "topic": "SELECT * FROM Level WHERE Name= \"I-BEF5-6330-TOREILLES-1\" ORDER BY Time desc;",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 340,
        "wires": [
            [
                "92f7e67.94d4f18"
            ]
        ]
    },
    {
        "id": "5be3888a.208738",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "DROP",
        "topic": "DROP table Level;",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "dd2e21be.43aa4",
        "type": "function",
        "z": "95955858.b23038",
        "name": "INSERT",
        "func": "var timestamp = Math.round(new Date().getTime() / 1000);\n\nvar newMsg = {\n \"topic\": \"INSERT INTO Level (Time,CodeSig,Name,Niveau,Temperature) VALUES ( \" + \"\\'\" + \n msg.payload.Time + \"\\'\" + \",\" + \"\\'\" +  \n msg.payload.CodeSig + \"\\'\" + \",\" + \"\\'\" +  \n msg.payload.Name + \"\\'\" + \",\" + \n msg.payload.Niveau + \",\" + \n msg.payload.Temperature + \")\"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 300,
        "wires": [
            [
                "92f7e67.94d4f18",
                "c0ff5ec6.1f3d3"
            ]
        ]
    },
    {
        "id": "db562ebb.5c338",
        "type": "link in",
        "z": "95955858.b23038",
        "name": "1.1",
        "links": [
            "a7adb2c1.58857",
            "f2ba296c.d81748",
            "9eaa747c.8cbef8",
            "993a6276.76809",
            "767dc9a0.252178"
        ],
        "x": 35,
        "y": 300,
        "wires": [
            [
                "dd2e21be.43aa4"
            ]
        ]
    },
    {
        "id": "6503a2c7.9259ec",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "",
        "topic": "",
        "payload": "{\"Time\":1618235489.693,\"CodeSig\":\"66205EMR0007\",\"Name\":\"T-2973-TAUTAVEL-1\",\"Niveau\":35,\"Temperature\":9}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 460,
        "wires": [
            [
                "f24e1e98.454d8"
            ]
        ]
    },
    {
        "id": "f24e1e98.454d8",
        "type": "function",
        "z": "95955858.b23038",
        "name": "REPLACE",
        "func": "var timestamp = Math.round(new Date().getTime() / 1000);\n\nvar newMsg = {\n \"topic\": \"REPLACE INTO Level (Time,CodeSig,Name,Niveau,Temperature) VALUES ( \" + \"\\'\" + \n msg.payload.Time + \"\\'\" + \",\" + \"\\'\" +  \n msg.payload.CodeSig + \"\\'\" + \",\" + \"\\'\" +  \n msg.payload.Name + \"\\'\" + \",\" + \n msg.payload.Niveau + \",\" + \n msg.payload.Temperature + \")\"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 130,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "5011fa49.7f5fd4",
        "type": "json",
        "z": "95955858.b23038",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 60,
        "wires": [
            [
                "51c204c5.b63e9c",
                "158f29ff.626ae6"
            ]
        ]
    },
    {
        "id": "d19bf4d0.7e2058",
        "type": "mqtt out",
        "z": "95955858.b23038",
        "d": true,
        "name": "mqttclient",
        "topic": "maj",
        "qos": "",
        "retain": "",
        "broker": "eb1b180b.f41fc8",
        "x": 320,
        "y": 380,
        "wires": []
    },
    {
        "id": "245fc7fa.436c58",
        "type": "function",
        "z": "95955858.b23038",
        "d": true,
        "name": "Insertion",
        "func": "/*for (i=0;i<msg.payload.length;i++) {\n    if (i==0) {\n        var newMsg = {\n         \"topic\": \"INSERT INTO Level (Time,CodeSig,Name,Niveau,Temperature) VALUES ( \" + \"\\'\" + \n         msg.payload[i].Time + \"\\'\" + \",\" + \"\\'\" +  \n         msg.payload[i].CodeSig + \"\\'\" + \",\" + \"\\'\" +  \n         msg.payload[i].Name + \"\\'\" + \",\" + \n         msg.payload[i].Niveau + \",\" + \n         msg.payload[i].Temperature + \")\"\n        }\n    } else {\n        newMsg=newMsg+\",( \" + \"\\'\" + \n         msg.payload[i].Time + \"\\'\" + \",\" + \"\\'\" +  \n         msg.payload[i].CodeSig + \"\\'\" + \",\" + \"\\'\" +  \n         msg.payload[i].Name + \"\\'\" + \",\" + \n         msg.payload[i].Niveau + \",\" + \n         msg.payload[i].Temperature + \")\"\n    }\n}\nnode.warn(\"newMsg : \"+newMsg);\nreturn newMsg;*/\n\nfor (i=0;i<msg.payload.length;i++) {\n    if (i==0) {\n        var ensembleValeurs=\"VALUES ( \" + \"\\'\" +\n        msg.payload[i].Time + \"\\'\" + \",\" + \"\\'\" +  \n        msg.payload[i].CodeSig + \"\\'\" + \",\" + \"\\'\" +  \n        msg.payload[i].Name + \"\\'\" + \",\" + \n        msg.payload[i].Niveau + \",\" + \n        msg.payload[i].Temperature + \")\"\n    } \n    else {\n        ensembleValeurs=ensembleValeurs+\",( \" + \"\\'\" +\n        msg.payload[i].Time + \"\\'\" + \",\" + \"\\'\" +  \n        msg.payload[i].CodeSig + \"\\'\" + \",\" + \"\\'\" +  \n        msg.payload[i].Name + \"\\'\" + \",\" + \n        msg.payload[i].Niveau + \",\" + \n        msg.payload[i].Temperature + \")\"    \n    }\n}\nnode.warn(\"ensembleValeurs : \"+ensembleValeurs);\n var newMsg = {\n         \"topic\": \"INSERT INTO Level (Time,CodeSig,Name,Niveau,Temperature)\"+ensembleValeurs}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "37503985.f19046",
        "type": "inject",
        "z": "95955858.b23038",
        "d": true,
        "name": "",
        "topic": "",
        "payload": "[{\"Time\":1616457600.001,\"CodeSig\":\"66212OM0015\",\"Name\":\"G-3FA7-TOREILLES-1\",\"Niveau\":0,\"Temperature\":0},{\"Time\":1616457600.002,\"CodeSig\":\"66212EMR0014\",\"Name\":\"T-299D-TOREILLES-1\",\"Niveau\":0,\"Temperature\":0},{\"Time\":1616457600.003,\"CodeSig\":\"66231OM0003\",\"Name\":\"G-BFB9-VINGRAU-2\",\"Niveau\":0,\"Temperature\":0},{\"Time\":1616457600.004,\"CodeSig\":\"66231EMR0001\",\"Name\":\"G-B4E4-VINGRAU-1\",\"Niveau\":0,\"Temperature\":0},{\"Time\":1616457600.005,\"CodeSig\":\"66042OM0010\",\"Name\":\"G-60C8-CASSAGNES-2\",\"Niveau\":0,\"Temperature\":0},{\"Time\":1616457600.006,\"CodeSig\":\"66042OM0007\",\"Name\":\"G-B965-CASSAGNES-1\",\"Niveau\":0,\"Temperature\":0},{\"Time\":1616457600.007,\"CodeSig\":\"66042EMR0008\",\"Name\":\"T-296F-CASSAGNES-1\",\"Niveau\":0,\"Temperature\":0},{\"Time\":1616457600.008,\"CodeSig\":\"66118OM0010\",\"Name\":\"G-55E7-MONTNER-2\",\"Niveau\":0,\"Temperature\":0},{\"Time\":1616457600.009,\"CodeSig\":\"66037OM0046\",\"Name\":\"G-97E0-CANET-2\",\"Niveau\":0,\"Temperature\":0},{\"Time\":1616457600.01,\"CodeSig\":\"66182OM0078\",\"Name\":\"G-F761-STMARIE-2\",\"Niveau\":0,\"Temperature\":0},{\"Time\":1616457600.011,\"CodeSig\":\"66182OM0081\",\"Name\":\"G-AA40-STMARIE-1\",\"Niveau\":0,\"Temperature\":0}]",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "245fc7fa.436c58"
            ]
        ]
    },
    {
        "id": "943c5b0e.d31d98",
        "type": "comment",
        "z": "95955858.b23038",
        "d": true,
        "name": "Création des capteurs manquants (non communicants)",
        "info": "",
        "x": 300,
        "y": 980,
        "wires": []
    },
    {
        "id": "cb18a2d1.1e0af",
        "type": "function",
        "z": "95955858.b23038",
        "d": true,
        "name": "IneoSense Payload",
        "func": "if (msg.payload.DevEUI == \"70B3D56371D4B2F0\") {\n    msg.payload[\"CodeSig\"]=\"66017OM0261\";\n    return msg;  \n}\nelse if(msg.payload.DevEUI == \"70B3D56371D4AF1A\") {\n    msg.payload[\"CodeSig\"]=\"66017EMR0262\";\n    return msg;  \n}\n\nelse {}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "110da09d.41e01f",
        "type": "comment",
        "z": "95955858.b23038",
        "name": "bdd",
        "info": "",
        "x": 90,
        "y": 240,
        "wires": []
    },
    {
        "id": "ae77ece9.168f6",
        "type": "comment",
        "z": "95955858.b23038",
        "name": "Enrichissement du message",
        "info": "",
        "x": 160,
        "y": 20,
        "wires": []
    },
    {
        "id": "64f663b7.b3ea3c",
        "type": "inject",
        "z": "95955858.b23038",
        "d": true,
        "name": "CREATE",
        "topic": "CREATE TABLE IF NOT EXISTS \"Capteurs\" (     \"Commune\" TEXT,     \"Adresse\" TEXT,     \"Name\" TEXT,     \"CodeSig\" TEXT,     \"DevEui\" TEXT PRIMARY KEY NOT NULL,     \"Lat\" NUMERIC(9, 7),     \"Long\" NUMERIC(8, 7),     \"Flux\" TEXT,     \"Type\" TEXT,     \"Finition\" TEXT );",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "cf9dd40a.68de38",
        "type": "sqlite",
        "z": "95955858.b23038",
        "d": true,
        "mydb": "7b61aa47.31c724",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Capteurs",
        "x": 360,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "bc16982f.3edd88",
        "type": "inject",
        "z": "95955858.b23038",
        "d": true,
        "name": "DELETE ",
        "topic": "DROP table Capteurs",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "d513914d.5cb57",
        "type": "function",
        "z": "95955858.b23038",
        "d": true,
        "name": "INSERT",
        "func": "if(msg.payload)\nvar newMsg = {\n \"topic\": \"INSERT OR IGNORE INTO Alert (CodeSig,Alert) VALUES ( \" + \"\\'\" + \n msg.payload.CodeSig + \"\\'\" + \",\" +  \n \"50\" + \");\" \n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "5eb8e470.1cfa8c",
        "type": "inject",
        "z": "95955858.b23038",
        "d": true,
        "name": "SELECT",
        "topic": "SELECT * FROM Capteurs where Name =\"I-BEF5-6330-TOREILLES-1\" ;",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 740,
        "wires": [
            [
                "cf9dd40a.68de38"
            ]
        ]
    },
    {
        "id": "67752e34.75ff9",
        "type": "debug",
        "z": "95955858.b23038",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 810,
        "y": 180,
        "wires": []
    },
    {
        "id": "685666bf.364c48",
        "type": "inject",
        "z": "95955858.b23038",
        "d": true,
        "name": "INSERT",
        "topic": "INSERT INTO \"Capteurs\" VALUES     ('CANET EN ROUSSILLON','AV MEDITERRANEE','T-3939-CANET-1','66037OM0163 ','244e7b0000003939',42.6952319,3.0324704,'OM','ENTERRE','lame bois composite'),     ('CANET EN ROUSSILLON','AV MEDITERRANEE','T-29B7-CANET-1','66037EMR0164','244e7b00000029b7',42.6952149,3.0324965,'DMR','ENTERRE','lame bois composite'),     ('CANET EN ROUSSILLON','RUE 14 JUILLET','T-38B6-CANET-2','66037OM0046 ','244e7b00000038b6',42.7056849,3.007084,'OM','ENTERRE','tôle galva'),     ('CANET EN ROUSSILLON','RUE 14 JUILLET','T-2999-CANET-2','66037EMR0047','244e7b0000002999',42.7057068,3.0070865,'DMR','ENTERRE','tôle galva'),     ('SAINTE MARIE LA MER','PASSAGE DIDEROT','I-C67E-638E-STMARIE-2','66182OM0078 ','70b3d56371d4638e',42.7277226,3.0169591,'OM','ENTERRE','tôle galva'),     ('SAINTE MARIE LA MER','PASSAGE DIDEROT','I-C67E-6367-STMARIE-2','66182EMR0079','70b3d56371d46367',42.7277274,3.0169294,'DMR','ENTERRE','tôle galva'),     ('SAINTE MARIE LA MER','RUE DU PORT','T-388E-STMARIE-1','66182OM0081','244e7b000000388e',42.724838,3.035995,'OM','ENTERRE','tôle galva'),     ('SAINTE MARIE LA MER','RUE DU PORT','T-29A4-STMARIE-1','66182EMR0021','244e7b00000029a4',42.724840,3.036088,'DMR','ENTERRE','tôle galva'),     ('TORREILLES','AV JOFFRE','I-BEF5-61C1-TOREILLES-1','66212OM0015 ','70b3d56371d461c1',42.7549939,2.9934861,'OM','ENTERRE','lame bois composite'),     ('TORREILLES','AV JOFFRE','I-BEF5-640A-TOREILLES-1','66212EMR0014','70b3d56371d4640a',42.755025,2.9934555,'DMR','ENTERRE','lame bois composite'),     ('PERPIGNAN','PERPIGNAN 2 RUE FRESNEL','T-3964-TOREILLES-2','66136OM0888','244e7b0000003964',42.694403,2.878298,'OM','AERIEN','Tôle galva'),     ('PERPIGNAN','PERPIGNAN 2 RUE FRESNEL','T-2876-TOREILLES-2','66136EMR0889','244e7b0000002876',42.694403,2.878298,'DMR','AERIEN','Tôle galva'),     ('TAUTAVEL','AVENUE LOUIS BAIXAS','T-3981-TAUTAVEL-1','66205OM0006 ','244e7b0000003981',42.8150068,2.7483979,'OM','ENTERRE','tôle galva'),     ('TAUTAVEL','AVENUE LOUIS BAIXAS','T-2973-TAUTAVEL-1','66205EMR0007','244e7b0000002973',42.815004, 2.748416,'DMR','ENTERRE','tôle galva'),     ('TAUTAVEL','PLACE DE L''ILLE','T-3997-TAUTAVEL-2','66205OM0014 ','244e7b0000003997',42.8129963,2.745017,'OM','ENTERRE','tôle galva avec rebord'),     ('TAUTAVEL','PLACE DE L''ILLE','T-2945-TAUTAVEL-2','66205EMR0015','244e7b0000002945',42.8130033,2.7449879,'DMR','ENTERRE','tôle galva avec rebord'),     ('VINGRAU','ROUTE DE TAUTAVEL','T-3885-VINGRAU-2','66231OM0003','244e7b0000003885',42.846353,2.778075,'OM','ENTERRE','tôle galva'),     ('VINGRAU','ROUTE DE TAUTAVEL','T-2995-VINGRAU-2','66231EMR0009','244e7b0000002995',42.846390,2.778099,'DMR','ENTERRE','tôle galva'),     ('VINGRAU','RUE RAMEAU','T-38A8-VINGRAU-1','66231EMR0001','244e7b00000038a8',42.849548,2.7794434,'DMR','ENTERRE','tôle galva'),     ('VINGRAU','RUE RAMEAU','T-29EC-VINGRAU-1','66231OM0001','244e7b00000029ec',42.8495292,2.7795501,'OM','ENTERRE','tôle galva'),     ('CASSAGNES','RUE DE LA CARRERADE','T-3842-CASSAGNES-2','66042OM0010','244e7b0000003942',42.7402469,2.6143246,'OM','ENTERRE','tôle galva'),     ('CASSAGNES','RUE DE LA CARRERADE','T-29D1-CASSAGNES-2','66042EMR0011','244e7b00000029d1',42.7402641,2.6143497,'DMR','ENTERRE','tôle galva'),     ('CASSAGNES','RUE DES CAPITELLES','T-38B2-CASSAGNES-1','66042OM0007','244e7b00000038b2',42.739208,2.6116456,'OM','ENTERRE','tôle galva'),     ('CASSAGNES','RUE DES CAPITELLES','T-3901-CASSAGNES-1','66042EMR0008','244e7b0000003901',42.7392165,2.6116146,'DMR','ENTERRE','tôle galva'),     ('MONTNER','RUE DE L''EGLISE','G-55E7-MONTNER-2','66118OM0010','0004a30b00ed55e7',42.7492248,2.6759077,'OM','ENTERRE','tôle galva'),     ('MONTNER','RUE DE L''EGLISE','T-29AC-MONTNER-2','66118EMR0011','244e7b00000029ac',42.7492008,2.675903,'DMR','ENTERRE','tôle galva'),     ('MONTNER','RUE DES MIMOSAS','T-3A22-MONTNER-1','66118OM0008','244e7b0000003a22',42.747885,2.6781916,'OM','ENTERRE','tôle galva'),     ('MONTNER','RUE DES MIMOSAS','T-294D-MONTNER-1','66118EMR0009','244e7b000000294d',42.7478716,2.6781762,'DMR','ENTERRE','tôle galva'),     ('LE BARCARES','RUE RIBERE BEILLE','I-C7F3-65A7-BARCARES-2','66017OM0261 ','70b3d56371d465a7',42.7830472,3.0356424,'OM','ENTERRE','EPDM'),     ('LE BARCARES','RUE RIBERE BEILLE','I-C7F3-636D-BARCARES-2','66017EMR0262','70b3d56371d4636d',42.7830341,3.0356279,'DMR','ENTERRE','EPDM'),     ('LE BARCARES','AV GRAND PLAGE ANGLE CATALAN','T-38B5-BARCARES-1','66117OM0268','244e7b00000038b5',42.8378958,3.0406505,'OM','ENTERRE','tôle galva'),     ('LE BARCARES','AV GRAND PLAGE ANGLE CATALAN','T-29F3-BARCARES-1','66117EMR0267','244e7b00000029f3',42.8378627,3.040647,'DMR','ENTERRE','tôle galva');",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "a5d3e956.3b78b8",
        "type": "function",
        "z": "95955858.b23038",
        "name": "codesig",
        "func": "\nvar newMsg = {\n  \"topic\": \"SELECT CodeSig FROM Capteurs WHERE Name = \" + \"\\'\" + msg.payload.name + \"\\'\" + \";\"\n\n}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 180,
        "wires": [
            [
                "42ff231f.b2950c",
                "67752e34.75ff9"
            ]
        ]
    },
    {
        "id": "42ff231f.b2950c",
        "type": "sqlite",
        "z": "95955858.b23038",
        "mydb": "7b61aa47.31c724",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Capteurs",
        "x": 620,
        "y": 140,
        "wires": [
            [
                "a84b829f.262b2"
            ]
        ]
    },
    {
        "id": "a84b829f.262b2",
        "type": "function",
        "z": "95955858.b23038",
        "name": "ajout code sig",
        "func": "var newMsg = { payload: msg.payload };\nmsg.payload=[];\n\nmsg.payload = { \n    \"CodeSig\":newMsg.payload[0].CodeSig\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 100,
        "wires": [
            [
                "5696ab6a.948394"
            ]
        ]
    },
    {
        "id": "158f29ff.626ae6",
        "type": "debug",
        "z": "95955858.b23038",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 410,
        "y": 100,
        "wires": []
    },
    {
        "id": "3b65f70e.069f18",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "Tekelek vie",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"T-3997-TAUTAVEL-2\",\"devEUI\":\"70b3d56371d4bef5\",\"rxInfo\":[{\"gatewayID\":\"00800000a0007710\",\"uplinkID\":\"e49b57cb-39bf-4cb4-a9e3-489b84132538\",\"name\":\"Gateway_P04_Barcares_Pylone\",\"time\":\"2021-06-18T16:56:49.969562Z\",\"rssi\":-114,\"loRaSNR\":-12.5,\"location\":{\"latitude\":42.7981,\"longitude\":3.03119,\"altitude\":19}}],\"txInfo\":{\"frequency\":868500000,\"dr\":0},\"adr\":true,\"fCnt\":24,\"fPort\":5,\"data\":\"MAAAAgEJNQB3AGMAWgYAlRmh\",\"DevEUI\":\"70b3d56371d464A\",\"time\":1624035410.345,\"name\":\"T-3997-TAUTAVEL-2\",\"Distance\":226.3,\"Temperature\":28,\"Battery\":100}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "49192ad0.9ead54",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "DELETE",
        "topic": "DELETE FROM Level where Name = \"G-F761-STMARIE-2\"; ",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "9d331bdf.02cb48",
        "type": "inject",
        "z": "95955858.b23038",
        "d": true,
        "name": "UPDATE Codesig",
        "topic": "UPDATE Capteurs SET CodeSig=\"66212OM0015\" WHERE CodeSig=\"66212OM0015 \";",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 190,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "a0d22cea.501d6",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "UPDATE Codesig",
        "topic": "UPDATE Level SET CodeSig=\"66212OM0015\" WHERE Name=\"I-BEF5-61C1-TOREILLES-1\";",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "8dd92f5a.8bbfd",
        "type": "debug",
        "z": "95955858.b23038",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 20,
        "wires": []
    },
    {
        "id": "3ed1d266.df773e",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "trame2",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"T-3901-CASSAGNES-1\",\"devEUI\":\"244e7b0000003901\",\"rxInfo\":[{\"gatewayID\":\"00800000a0007528\",\"uplinkID\":\"8e0afb2c-6c3b-4785-94fa-4345276d1f35\",\"name\":\"Gateway_P08_Cassagnes\",\"rssi\":-110,\"loRaSNR\":-0.5,\"location\":{\"latitude\":42.7348,\"longitude\":2.60799,\"altitude\":418}}],\"txInfo\":{\"frequency\":867300000,\"dr\":5},\"adr\":true,\"fCnt\":21,\"fPort\":16,\"data\":\"EAAAAACOGqEAixehAIgUpgCHE6U=\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "362f9b0b.184fd4",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "trame",
        "topic": "",
        "payload": "{\"applicationID\":\"1\",\"applicationName\":\"app_pmm\",\"deviceName\":\"I-C67E-STMARIE-2\",\"devEUI\":\"70b3d56371d4c67e\",\"rxInfo\":[{\"gatewayID\":\"00800000a00070ed\",\"uplinkID\":\"16488297-0e77-4c9c-99d6-06e055b5490d\",\"name\":\"Gateway_P03_Barcares_Sardanne\",\"time\":\"2021-07-08T09:33:56.073467Z\",\"rssi\":-113,\"loRaSNR\":-17.8,\"location\":{\"latitude\":42.8293,\"longitude\":3.04047,\"altitude\":38}}],\"txInfo\":{\"frequency\":867300000,\"dr\":0},\"adr\":true,\"fCnt\":226,\"fPort\":1,\"data\":\"SRWpipwAAAAAAEEBAQAAAAcAB3wAEJx1WjEAAAAA\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "5696ab6a.948394",
        "type": "join",
        "z": "95955858.b23038",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "0.5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 610,
        "y": 60,
        "wires": [
            [
                "e0be82e1.a832d"
            ]
        ]
    },
    {
        "id": "615f574c.c17518",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "UPDATE Name",
        "topic": "UPDATE Level SET Name=\"I-BEF5-6330-TOREILLES-1\" WHERE Name=\"I-BEF5-61C1-TOREILLES-1\";",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "cf85c77.567ef38",
        "type": "inject",
        "z": "95955858.b23038",
        "d": true,
        "name": "UPDATE Name",
        "topic": "UPDATE Capteurs SET Name=\"I-BEF5-6330-TOREILLES-1\" WHERE Name=\"I-BEF5-61C1-TOREILLES-1\";",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 200,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "cbeb5d4c.ccd5e",
        "type": "sqlite",
        "z": "95955858.b23038",
        "mydb": "7b61aa47.31c724",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Capteurs",
        "x": 1220,
        "y": 360,
        "wires": [
            [
                "a24451a1.2d1b4"
            ]
        ]
    },
    {
        "id": "e1bd724d.7a642",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "DROP",
        "topic": "DROP table Capteurs;",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1050,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "6444e09c.c1703",
        "type": "function",
        "z": "95955858.b23038",
        "name": "INSERT",
        "func": "if(msg.payload.Battery) {\n    var newMsg = {\n        \"topic\": \"UPDATE Capteurs SET Battery=\" + \"\\'\" + \n            msg.payload.Battery + \"\\' \" +  \"WHERE name=\" + \"\\'\" +  \n            msg.payload.Name + \"\\'\" + \";\"\n    }\nreturn newMsg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 320,
        "wires": [
            [
                "55714c2d.789b94",
                "cbeb5d4c.ccd5e"
            ]
        ]
    },
    {
        "id": "27528b46.2f6454",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "SELECT",
        "topic": "SELECT * FROM Capteurs;",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1040,
        "y": 360,
        "wires": [
            [
                "cbeb5d4c.ccd5e"
            ]
        ]
    },
    {
        "id": "55714c2d.789b94",
        "type": "debug",
        "z": "95955858.b23038",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "x": 1220,
        "y": 320,
        "wires": []
    },
    {
        "id": "a24451a1.2d1b4",
        "type": "debug",
        "z": "95955858.b23038",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1270,
        "y": 400,
        "wires": []
    },
    {
        "id": "eb1f0a38.69b8f8",
        "type": "link in",
        "z": "95955858.b23038",
        "name": "1.1",
        "links": [
            "a7adb2c1.58857",
            "f2ba296c.d81748",
            "9eaa747c.8cbef8",
            "993a6276.76809",
            "767dc9a0.252178"
        ],
        "x": 935,
        "y": 320,
        "wires": [
            [
                "6444e09c.c1703"
            ]
        ]
    },
    {
        "id": "74961e7c.262cc",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "ALTER",
        "topic": "ALTER TABLE Capteurs RENAME COLUMN Battery TO Battery_old;",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1050,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "44deb3b7.6af19c",
        "type": "inject",
        "z": "95955858.b23038",
        "name": "ADD",
        "topic": "ALTER TABLE Capteurs ADD Battery REAL;",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1050,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "c25a4b25.ca1b38",
        "type": "link in",
        "z": "ad99b549.c0c208",
        "name": "",
        "links": [
            "a7adb2c1.58857"
        ],
        "x": 75,
        "y": 820,
        "wires": [
            [
                "edc75aaa.f77cd8"
            ]
        ]
    },
    {
        "id": "1d7f9efa.e84e61",
        "type": "mqtt in",
        "z": "ad99b549.c0c208",
        "d": true,
        "name": "",
        "topic": "alert",
        "qos": "2",
        "datatype": "auto",
        "broker": "f5ac79fa.1c2f28",
        "x": 310,
        "y": 780,
        "wires": [
            [
                "972dd927.5a6148"
            ]
        ]
    },
    {
        "id": "9fa8fc5c.d1eee",
        "type": "link out",
        "z": "95955858.b23038",
        "name": "",
        "links": [
            "15bfc432.fbad6c",
            "cc72dc95.d9341"
        ],
        "x": 395,
        "y": 340,
        "wires": []
    },
    {
        "id": "cc72dc95.d9341",
        "type": "link in",
        "z": "ad99b549.c0c208",
        "name": "",
        "links": [
            "9fa8fc5c.d1eee"
        ],
        "x": 195,
        "y": 100,
        "wires": [
            [
                "71b30992.ba62f8",
                "4e5ecf04.a50ce"
            ]
        ]
    }
]